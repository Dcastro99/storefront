{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useRef, useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport Dropdown from '../internal/components/dropdown';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport Filter from './parts/filter';\nimport Trigger from './parts/trigger';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { getBaseProps } from '../internal/base-component';\nimport { prepareOptions } from '../internal/components/option/utils/prepare-options';\nimport { useSelect } from './utils/use-select';\nimport { checkOptionValueField } from './utils/check-option-value-field';\nimport { useNativeSearch } from './utils/use-native-search';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useLoadItems } from './utils/use-load-items';\nimport { useAnnouncement } from './utils/use-announcement';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport PlainList from './parts/plain-list';\nimport VirtualList from './parts/virtual-list';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar InternalSelect = React.forwardRef(function (_a, externalRef) {\n  var _b;\n  var options = _a.options,\n    _c = _a.filteringType,\n    filteringType = _c === void 0 ? 'none' : _c,\n    filteringPlaceholder = _a.filteringPlaceholder,\n    filteringAriaLabel = _a.filteringAriaLabel,\n    ariaRequired = _a.ariaRequired,\n    placeholder = _a.placeholder,\n    disabled = _a.disabled,\n    ariaLabel = _a.ariaLabel,\n    _d = _a.statusType,\n    statusType = _d === void 0 ? 'finished' : _d,\n    empty = _a.empty,\n    loadingText = _a.loadingText,\n    finishedText = _a.finishedText,\n    errorText = _a.errorText,\n    recoveryText = _a.recoveryText,\n    noMatch = _a.noMatch,\n    _e = _a.triggerVariant,\n    triggerVariant = _e === void 0 ? 'label' : _e,\n    selectedAriaLabel = _a.selectedAriaLabel,\n    renderHighlightedAriaLive = _a.renderHighlightedAriaLive,\n    selectedOption = _a.selectedOption,\n    onBlur = _a.onBlur,\n    onFocus = _a.onFocus,\n    onLoadItems = _a.onLoadItems,\n    onChange = _a.onChange,\n    virtualScroll = _a.virtualScroll,\n    expandToViewport = _a.expandToViewport,\n    __inFilteringToken = _a.__inFilteringToken,\n    _f = _a.__internalRootRef,\n    __internalRootRef = _f === void 0 ? null : _f,\n    restProps = __rest(_a, [\"options\", \"filteringType\", \"filteringPlaceholder\", \"filteringAriaLabel\", \"ariaRequired\", \"placeholder\", \"disabled\", \"ariaLabel\", \"statusType\", \"empty\", \"loadingText\", \"finishedText\", \"errorText\", \"recoveryText\", \"noMatch\", \"triggerVariant\", \"selectedAriaLabel\", \"renderHighlightedAriaLive\", \"selectedOption\", \"onBlur\", \"onFocus\", \"onLoadItems\", \"onChange\", \"virtualScroll\", \"expandToViewport\", \"__inFilteringToken\", \"__internalRootRef\"]);\n  var baseProps = getBaseProps(restProps);\n  var formFieldContext = useFormFieldContext(restProps);\n  var _g = useLoadItems({\n      onLoadItems: onLoadItems,\n      options: options,\n      statusType: statusType\n    }),\n    handleLoadMore = _g.handleLoadMore,\n    handleRecoveryClick = _g.handleRecoveryClick,\n    fireLoadItems = _g.fireLoadItems;\n  checkControlled('Select', 'selectedOption', selectedOption, 'onChange', onChange);\n  checkOptionValueField('Select', 'options', options);\n  var _h = useState(''),\n    filteringValue = _h[0],\n    setFilteringValue = _h[1];\n  var _j = prepareOptions(options, filteringType, filteringValue),\n    filteredOptions = _j.filteredOptions,\n    parentMap = _j.parentMap;\n  var rootRef = useRef(null);\n  var triggerRef = useRef(null);\n  var selfControlId = useUniqueId('trigger');\n  var controlId = (_b = formFieldContext.controlId) !== null && _b !== void 0 ? _b : selfControlId;\n  var scrollToIndex = useRef(null);\n  var _k = useSelect({\n      selectedOptions: selectedOption ? [selectedOption] : [],\n      updateSelectedOption: function (option) {\n        return fireNonCancelableEvent(onChange, {\n          selectedOption: option\n        });\n      },\n      options: filteredOptions,\n      filteringType: filteringType,\n      onBlur: onBlur,\n      onFocus: onFocus,\n      externalRef: externalRef,\n      fireLoadItems: fireLoadItems,\n      setFilteringValue: setFilteringValue\n    }),\n    isOpen = _k.isOpen,\n    highlightType = _k.highlightType,\n    highlightedOption = _k.highlightedOption,\n    highlightedIndex = _k.highlightedIndex,\n    getTriggerProps = _k.getTriggerProps,\n    getFilterProps = _k.getFilterProps,\n    getRecoveryProps = _k.getRecoveryProps,\n    getMenuProps = _k.getMenuProps,\n    getOptionProps = _k.getOptionProps,\n    highlightOption = _k.highlightOption,\n    selectOption = _k.selectOption,\n    announceSelected = _k.announceSelected;\n  var handleNativeSearch = useNativeSearch({\n    isEnabled: filteringType === 'none',\n    options: filteredOptions,\n    highlightOption: !isOpen ? selectOption : highlightOption,\n    highlightedOption: !isOpen ? selectedOption : highlightedOption === null || highlightedOption === void 0 ? void 0 : highlightedOption.option\n  });\n  useEffect(function () {\n    var _a;\n    (_a = scrollToIndex.current) === null || _a === void 0 ? void 0 : _a.call(scrollToIndex, highlightedIndex);\n  }, [highlightedIndex]);\n  var filter = React.createElement(Filter, __assign({\n    filteringType: filteringType,\n    placeholder: filteringPlaceholder,\n    ariaLabel: filteringAriaLabel,\n    ariaRequired: ariaRequired,\n    value: filteringValue\n  }, getFilterProps()));\n  var trigger = React.createElement(Trigger, __assign({\n    ref: triggerRef,\n    placeholder: placeholder,\n    disabled: disabled,\n    ariaLabel: ariaLabel,\n    triggerVariant: triggerVariant,\n    triggerProps: getTriggerProps(disabled),\n    selectedOption: selectedOption,\n    isOpen: isOpen,\n    inFilteringToken: __inFilteringToken\n  }, formFieldContext, {\n    controlId: controlId\n  }));\n  var menuProps = __assign(__assign({}, getMenuProps()), {\n    onLoadMore: handleLoadMore,\n    ariaLabelledby: controlId\n  });\n  var isEmpty = !options || options.length === 0;\n  var isNoMatch = filteredOptions && filteredOptions.length === 0;\n  var dropdownStatus = useDropdownStatus({\n    statusType: statusType,\n    empty: empty,\n    loadingText: loadingText,\n    finishedText: finishedText,\n    errorText: errorText,\n    recoveryText: recoveryText,\n    isEmpty: isEmpty,\n    isNoMatch: isNoMatch,\n    noMatch: noMatch,\n    onRecoveryClick: handleRecoveryClick,\n    recoveryProps: getRecoveryProps()\n  });\n  var announcement = useAnnouncement({\n    announceSelected: announceSelected,\n    highlightedOption: highlightedOption,\n    getParent: function (option) {\n      var _a;\n      return (_a = parentMap.get(option)) === null || _a === void 0 ? void 0 : _a.option;\n    },\n    selectedAriaLabel: selectedAriaLabel,\n    renderHighlightedAriaLive: renderHighlightedAriaLive\n  });\n  var ListComponent = virtualScroll ? VirtualList : PlainList;\n  var handleMouseDown = function (event) {\n    var target = event.target;\n    if (target !== document.activeElement) {\n      // prevent currently focused element from losing it\n      event.preventDefault();\n    }\n  };\n  var mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(styles.root, baseProps.className),\n    onKeyPress: handleNativeSearch\n  }), React.createElement(Dropdown, {\n    open: isOpen,\n    stretchTriggerHeight: __inFilteringToken,\n    trigger: trigger,\n    header: filter,\n    onMouseDown: handleMouseDown,\n    footer: dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n      content: dropdownStatus.content\n    }) : null,\n    expandToViewport: expandToViewport\n  }, React.createElement(ListComponent, {\n    listBottom: !dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n      content: dropdownStatus.content\n    }) : null,\n    menuProps: menuProps,\n    getOptionProps: getOptionProps,\n    filteredOptions: filteredOptions,\n    filteringValue: filteringValue,\n    ref: scrollToIndex,\n    hasDropdownStatus: dropdownStatus.content !== null,\n    screenReaderContent: announcement,\n    highlightType: highlightType\n  })));\n});\nexport default InternalSelect;","map":{"version":3,"mappings":"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","names":["React","useState","useRef","useEffect","clsx","styles","Dropdown","useDropdownStatus","Filter","Trigger","useUniqueId","getBaseProps","prepareOptions","useSelect","checkOptionValueField","useNativeSearch","fireNonCancelableEvent","useLoadItems","useAnnouncement","useFormFieldContext","PlainList","VirtualList","DropdownFooter","checkControlled","useMergeRefs","InternalSelect","forwardRef","_a","externalRef","_c","filteringType","filteringPlaceholder","filteringAriaLabel","ariaRequired","placeholder","disabled","ariaLabel","_d","statusType","empty","loadingText","finishedText","errorText","recoveryText","noMatch","_e","triggerVariant","selectedAriaLabel","renderHighlightedAriaLive","selectedOption","onBlur","onFocus","onLoadItems","onChange","virtualScroll","expandToViewport","__inFilteringToken","_f","__internalRootRef","restProps","baseProps","formFieldContext","options","handleLoadMore","handleRecoveryClick","fireLoadItems","filteringValue","setFilteringValue","filteredOptions","parentMap","rootRef","triggerRef","selfControlId","controlId","scrollToIndex","selectedOptions","updateSelectedOption","option","isOpen","highlightType","highlightedOption","highlightedIndex","getTriggerProps","getFilterProps","getRecoveryProps","getMenuProps","getOptionProps","highlightOption","selectOption","announceSelected","handleNativeSearch","isEnabled","current","filter","value","trigger","ref","triggerProps","inFilteringToken","menuProps","onLoadMore","ariaLabelledby","isEmpty","length","isNoMatch","dropdownStatus","onRecoveryClick","recoveryProps","announcement","getParent","get","ListComponent","handleMouseDown","event","target","document","activeElement","preventDefault","mergedRef","className","root","onKeyPress","open","stretchTriggerHeight","header","onMouseDown","footer","isSticky","content","listBottom","hasDropdownStatus","screenReaderContent"],"sources":["/Users/dcastro/node_modules/src/select/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useRef, useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\n\nimport Dropdown from '../internal/components/dropdown';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport Filter from './parts/filter';\nimport Trigger from './parts/trigger';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { SelectProps } from './interfaces';\nimport { prepareOptions } from '../internal/components/option/utils/prepare-options';\nimport { useSelect } from './utils/use-select';\nimport { checkOptionValueField } from './utils/check-option-value-field';\nimport { useNativeSearch } from './utils/use-native-search';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useLoadItems } from './utils/use-load-items';\nimport { useAnnouncement } from './utils/use-announcement';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport PlainList, { SelectListProps } from './parts/plain-list';\nimport VirtualList from './parts/virtual-list';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { OptionGroup } from '../internal/components/option/interfaces.js';\nimport { SomeRequired } from '../internal/types.js';\n\nexport interface InternalSelectProps extends SomeRequired<SelectProps, 'options'>, InternalBaseComponentProps {\n  __inFilteringToken?: boolean;\n}\n\nconst InternalSelect = React.forwardRef(\n  (\n    {\n      options,\n      filteringType = 'none',\n      filteringPlaceholder,\n      filteringAriaLabel,\n      ariaRequired,\n      placeholder,\n      disabled,\n      ariaLabel,\n      statusType = 'finished',\n      empty,\n      loadingText,\n      finishedText,\n      errorText,\n      recoveryText,\n      noMatch,\n      triggerVariant = 'label',\n      selectedAriaLabel,\n      renderHighlightedAriaLive,\n      selectedOption,\n      onBlur,\n      onFocus,\n      onLoadItems,\n      onChange,\n      virtualScroll,\n      expandToViewport,\n      __inFilteringToken,\n      __internalRootRef = null,\n      ...restProps\n    }: InternalSelectProps,\n    externalRef: React.Ref<SelectProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(restProps);\n    const formFieldContext = useFormFieldContext(restProps);\n\n    const { handleLoadMore, handleRecoveryClick, fireLoadItems } = useLoadItems({\n      onLoadItems,\n      options,\n      statusType,\n    });\n\n    checkControlled('Select', 'selectedOption', selectedOption, 'onChange', onChange);\n\n    checkOptionValueField('Select', 'options', options);\n\n    const [filteringValue, setFilteringValue] = useState('');\n\n    const { filteredOptions, parentMap } = prepareOptions(options, filteringType, filteringValue);\n\n    const rootRef = useRef<HTMLDivElement>(null);\n    const triggerRef = useRef<HTMLButtonElement>(null);\n\n    const selfControlId = useUniqueId('trigger');\n    const controlId = formFieldContext.controlId ?? selfControlId;\n\n    const scrollToIndex = useRef<SelectListProps.SelectListRef>(null);\n    const {\n      isOpen,\n      highlightType,\n      highlightedOption,\n      highlightedIndex,\n      getTriggerProps,\n      getFilterProps,\n      getRecoveryProps,\n      getMenuProps,\n      getOptionProps,\n      highlightOption,\n      selectOption,\n      announceSelected,\n    } = useSelect({\n      selectedOptions: selectedOption ? [selectedOption] : [],\n      updateSelectedOption: option => fireNonCancelableEvent(onChange, { selectedOption: option }),\n      options: filteredOptions,\n      filteringType,\n      onBlur,\n      onFocus,\n      externalRef,\n      fireLoadItems,\n      setFilteringValue,\n    });\n\n    const handleNativeSearch = useNativeSearch({\n      isEnabled: filteringType === 'none',\n      options: filteredOptions,\n      highlightOption: !isOpen ? selectOption : highlightOption,\n      highlightedOption: !isOpen ? selectedOption : highlightedOption?.option,\n    });\n\n    useEffect(() => {\n      scrollToIndex.current?.(highlightedIndex);\n    }, [highlightedIndex]);\n\n    const filter = (\n      <Filter\n        filteringType={filteringType}\n        placeholder={filteringPlaceholder}\n        ariaLabel={filteringAriaLabel}\n        ariaRequired={ariaRequired}\n        value={filteringValue}\n        {...getFilterProps()}\n      />\n    );\n\n    const trigger = (\n      <Trigger\n        ref={triggerRef}\n        placeholder={placeholder}\n        disabled={disabled}\n        ariaLabel={ariaLabel}\n        triggerVariant={triggerVariant}\n        triggerProps={getTriggerProps(disabled)}\n        selectedOption={selectedOption}\n        isOpen={isOpen}\n        inFilteringToken={__inFilteringToken}\n        {...formFieldContext}\n        controlId={controlId}\n      />\n    );\n\n    const menuProps = {\n      ...getMenuProps(),\n      onLoadMore: handleLoadMore,\n      ariaLabelledby: controlId,\n    };\n\n    const isEmpty = !options || options.length === 0;\n    const isNoMatch = filteredOptions && filteredOptions.length === 0;\n    const dropdownStatus = useDropdownStatus({\n      statusType,\n      empty,\n      loadingText,\n      finishedText,\n      errorText,\n      recoveryText,\n      isEmpty,\n      isNoMatch,\n      noMatch,\n      onRecoveryClick: handleRecoveryClick,\n      recoveryProps: getRecoveryProps(),\n    });\n\n    const announcement = useAnnouncement({\n      announceSelected,\n      highlightedOption,\n      getParent: option => parentMap.get(option)?.option as undefined | OptionGroup,\n      selectedAriaLabel,\n      renderHighlightedAriaLive,\n    });\n\n    const ListComponent = virtualScroll ? VirtualList : PlainList;\n\n    const handleMouseDown = (event: React.MouseEvent) => {\n      const target = event.target as HTMLElement;\n\n      if (target !== document.activeElement) {\n        // prevent currently focused element from losing it\n        event.preventDefault();\n      }\n    };\n\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    return (\n      <div\n        {...baseProps}\n        ref={mergedRef}\n        className={clsx(styles.root, baseProps.className)}\n        onKeyPress={handleNativeSearch}\n      >\n        <Dropdown\n          open={isOpen}\n          stretchTriggerHeight={__inFilteringToken}\n          trigger={trigger}\n          header={filter}\n          onMouseDown={handleMouseDown}\n          footer={dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} /> : null}\n          expandToViewport={expandToViewport}\n        >\n          <ListComponent\n            listBottom={!dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} /> : null}\n            menuProps={menuProps}\n            getOptionProps={getOptionProps}\n            filteredOptions={filteredOptions}\n            filteringValue={filteringValue}\n            ref={scrollToIndex}\n            hasDropdownStatus={dropdownStatus.content !== null}\n            screenReaderContent={announcement}\n            highlightType={highlightType}\n          />\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\nexport default InternalSelect;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}