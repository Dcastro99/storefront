{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { containsOrEqual } from './utils/dom';\nvar FocusTracker = /** @class */function () {\n  function FocusTracker(node, _a, viewportId) {\n    var onFocusEnter = _a.onFocusEnter,\n      onFocusLeave = _a.onFocusLeave;\n    if (viewportId === void 0) {\n      viewportId = '';\n    }\n    var _this = this;\n    this.node = node;\n    this.currentlyFocused = false;\n    this.focusInListener = function (event) {\n      var focusIsInside = containsOrEqual(_this.node, event.target);\n      if (!_this.currentlyFocused && focusIsInside) {\n        _this.triggerFocus();\n      }\n    };\n    this.focusOutListener = function (event) {\n      var nextFocused = event.relatedTarget;\n      var isNextFocusedInParent = !containsOrEqual(_this.node, nextFocused);\n      if (_this.viewportId) {\n        var viewport = document.getElementById(_this.viewportId);\n        isNextFocusedInParent = isNextFocusedInParent && !containsOrEqual(viewport, nextFocused);\n      }\n      if (_this.currentlyFocused && (nextFocused === null || isNextFocusedInParent)) {\n        _this.triggerBlur();\n      }\n    };\n    this.onFocusEnter = onFocusEnter;\n    this.onFocusLeave = onFocusLeave;\n    this.viewportId = viewportId;\n  }\n  FocusTracker.prototype.initialize = function () {\n    this.currentlyFocused = containsOrEqual(this.node, document.activeElement);\n    document.addEventListener('focusin', this.focusInListener);\n    document.addEventListener('focusout', this.focusOutListener);\n  };\n  FocusTracker.prototype.destroy = function () {\n    document.removeEventListener('focusin', this.focusInListener);\n    document.removeEventListener('focusout', this.focusOutListener);\n  };\n  FocusTracker.prototype.triggerBlur = function () {\n    this.currentlyFocused = false;\n    this.onFocusLeave();\n  };\n  FocusTracker.prototype.triggerFocus = function () {\n    this.currentlyFocused = true;\n    this.onFocusEnter();\n  };\n  return FocusTracker;\n}();\nexport default FocusTracker;","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,eAAe,QAAQ,aAAa;AAO7C;EAOE,sBAAoBC,IAAiB,EAAEC,EAAmD,EAAEC,UAAe;QAAlEC,YAAY;MAAEC,YAAY;IAAyB;MAAAF,eAAe;IAAA;IAA3G;IAAoB,SAAI,GAAJF,IAAI;IAFhB,qBAAgB,GAAG,KAAK;IAmBxB,oBAAe,GAAG,UAACK,KAAiB;MAC1C,IAAMC,aAAa,GAAGP,eAAe,CAACQ,KAAI,CAACP,IAAI,EAAEK,KAAK,CAACG,MAAc,CAAC;MACtE,IAAI,CAACD,KAAI,CAACE,gBAAgB,IAAIH,aAAa,EAAE;QAC3CC,KAAI,CAACG,YAAY,EAAE;;IAEvB,CAAC;IAEO,qBAAgB,GAAG,UAACL,KAAiB;MAC3C,IAAMM,WAAW,GAAGN,KAAK,CAACO,aAAqB;MAC/C,IAAIC,qBAAqB,GAAG,CAACd,eAAe,CAACQ,KAAI,CAACP,IAAI,EAAEW,WAAW,CAAC;MAEpE,IAAIJ,KAAI,CAACL,UAAU,EAAE;QACnB,IAAMY,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAACT,KAAI,CAACL,UAAU,CAAC;QACzDW,qBAAqB,GAAGA,qBAAqB,IAAI,CAACd,eAAe,CAACe,QAAQ,EAAEH,WAAW,CAAC;;MAE1F,IAAIJ,KAAI,CAACE,gBAAgB,KAAKE,WAAW,KAAK,IAAI,IAAIE,qBAAqB,CAAC,EAAE;QAC5EN,KAAI,CAACU,WAAW,EAAE;;IAEtB,CAAC;IAlCC,IAAI,CAACd,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACF,UAAU,GAAGA,UAAU;EAC9B;EAEAgB,iCAAU,GAAV;IACE,IAAI,CAACT,gBAAgB,GAAGV,eAAe,CAAC,IAAI,CAACC,IAAI,EAAEe,QAAQ,CAACI,aAAoB,CAAC;IACjFJ,QAAQ,CAACK,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACC,eAAe,CAAC;IAC1DN,QAAQ,CAACK,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACE,gBAAgB,CAAC;EAC9D,CAAC;EAEDJ,8BAAO,GAAP;IACEH,QAAQ,CAACQ,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACF,eAAe,CAAC;IAC7DN,QAAQ,CAACQ,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACD,gBAAgB,CAAC;EACjE,CAAC;EAsBOJ,kCAAW,GAAnB;IACE,IAAI,CAACT,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAACL,YAAY,EAAE;EACrB,CAAC;EAEOc,mCAAY,GAApB;IACE,IAAI,CAACT,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACN,YAAY,EAAE;EACrB,CAAC;EACH,mBAAC;AAAD,CAAC,EArDD","names":["containsOrEqual","node","_a","viewportId","onFocusEnter","onFocusLeave","event","focusIsInside","_this","target","currentlyFocused","triggerFocus","nextFocused","relatedTarget","isNextFocusedInParent","viewport","document","getElementById","triggerBlur","FocusTracker","activeElement","addEventListener","focusInListener","focusOutListener","removeEventListener"],"sources":["/Users/dcastro/node_modules/src/internal/focus-tracker.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { containsOrEqual } from './utils/dom';\n\ninterface FocusTrackerOptions {\n  onFocusEnter: () => void;\n  onFocusLeave: () => void;\n}\n\nexport default class FocusTracker {\n  private readonly onFocusLeave: () => void;\n  private readonly onFocusEnter: () => void;\n  private readonly viewportId: string;\n\n  private currentlyFocused = false;\n\n  constructor(private node: HTMLElement, { onFocusEnter, onFocusLeave }: FocusTrackerOptions, viewportId = '') {\n    this.onFocusEnter = onFocusEnter;\n    this.onFocusLeave = onFocusLeave;\n    this.viewportId = viewportId;\n  }\n\n  initialize() {\n    this.currentlyFocused = containsOrEqual(this.node, document.activeElement as any);\n    document.addEventListener('focusin', this.focusInListener);\n    document.addEventListener('focusout', this.focusOutListener);\n  }\n\n  destroy() {\n    document.removeEventListener('focusin', this.focusInListener);\n    document.removeEventListener('focusout', this.focusOutListener);\n  }\n\n  private focusInListener = (event: FocusEvent) => {\n    const focusIsInside = containsOrEqual(this.node, event.target as Node);\n    if (!this.currentlyFocused && focusIsInside) {\n      this.triggerFocus();\n    }\n  };\n\n  private focusOutListener = (event: FocusEvent) => {\n    const nextFocused = event.relatedTarget as Node;\n    let isNextFocusedInParent = !containsOrEqual(this.node, nextFocused);\n\n    if (this.viewportId) {\n      const viewport = document.getElementById(this.viewportId);\n      isNextFocusedInParent = isNextFocusedInParent && !containsOrEqual(viewport, nextFocused);\n    }\n    if (this.currentlyFocused && (nextFocused === null || isNextFocusedInParent)) {\n      this.triggerBlur();\n    }\n  };\n\n  private triggerBlur() {\n    this.currentlyFocused = false;\n    this.onFocusLeave();\n  }\n\n  private triggerFocus() {\n    this.currentlyFocused = true;\n    this.onFocusEnter();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}