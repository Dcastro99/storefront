{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, memo } from 'react';\nimport InternalFormField from '../../../form-field/internal';\nimport InternalMultiselect from '../../../multiselect/internal';\nimport { getBaseProps } from '../../base-component';\nimport SeriesMarker from '../chart-series-marker';\nimport styles from './styles.css.js';\nexport default memo(ChartFilter);\nfunction ChartFilter(_a) {\n  var series = _a.series,\n    i18nStrings = _a.i18nStrings,\n    selectedSeries = _a.selectedSeries,\n    onChange = _a.onChange,\n    restProps = __rest(_a, [\"series\", \"i18nStrings\", \"selectedSeries\", \"onChange\"]);\n  var baseProps = getBaseProps(restProps);\n  var className = clsx(baseProps.className, styles.root);\n  var defaultOptions = series.map(function (d, i) {\n    return {\n      label: d.label,\n      value: '' + i,\n      datum: d.datum,\n      __customIcon: React.createElement(\"span\", {\n        className: styles['custom-icon-wrapper']\n      }, React.createElement(SeriesMarker, {\n        color: d.color,\n        type: d.type\n      }))\n    };\n  });\n  var selectedOptions = defaultOptions.filter(function (option) {\n    return (selectedSeries === null || selectedSeries === void 0 ? void 0 : selectedSeries.indexOf(option.datum)) !== -1;\n  });\n  var updateSelection = useCallback(function (_a) {\n    var selectedOptions = _a.detail.selectedOptions;\n    var selectedSeries = defaultOptions.filter(function (option) {\n      return selectedOptions.indexOf(option) !== -1;\n    }).map(function (option) {\n      return option.datum;\n    });\n    onChange(selectedSeries);\n  }, [onChange, defaultOptions]);\n  return React.createElement(InternalFormField, __assign({}, baseProps, {\n    label: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterLabel,\n    className: className\n  }), React.createElement(InternalMultiselect, {\n    placeholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterPlaceholder,\n    options: defaultOptions,\n    selectedOptions: selectedOptions,\n    onChange: updateSelection,\n    className: styles['chart-filter'],\n    selectedAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterSelectedAriaLabel,\n    hideTokens: true\n  }));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,WAAW,EAAEC,IAAI,QAAQ,OAAO;AAGhD,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,mBAAmB,MAAM,+BAA+B;AAC/D,SAA6BC,YAAY,QAAQ,sBAAsB;AAEvE,OAAOC,YAAuC,MAAM,wBAAwB;AAE5E,OAAOC,MAAM,MAAM,iBAAiB;AAsBpC,eAAeL,IAAI,CAACM,WAAW,CAAuB;AAEtD,SAASA,WAAW,CAAIC,EAAoF;EAAlF,UAAM;IAAEC,WAAW;IAAEC,cAAc;IAAEC,QAAQ;IAAKC,SAAS,cAA7D,uDAA+D,CAAF;EACnF,IAAMC,SAAS,GAAGT,YAAY,CAACQ,SAAS,CAAC;EACzC,IAAME,SAAS,GAAGhB,IAAI,CAACe,SAAS,CAACC,SAAS,EAAER,MAAM,CAACS,IAAI,CAAC;EAExD,IAAMC,cAAc,GAAGC,MAAM,CAACC,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAK,OAAC;MAC3CC,KAAK,EAAEF,CAAC,CAACE,KAAK;MACdC,KAAK,EAAE,EAAE,GAAGF,CAAC;MACbG,KAAK,EAAEJ,CAAC,CAACI,KAAK;MACdC,YAAY,EACVzB;QAAMe,SAAS,EAAER,MAAM,CAAC,qBAAqB;MAAC,GAC5CP,oBAACM,YAAY;QAACoB,KAAK,EAAEN,CAAC,CAACM,KAAK;QAAEC,IAAI,EAAEP,CAAC,CAACO;MAAI,EAAI;KAGnD;EAT2C,CAS1C,CAAC;EAEH,IAAMC,eAAe,GAAGX,cAAc,CAACY,MAAM,CAAC,gBAAM;IAAI,sBAAc,aAAdlB,cAAc,uBAAdA,cAAc,CAAEmB,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC,MAAK,CAAC,CAAC;EAA5C,CAA4C,CAAC;EAErG,IAAMQ,eAAe,GAAG/B,WAAW,CACjC,UAACQ,EAA+B;QAAnBmB,eAAe;IAC1B,IAAMjB,cAAc,GAAGM,cAAc,CAClCY,MAAM,CAAC,gBAAM;MAAI,sBAAe,CAACC,OAAO,CAACC,MAAM,CAAC,KAAK,CAAC,CAAC;IAAtC,CAAsC,CAAC,CACxDZ,GAAG,CAAC,gBAAM;MAAI,aAAM,CAACK,KAAK;IAAZ,CAAY,CAAC;IAC9BZ,QAAQ,CAACD,cAAc,CAAC;EAC1B,CAAC,EACD,CAACC,QAAQ,EAAEK,cAAc,CAAC,CAC3B;EAED,OACEjB,oBAACG,iBAAiB,eAAKW,SAAS;IAAEQ,KAAK,EAAEZ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEuB,WAAW;IAAElB,SAAS,EAAEA;EAAS,IACrFf,oBAACI,mBAAmB;IAClB8B,WAAW,EAAExB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyB,iBAAiB;IAC3CC,OAAO,EAAEnB,cAAc;IACvBW,eAAe,EAAEA,eAAe;IAChChB,QAAQ,EAAEoB,eAAe;IACzBjB,SAAS,EAAER,MAAM,CAAC,cAAc,CAAC;IACjC8B,iBAAiB,EAAE3B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE4B,uBAAuB;IACvDC,UAAU,EAAE;EAAI,EAChB,CACgB;AAExB","names":["clsx","React","useCallback","memo","InternalFormField","InternalMultiselect","getBaseProps","SeriesMarker","styles","ChartFilter","_a","i18nStrings","selectedSeries","onChange","restProps","baseProps","className","root","defaultOptions","series","map","d","i","label","value","datum","__customIcon","color","type","selectedOptions","filter","indexOf","option","updateSelection","filterLabel","placeholder","filterPlaceholder","options","selectedAriaLabel","filterSelectedAriaLabel","hideTokens"],"sources":["/Users/dcastro/node_modules/src/internal/components/chart-filter/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, memo } from 'react';\n\nimport { NonCancelableEventHandler } from '../../events';\nimport InternalFormField from '../../../form-field/internal';\nimport InternalMultiselect from '../../../multiselect/internal';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport { MultiselectProps } from '../../../multiselect/interfaces';\nimport SeriesMarker, { ChartSeriesMarkerType } from '../chart-series-marker';\n\nimport styles from './styles.css.js';\n\ninterface I18nStrings {\n  filterLabel?: string;\n  filterPlaceholder?: string;\n  filterSelectedAriaLabel?: string;\n}\n\nexport interface ChartFilterItem<T> {\n  label: string;\n  color: string;\n  type: ChartSeriesMarkerType;\n  datum: T;\n}\n\nexport interface ChartFilterProps<T> extends BaseComponentProps {\n  series: ReadonlyArray<ChartFilterItem<T>>;\n  selectedSeries?: ReadonlyArray<T>;\n  onChange: (selectedSeries: ReadonlyArray<T>) => void;\n  i18nStrings?: I18nStrings;\n}\n\nexport default memo(ChartFilter) as typeof ChartFilter;\n\nfunction ChartFilter<T>({ series, i18nStrings, selectedSeries, onChange, ...restProps }: ChartFilterProps<T>) {\n  const baseProps = getBaseProps(restProps);\n  const className = clsx(baseProps.className, styles.root);\n\n  const defaultOptions = series.map((d, i) => ({\n    label: d.label,\n    value: '' + i,\n    datum: d.datum,\n    __customIcon: (\n      <span className={styles['custom-icon-wrapper']}>\n        <SeriesMarker color={d.color} type={d.type} />\n      </span>\n    ),\n  }));\n\n  const selectedOptions = defaultOptions.filter(option => selectedSeries?.indexOf(option.datum) !== -1);\n\n  const updateSelection = useCallback<NonCancelableEventHandler<MultiselectProps.MultiselectChangeDetail>>(\n    ({ detail: { selectedOptions } }) => {\n      const selectedSeries = defaultOptions\n        .filter(option => selectedOptions.indexOf(option) !== -1)\n        .map(option => option.datum);\n      onChange(selectedSeries);\n    },\n    [onChange, defaultOptions]\n  );\n\n  return (\n    <InternalFormField {...baseProps} label={i18nStrings?.filterLabel} className={className}>\n      <InternalMultiselect\n        placeholder={i18nStrings?.filterPlaceholder}\n        options={defaultOptions}\n        selectedOptions={selectedOptions}\n        onChange={updateSelection}\n        className={styles['chart-filter']}\n        selectedAriaLabel={i18nStrings?.filterSelectedAriaLabel}\n        hideTokens={true}\n      />\n    </InternalFormField>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}