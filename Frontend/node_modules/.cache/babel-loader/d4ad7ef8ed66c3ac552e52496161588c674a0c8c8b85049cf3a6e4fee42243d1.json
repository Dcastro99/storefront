{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../../button/internal';\nimport InternalLink from '../../link/internal';\nimport InternalIcon from '../../icon/internal';\nimport MenuDropdown from '../../internal/components/menu-dropdown';\nimport styles from '../styles.css.js';\nimport { checkSafeUrl } from '../../internal/utils/check-safe-url';\nexport default function Utility(_a) {\n  var _b;\n  var hideText = _a.hideText,\n    definition = _a.definition,\n    offsetRight = _a.offsetRight;\n  var hasIcon = !!definition.iconName || !!definition.iconUrl || !!definition.iconAlt || !!definition.iconSvg;\n  var shouldHideText = hideText && !definition.disableTextCollapse && hasIcon;\n  var ariaLabel = (_b = definition.ariaLabel) !== null && _b !== void 0 ? _b : definition.text;\n  if (definition.type === 'button') {\n    checkSafeUrl('TopNavigation', definition.href);\n    if (definition.variant === 'primary-button') {\n      return React.createElement(\"span\", {\n        className: styles[\"offset-right-\".concat(offsetRight)]\n      }, React.createElement(InternalButton, {\n        variant: \"primary\",\n        href: definition.href,\n        target: definition.external ? '_blank' : undefined,\n        onClick: definition.onClick,\n        ariaLabel: ariaLabel,\n        iconName: definition.iconName,\n        iconUrl: definition.iconUrl,\n        iconAlt: definition.iconAlt,\n        iconSvg: definition.iconSvg\n      }, shouldHideText ? null : React.createElement(React.Fragment, null, definition.text, definition.external && React.createElement(React.Fragment, null, ' ', React.createElement(\"span\", {\n        className: clsx(styles['utility-button-external-icon'], styles[\"offset-right-\".concat(offsetRight)]),\n        \"aria-label\": definition.externalIconAriaLabel,\n        role: definition.externalIconAriaLabel ? 'img' : undefined\n      }, React.createElement(InternalIcon, {\n        name: \"external\"\n      }))))));\n    } else {\n      // Link\n      return React.createElement(\"span\", {\n        className: styles[\"offset-right-\".concat(offsetRight)]\n      }, React.createElement(InternalLink, {\n        variant: \"top-navigation\",\n        href: definition.href,\n        target: definition.external ? '_blank' : undefined,\n        onFollow: definition.onClick,\n        ariaLabel: ariaLabel\n      }, hasIcon && React.createElement(InternalIcon, {\n        name: definition.iconName,\n        url: definition.iconUrl,\n        alt: definition.iconAlt,\n        svg: definition.iconSvg,\n        badge: definition.badge\n      }), !shouldHideText && definition.text && React.createElement(\"span\", {\n        className: hasIcon ? styles['utility-link-icon'] : undefined\n      }, definition.text), definition.external && React.createElement(React.Fragment, null, ' ', React.createElement(\"span\", {\n        role: definition.externalIconAriaLabel ? 'img' : undefined,\n        \"aria-label\": definition.externalIconAriaLabel\n      }, React.createElement(InternalIcon, {\n        name: \"external\",\n        size: \"normal\"\n      })))));\n    }\n  } else if (definition.type === 'menu-dropdown') {\n    var title = definition.title || definition.text;\n    var shouldShowTitle = shouldHideText || !definition.text;\n    checkSafeUrlRecursively(definition.items);\n    return React.createElement(MenuDropdown, __assign({}, definition, {\n      title: shouldShowTitle ? title : '',\n      ariaLabel: ariaLabel,\n      offsetRight: offsetRight\n    }), !shouldHideText && definition.text);\n  }\n  return null;\n}\nfunction checkSafeUrlRecursively(itemOrGroup) {\n  for (var _i = 0, itemOrGroup_1 = itemOrGroup; _i < itemOrGroup_1.length; _i++) {\n    var item = itemOrGroup_1[_i];\n    checkSafeUrl('TopNavigation', item.href);\n    if ('items' in item) {\n      checkSafeUrlRecursively(item.items);\n    }\n  }\n}","map":{"version":3,"mappings":"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","names":["React","clsx","InternalButton","InternalLink","InternalIcon","MenuDropdown","styles","checkSafeUrl","Utility","_a","hideText","definition","offsetRight","hasIcon","iconName","iconUrl","iconAlt","iconSvg","shouldHideText","disableTextCollapse","ariaLabel","text","type","href","variant","className","target","external","undefined","onClick","externalIconAriaLabel","role","name","onFollow","url","alt","svg","badge","size","title","shouldShowTitle","checkSafeUrlRecursively","items","itemOrGroup","itemOrGroup_1","_i","item"],"sources":["/Users/dcastro/node_modules/src/top-navigation/parts/utility.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { InternalButton } from '../../button/internal';\nimport InternalLink from '../../link/internal';\nimport InternalIcon from '../../icon/internal';\nimport MenuDropdown, { MenuDropdownProps } from '../../internal/components/menu-dropdown';\n\nimport { TopNavigationProps } from '../interfaces';\n\nimport styles from '../styles.css.js';\nimport { checkSafeUrl } from '../../internal/utils/check-safe-url';\n\nexport interface UtilityProps {\n  hideText: boolean;\n  definition: TopNavigationProps.Utility;\n  offsetRight?: MenuDropdownProps['offsetRight'];\n}\n\nexport default function Utility({ hideText, definition, offsetRight }: UtilityProps) {\n  const hasIcon = !!definition.iconName || !!definition.iconUrl || !!definition.iconAlt || !!definition.iconSvg;\n  const shouldHideText = hideText && !definition.disableTextCollapse && hasIcon;\n  const ariaLabel = definition.ariaLabel ?? definition.text;\n\n  if (definition.type === 'button') {\n    checkSafeUrl('TopNavigation', definition.href);\n    if (definition.variant === 'primary-button') {\n      return (\n        <span className={styles[`offset-right-${offsetRight}`]}>\n          <InternalButton\n            variant=\"primary\"\n            href={definition.href}\n            target={definition.external ? '_blank' : undefined}\n            onClick={definition.onClick}\n            ariaLabel={ariaLabel}\n            iconName={definition.iconName}\n            iconUrl={definition.iconUrl}\n            iconAlt={definition.iconAlt}\n            iconSvg={definition.iconSvg}\n          >\n            {shouldHideText ? null : (\n              <>\n                {definition.text}\n                {definition.external && (\n                  <>\n                    {' '}\n                    <span\n                      className={clsx(styles['utility-button-external-icon'], styles[`offset-right-${offsetRight}`])}\n                      aria-label={definition.externalIconAriaLabel}\n                      role={definition.externalIconAriaLabel ? 'img' : undefined}\n                    >\n                      <InternalIcon name=\"external\" />\n                    </span>\n                  </>\n                )}\n              </>\n            )}\n          </InternalButton>\n        </span>\n      );\n    } else {\n      // Link\n      return (\n        <span className={styles[`offset-right-${offsetRight}`]}>\n          <InternalLink\n            variant=\"top-navigation\"\n            href={definition.href}\n            target={definition.external ? '_blank' : undefined}\n            onFollow={definition.onClick}\n            ariaLabel={ariaLabel}\n          >\n            {hasIcon && (\n              <InternalIcon\n                name={definition.iconName}\n                url={definition.iconUrl}\n                alt={definition.iconAlt}\n                svg={definition.iconSvg}\n                badge={definition.badge}\n              />\n            )}\n            {!shouldHideText && definition.text && (\n              <span className={hasIcon ? styles['utility-link-icon'] : undefined}>{definition.text}</span>\n            )}\n            {/* HACK: The link component uses size=\"inherit\", and Firefox scales up SVGs massively on the first render */}\n            {definition.external && (\n              <>\n                {' '}\n                <span\n                  role={definition.externalIconAriaLabel ? 'img' : undefined}\n                  aria-label={definition.externalIconAriaLabel}\n                >\n                  <InternalIcon name=\"external\" size=\"normal\" />\n                </span>\n              </>\n            )}\n          </InternalLink>\n        </span>\n      );\n    }\n  } else if (definition.type === 'menu-dropdown') {\n    const title = definition.title || definition.text;\n    const shouldShowTitle = shouldHideText || !definition.text;\n\n    checkSafeUrlRecursively(definition.items);\n\n    return (\n      <MenuDropdown\n        {...definition}\n        title={shouldShowTitle ? title : ''}\n        ariaLabel={ariaLabel}\n        offsetRight={offsetRight}\n      >\n        {!shouldHideText && definition.text}\n      </MenuDropdown>\n    );\n  }\n\n  return null;\n}\n\nfunction checkSafeUrlRecursively(itemOrGroup: MenuDropdownProps['items']) {\n  for (const item of itemOrGroup) {\n    checkSafeUrl('TopNavigation', item.href);\n\n    if ('items' in item) {\n      checkSafeUrlRecursively(item.items);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}