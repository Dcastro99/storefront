{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport { arc } from 'd3-shape';\nimport { dimensionsBySize, refreshDimensionsBySize } from './utils';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nexport default function Segments(_a) {\n  var pieData = _a.pieData,\n    highlightedSegment = _a.highlightedSegment,\n    size = _a.size,\n    variant = _a.variant,\n    focusedSegmentRef = _a.focusedSegmentRef,\n    popoverTrackRef = _a.popoverTrackRef,\n    segmentAriaRoleDescription = _a.segmentAriaRoleDescription,\n    onClick = _a.onClick,\n    onMouseOver = _a.onMouseOver,\n    onMouseOut = _a.onMouseOut;\n  var isRefresh = useVisualRefresh();\n  var _b = useMemo(function () {\n      var dimensions = isRefresh ? refreshDimensionsBySize[size] : dimensionsBySize[size];\n      var radius = dimensions.outerRadius;\n      var innerRadius = variant === 'pie' ? 0 : dimensions.innerRadius;\n      var cornerRadius = dimensions.cornerRadius || 0;\n      var arcFactory = arc().innerRadius(innerRadius).outerRadius(radius).cornerRadius(cornerRadius);\n      var highlightedArcFactory = arc().innerRadius(radius + 4).outerRadius(radius + 6);\n      return {\n        arcFactory: arcFactory,\n        highlightedArcFactory: highlightedArcFactory\n      };\n    }, [size, variant, isRefresh]),\n    arcFactory = _b.arcFactory,\n    highlightedArcFactory = _b.highlightedArcFactory;\n  var centroid = useMemo(function () {\n    for (var _i = 0, pieData_1 = pieData; _i < pieData_1.length; _i++) {\n      var datum = pieData_1[_i];\n      if (datum.data.datum === highlightedSegment) {\n        var _a = arcFactory.centroid(datum),\n          centroidLeft = _a[0],\n          centroidTop = _a[1];\n        return {\n          cx: centroidLeft,\n          cy: centroidTop\n        };\n      }\n    }\n    return null;\n  }, [highlightedSegment, pieData, arcFactory]);\n  return React.createElement(\"g\", {\n    onMouseLeave: function () {\n      return onMouseOut();\n    }\n  }, pieData.map(function (datum) {\n    var _a;\n    var isHighlighted = highlightedSegment === datum.data.datum;\n    var isDimmed = highlightedSegment !== null && !isHighlighted;\n    var arcPath = arcFactory(datum) || undefined;\n    var highlightedPath = highlightedArcFactory(datum) || undefined;\n    return React.createElement(\"g\", {\n      key: datum.data.index,\n      onClick: function () {\n        return onClick(datum.data);\n      },\n      onMouseOver: function () {\n        return onMouseOver(datum.data);\n      },\n      className: clsx(styles.segment, (_a = {}, _a[styles['segment--highlighted']] = isHighlighted, _a[styles['segment--dimmed']] = isDimmed, _a)),\n      ref: isHighlighted ? focusedSegmentRef : undefined,\n      \"aria-label\": \"\".concat(datum.data.datum.title, \" (\").concat(datum.data.datum.value, \")\"),\n      role: \"button\",\n      \"aria-roledescription\": segmentAriaRoleDescription\n    }, React.createElement(\"path\", {\n      d: arcPath,\n      fill: datum.data.color,\n      className: styles.segment__path,\n      \"aria-hidden\": \"true\"\n    }), React.createElement(\"path\", {\n      d: highlightedPath,\n      fill: datum.data.color,\n      className: clsx(styles.segment__path, styles.segment__highlight),\n      \"aria-hidden\": \"true\"\n    }));\n  }), React.createElement(\"circle\", __assign({}, centroid, {\n    ref: popoverTrackRef,\n    r: \"1\",\n    opacity: \"0\",\n    \"aria-hidden\": \"true\"\n  })));\n}","map":{"version":3,"mappings":"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","names":["React","useMemo","arc","dimensionsBySize","refreshDimensionsBySize","useVisualRefresh","styles","clsx","Segments","_a","pieData","highlightedSegment","size","variant","focusedSegmentRef","popoverTrackRef","segmentAriaRoleDescription","onClick","onMouseOver","onMouseOut","isRefresh","dimensions","radius","outerRadius","innerRadius","cornerRadius","arcFactory","highlightedArcFactory","centroid","pieData_1","_i","datum","data","centroidLeft","centroidTop","cx","cy","onMouseLeave","map","isHighlighted","isDimmed","arcPath","undefined","highlightedPath","key","index","className","segment","ref","title","value","role","d","fill","color","segment__path","segment__highlight","r","opacity"],"sources":["/Users/dcastro/node_modules/src/pie-chart/segments.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport { arc, PieArcDatum } from 'd3-shape';\n\nimport { PieChartProps } from './interfaces';\nimport { dimensionsBySize, refreshDimensionsBySize } from './utils';\nimport { InternalChartDatum } from './pie-chart';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\n\ninterface SegmentsProps<T> {\n  pieData: Array<PieArcDatum<InternalChartDatum<T>>>;\n  highlightedSegment: T | null;\n  size: NonNullable<PieChartProps['size']>;\n  variant: PieChartProps['variant'];\n  focusedSegmentRef: React.RefObject<SVGGElement>;\n  popoverTrackRef: React.RefObject<SVGCircleElement>;\n  segmentAriaRoleDescription?: string;\n\n  onClick: (datum: InternalChartDatum<T>) => void;\n  onMouseOver: (datum: InternalChartDatum<T>) => void;\n  onMouseOut: () => void;\n}\n\nexport default function Segments<T extends PieChartProps.Datum>({\n  pieData,\n  highlightedSegment,\n  size,\n  variant,\n  focusedSegmentRef,\n  popoverTrackRef,\n  segmentAriaRoleDescription,\n  onClick,\n  onMouseOver,\n  onMouseOut,\n}: SegmentsProps<T>) {\n  const isRefresh = useVisualRefresh();\n\n  const { arcFactory, highlightedArcFactory } = useMemo(() => {\n    const dimensions = isRefresh ? refreshDimensionsBySize[size] : dimensionsBySize[size];\n    const radius = dimensions.outerRadius;\n    const innerRadius = variant === 'pie' ? 0 : dimensions.innerRadius;\n    const cornerRadius = dimensions.cornerRadius || 0;\n\n    const arcFactory = arc<PieArcDatum<InternalChartDatum<any>>>()\n      .innerRadius(innerRadius)\n      .outerRadius(radius)\n      .cornerRadius(cornerRadius);\n\n    const highlightedArcFactory = arc<PieArcDatum<InternalChartDatum<any>>>()\n      .innerRadius(radius + 4)\n      .outerRadius(radius + 6);\n\n    return {\n      arcFactory,\n      highlightedArcFactory,\n    };\n  }, [size, variant, isRefresh]);\n\n  const centroid = useMemo(() => {\n    for (const datum of pieData) {\n      if (datum.data.datum === highlightedSegment) {\n        const [centroidLeft, centroidTop] = arcFactory.centroid(datum);\n        return { cx: centroidLeft, cy: centroidTop };\n      }\n    }\n    return null;\n  }, [highlightedSegment, pieData, arcFactory]);\n\n  return (\n    <g onMouseLeave={() => onMouseOut()}>\n      {pieData.map(datum => {\n        const isHighlighted = highlightedSegment === datum.data.datum;\n        const isDimmed = highlightedSegment !== null && !isHighlighted;\n        const arcPath = arcFactory(datum) || undefined;\n        const highlightedPath = highlightedArcFactory(datum) || undefined;\n        return (\n          <g\n            key={datum.data.index}\n            onClick={() => onClick(datum.data)}\n            onMouseOver={() => onMouseOver(datum.data)}\n            className={clsx(styles.segment, {\n              [styles['segment--highlighted']]: isHighlighted,\n              [styles['segment--dimmed']]: isDimmed,\n            })}\n            ref={isHighlighted ? focusedSegmentRef : undefined}\n            aria-label={`${datum.data.datum.title} (${datum.data.datum.value})`}\n            role=\"button\"\n            aria-roledescription={segmentAriaRoleDescription}\n          >\n            <path d={arcPath} fill={datum.data.color} className={styles.segment__path} aria-hidden=\"true\" />\n            <path\n              d={highlightedPath}\n              fill={datum.data.color}\n              className={clsx(styles.segment__path, styles.segment__highlight)}\n              aria-hidden=\"true\"\n            />\n          </g>\n        );\n      })}\n\n      <circle {...centroid} ref={popoverTrackRef} r=\"1\" opacity=\"0\" aria-hidden=\"true\" />\n    </g>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}