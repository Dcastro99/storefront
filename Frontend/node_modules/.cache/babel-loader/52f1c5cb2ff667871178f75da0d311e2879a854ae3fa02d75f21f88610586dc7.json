{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useResizeObserver } from '../../internal/hooks/container-queries';\nimport { useCallback, useState } from 'react';\nexport function useObservedElement(selectorOrRef) {\n  var getElement = useCallback(function () {\n    var _a, _b;\n    if (typeof selectorOrRef === 'string') {\n      return document.querySelector(selectorOrRef);\n    } else if (typeof selectorOrRef === 'function') {\n      return (_a = selectorOrRef()) !== null && _a !== void 0 ? _a : null;\n    } else {\n      return (_b = selectorOrRef === null || selectorOrRef === void 0 ? void 0 : selectorOrRef.current) !== null && _b !== void 0 ? _b : null;\n    }\n  }, [selectorOrRef]);\n  var _a = useState(0),\n    height = _a[0],\n    setHeight = _a[1];\n  useResizeObserver(getElement, function (entry) {\n    return setHeight(entry.borderBoxHeight);\n  });\n  return height;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,iBAAiB,QAAQ,wCAAwC;AAC1E,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,OAAM,SAAUC,kBAAkB,CAChCC,aAAoG;EAEpG,IAAMC,UAAU,GAAGJ,WAAW,CAAC;;IAC7B,IAAI,OAAOG,aAAa,KAAK,QAAQ,EAAE;MACrC,OAAOE,QAAQ,CAACC,aAAa,CAACH,aAAa,CAAC;KAC7C,MAAM,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE;MAC9C,OAAO,mBAAa,EAAE,mCAAI,IAAI;KAC/B,MAAM;MACL,OAAO,mBAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEI,OAAO,mCAAI,IAAI;;EAEzC,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EAEb,SAAsBF,QAAQ,CAAC,CAAC,CAAC;IAAhCO,MAAM;IAAEC,SAAS,QAAe;EAEvCV,iBAAiB,CAACK,UAAU,EAAE,eAAK;IAAI,gBAAS,CAACM,KAAK,CAACC,eAAe,CAAC;EAAhC,CAAgC,CAAC;EAExE,OAAOH,MAAM;AACf","names":["useResizeObserver","useCallback","useState","useObservedElement","selectorOrRef","getElement","document","querySelector","current","height","setHeight","entry","borderBoxHeight"],"sources":["/Users/dcastro/node_modules/src/app-layout/utils/use-observed-element.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useResizeObserver } from '../../internal/hooks/container-queries';\nimport { useCallback, useState } from 'react';\n\nexport function useObservedElement(\n  selectorOrRef: string | React.MutableRefObject<HTMLElement> | (() => HTMLElement | null) | undefined\n) {\n  const getElement = useCallback(() => {\n    if (typeof selectorOrRef === 'string') {\n      return document.querySelector(selectorOrRef);\n    } else if (typeof selectorOrRef === 'function') {\n      return selectorOrRef() ?? null;\n    } else {\n      return selectorOrRef?.current ?? null;\n    }\n  }, [selectorOrRef]);\n\n  const [height, setHeight] = useState(0);\n\n  useResizeObserver(getElement, entry => setHeight(entry.borderBoxHeight));\n\n  return height;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}