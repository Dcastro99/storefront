{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo, useCallback, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent, fireCancelableEvent } from '../internal/events';\nimport { Header, ItemList } from './internal';\nimport { generateExpandableItemsMapping, checkDuplicateHrefs } from './util';\nimport styles from './styles.css.js';\nimport { isDevelopment } from '../internal/is-development';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nexport default function SideNavigation(_a) {\n  var header = _a.header,\n    activeHref = _a.activeHref,\n    _b = _a.items,\n    items = _b === void 0 ? [] : _b,\n    onFollow = _a.onFollow,\n    onChange = _a.onChange,\n    props = __rest(_a, [\"header\", \"activeHref\", \"items\", \"onFollow\", \"onChange\"]);\n  var __internalRootRef = useBaseComponent('SideNavigation').__internalRootRef;\n  var baseProps = getBaseProps(props);\n  var parentMap = useMemo(function () {\n    return generateExpandableItemsMapping(items);\n  }, [items]);\n  if (isDevelopment) {\n    // This code should be wiped in production anyway.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      return checkDuplicateHrefs(items);\n    }, [items]);\n  }\n  var onChangeHandler = useCallback(function (item, expanded) {\n    // generateExpandableItemsMapping walks through the entire tree, so we're certain about getting a value.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    fireNonCancelableEvent(onChange, {\n      item: item,\n      expanded: expanded,\n      expandableParents: parentMap.get(item)\n    });\n  }, [onChange, parentMap]);\n  var onFollowHandler = useCallback(function (item, sourceEvent) {\n    fireCancelableEvent(onFollow, item, sourceEvent);\n  }, [onFollow]);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    ref: __internalRootRef\n  }), header && React.createElement(Header, {\n    definition: header,\n    activeHref: activeHref,\n    fireChange: onChangeHandler,\n    fireFollow: onFollowHandler\n  }), items && React.createElement(\"div\", {\n    className: styles['list-container']\n  }, React.createElement(ItemList, {\n    variant: \"root\",\n    items: items,\n    fireFollow: onFollowHandler,\n    fireChange: onChangeHandler,\n    activeHref: activeHref\n  })));\n}\napplyDisplayName(SideNavigation, 'SideNavigation');","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,sBAAsB,EAAEC,mBAAmB,QAAQ,oBAAoB;AAEhF,SAASC,MAAM,EAAEC,QAAQ,QAAQ,YAAY;AAC7C,SAASC,8BAA8B,EAAEC,mBAAmB,QAAQ,QAAQ;AAC5E,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,gBAAgB,MAAM,sCAAsC;AAInE,eAAc,SAAUC,cAAc,CAACC,EAOjB;EANpB,UAAM;IACNC,UAAU;IACVC,aAAU;IAAVC,KAAK,mBAAG,EAAE;IACVC,QAAQ;IACRC,QAAQ;IACLC,KAAK,cAN6B,yDAOtC,CADS;EAEA,qBAAiB,GAAKR,gBAAgB,CAAC,gBAAgB,CAAC,kBAAvC;EACzB,IAAMS,SAAS,GAAGnB,YAAY,CAACkB,KAAK,CAAC;EACrC,IAAME,SAAS,GAAGxB,OAAO,CAAC;IAAM,qCAA8B,CAACmB,KAAK,CAAC;EAArC,CAAqC,EAAE,CAACA,KAAK,CAAC,CAAC;EAE/E,IAAIP,aAAa,EAAE;IACjB;IACA;IACAV,SAAS,CAAC;MAAM,0BAAmB,CAACiB,KAAK,CAAC;IAA1B,CAA0B,EAAE,CAACA,KAAK,CAAC,CAAC;;EAGtD,IAAMM,eAAe,GAAGxB,WAAW,CACjC,UAACyB,IAA2E,EAAEC,QAAiB;IAC7F;IACA;IACAtB,sBAAsB,CAACgB,QAAQ,EAAE;MAAEK,IAAI;MAAEC,QAAQ,EAAEA,QAAQ;MAAEC,iBAAiB,EAAEJ,SAAS,CAACK,GAAG,CAACH,IAAI;IAAE,CAAE,CAAC;EACzG,CAAC,EACD,CAACL,QAAQ,EAAEG,SAAS,CAAC,CACtB;EAED,IAAMM,eAAe,GAAG7B,WAAW,CACjC,UACEyB,IAI2C,EAC3CK,WAAyC;IAEzCzB,mBAAmB,CAACc,QAAQ,EAAEM,IAAI,EAAEK,WAAW,CAAC;EAClD,CAAC,EACD,CAACX,QAAQ,CAAC,CACX;EAED,OACErB,wCAASwB,SAAS;IAAES,SAAS,EAAE7B,IAAI,CAACQ,MAAM,CAACsB,IAAI,EAAEV,SAAS,CAACS,SAAS,CAAC;IAAEE,GAAG,EAAEC;EAAiB,IAC1FC,MAAM,IACLrC,oBAACQ,MAAM;IAAC8B,UAAU,EAAED,MAAM;IAAEnB,UAAU,EAAEA,UAAU;IAAEqB,UAAU,EAAEb,eAAe;IAAEc,UAAU,EAAET;EAAe,EAC7G,EACAX,KAAK,IACJpB;IAAKiC,SAAS,EAAErB,MAAM,CAAC,gBAAgB;EAAC,GACtCZ,oBAACS,QAAQ;IACPgC,OAAO,EAAC,MAAM;IACdrB,KAAK,EAAEA,KAAK;IACZoB,UAAU,EAAET,eAAe;IAC3BQ,UAAU,EAAEb,eAAe;IAC3BR,UAAU,EAAEA;EAAU,EACtB,CAEL,CACG;AAEV;AAEAJ,gBAAgB,CAACE,cAAc,EAAE,gBAAgB,CAAC","names":["React","useMemo","useCallback","useEffect","clsx","getBaseProps","fireNonCancelableEvent","fireCancelableEvent","Header","ItemList","generateExpandableItemsMapping","checkDuplicateHrefs","styles","isDevelopment","applyDisplayName","useBaseComponent","SideNavigation","_a","activeHref","_b","items","onFollow","onChange","props","baseProps","parentMap","onChangeHandler","item","expanded","expandableParents","get","onFollowHandler","sourceEvent","className","root","ref","__internalRootRef","header","definition","fireChange","fireFollow","variant"],"sources":["/Users/dcastro/node_modules/src/side-navigation/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo, useCallback, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent, fireCancelableEvent } from '../internal/events';\nimport { SideNavigationProps } from './interfaces';\nimport { Header, ItemList } from './internal';\nimport { generateExpandableItemsMapping, checkDuplicateHrefs } from './util';\nimport styles from './styles.css.js';\nimport { isDevelopment } from '../internal/is-development';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { SideNavigationProps };\n\nexport default function SideNavigation({\n  header,\n  activeHref,\n  items = [],\n  onFollow,\n  onChange,\n  ...props\n}: SideNavigationProps) {\n  const { __internalRootRef } = useBaseComponent('SideNavigation');\n  const baseProps = getBaseProps(props);\n  const parentMap = useMemo(() => generateExpandableItemsMapping(items), [items]);\n\n  if (isDevelopment) {\n    // This code should be wiped in production anyway.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => checkDuplicateHrefs(items), [items]);\n  }\n\n  const onChangeHandler = useCallback(\n    (item: SideNavigationProps.Section | SideNavigationProps.ExpandableLinkGroup, expanded: boolean) => {\n      // generateExpandableItemsMapping walks through the entire tree, so we're certain about getting a value.\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      fireNonCancelableEvent(onChange, { item, expanded: expanded, expandableParents: parentMap.get(item)! });\n    },\n    [onChange, parentMap]\n  );\n\n  const onFollowHandler = useCallback(\n    (\n      item:\n        | SideNavigationProps.Link\n        | SideNavigationProps.Header\n        | SideNavigationProps.LinkGroup\n        | SideNavigationProps.ExpandableLinkGroup,\n      sourceEvent: React.SyntheticEvent | Event\n    ) => {\n      fireCancelableEvent(onFollow, item, sourceEvent);\n    },\n    [onFollow]\n  );\n\n  return (\n    <div {...baseProps} className={clsx(styles.root, baseProps.className)} ref={__internalRootRef}>\n      {header && (\n        <Header definition={header} activeHref={activeHref} fireChange={onChangeHandler} fireFollow={onFollowHandler} />\n      )}\n      {items && (\n        <div className={styles['list-container']}>\n          <ItemList\n            variant=\"root\"\n            items={items}\n            fireFollow={onFollowHandler}\n            fireChange={onChangeHandler}\n            activeHref={activeHref}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\napplyDisplayName(SideNavigation, 'SideNavigation');\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}