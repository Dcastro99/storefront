{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { InternalButton } from '../button/internal';\nimport { AdditionalInfo } from './additional-info';\nimport { Row } from './row';\nimport styles from './styles.css.js';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport InternalBox from '../box/internal';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar InternalAttributeEditor = React.forwardRef(function (_a, ref) {\n  var additionalInfo = _a.additionalInfo,\n    disableAddButton = _a.disableAddButton,\n    definition = _a.definition,\n    items = _a.items,\n    _b = _a.isItemRemovable,\n    isItemRemovable = _b === void 0 ? function () {\n      return true;\n    } : _b,\n    empty = _a.empty,\n    addButtonText = _a.addButtonText,\n    removeButtonText = _a.removeButtonText,\n    i18nStrings = _a.i18nStrings,\n    onAddButtonClick = _a.onAddButtonClick,\n    onRemoveButtonClick = _a.onRemoveButtonClick,\n    _c = _a.__internalRootRef,\n    __internalRootRef = _c === void 0 ? null : _c,\n    props = __rest(_a, [\"additionalInfo\", \"disableAddButton\", \"definition\", \"items\", \"isItemRemovable\", \"empty\", \"addButtonText\", \"removeButtonText\", \"i18nStrings\", \"onAddButtonClick\", \"onRemoveButtonClick\", \"__internalRootRef\"]);\n  var _d = useContainerBreakpoints(['default', 'xxs', 'xs']),\n    breakpoint = _d[0],\n    breakpointRef = _d[1];\n  var removeButtonRefs = useRef([]);\n  var baseProps = getBaseProps(props);\n  var isEmpty = items && items.length === 0;\n  useImperativeHandle(ref, function () {\n    return {\n      focusRemoveButton: function (rowIndex) {\n        var _a;\n        (_a = removeButtonRefs.current[rowIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n    };\n  });\n  var mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(baseProps.className, styles.root)\n  }), React.createElement(InternalBox, {\n    margin: {\n      bottom: 'l'\n    }\n  }, isEmpty && React.createElement(\"div\", {\n    className: styles.empty\n  }, empty), items.map(function (item, index) {\n    return React.createElement(Row, {\n      key: index,\n      index: index,\n      breakpoint: breakpoint,\n      item: item,\n      definition: definition,\n      i18nStrings: i18nStrings,\n      removable: isItemRemovable(item),\n      removeButtonText: removeButtonText,\n      removeButtonRefs: removeButtonRefs.current,\n      onRemoveButtonClick: onRemoveButtonClick\n    });\n  })), React.createElement(InternalButton, {\n    className: styles['add-button'],\n    disabled: disableAddButton,\n    onClick: onAddButtonClick,\n    formAction: \"none\"\n  }, addButtonText), additionalInfo && React.createElement(AdditionalInfo, null, additionalInfo));\n});\nexport default InternalAttributeEditor;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,YAAY,QAAQ,4BAA4B;AAGzD,SAASC,cAAc,QAAQ,oBAAoB;AAGnD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,GAAG,QAAQ,OAAO;AAE3B,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,OAAOC,WAAW,MAAM,iBAAiB;AAEzC,SAASC,YAAY,QAAQ,kCAAkC;AAK/D,IAAMC,uBAAuB,GAAGZ,KAAK,CAACa,UAAU,CAC9C,UACEC,EAckC,EAClCC,GAAwC;EAdtC,kBAAc;IACdC,gBAAgB;IAChBC,UAAU;IACVC,KAAK;IACLC,uBAA4B;IAA5BC,eAAe,mBAAG;MAAM,WAAI;IAAJ,CAAI;IAC5BC,KAAK;IACLC,aAAa;IACbC,gBAAgB;IAChBC,WAAW;IACXC,gBAAgB;IAChBC,mBAAmB;IACnBC,yBAAwB;IAAxBC,iBAAiB,mBAAG,IAAI;IACrBC,KAAK,cAbV,6MAcC,CADS;EAIJ,SAA8BpB,uBAAuB,CAAC,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAA9EqB,UAAU;IAAEC,aAAa,QAAqD;EACrF,IAAMC,gBAAgB,GAAG9B,MAAM,CAAqC,EAAE,CAAC;EAEvE,IAAM+B,SAAS,GAAG7B,YAAY,CAACyB,KAAK,CAAC;EACrC,IAAMK,OAAO,GAAGhB,KAAK,IAAIA,KAAK,CAACiB,MAAM,KAAK,CAAC;EAE3ClC,mBAAmB,CAACc,GAAG,EAAE;IAAM,OAAC;MAC9BqB,iBAAiB,EAAjB,UAAkBC,QAAgB;;QAChC,sBAAgB,CAACC,OAAO,CAACD,QAAQ,CAAC,0CAAEE,KAAK,EAAE;MAC7C;KACD;EAJ8B,CAI7B,CAAC;EAEH,IAAMC,SAAS,GAAG7B,YAAY,CAACoB,aAAa,EAAEH,iBAAiB,CAAC;EAEhE,OACE5B,wCAASiC,SAAS;IAAElB,GAAG,EAAEyB,SAAS;IAAEC,SAAS,EAAEtC,IAAI,CAAC8B,SAAS,CAACQ,SAAS,EAAEjC,MAAM,CAACkC,IAAI;EAAC,IACnF1C,oBAACU,WAAW;IAACiC,MAAM,EAAE;MAAEC,MAAM,EAAE;IAAG;EAAE,GACjCV,OAAO,IAAIlC;IAAKyC,SAAS,EAAEjC,MAAM,CAACa;EAAK,GAAGA,KAAK,CAAO,EACtDH,KAAK,CAAC2B,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;IAAK,OAC1B/C,oBAACO,GAAG;MACFyC,GAAG,EAAED,KAAK;MACVA,KAAK,EAAEA,KAAK;MACZjB,UAAU,EAAEA,UAAU;MACtBgB,IAAI,EAAEA,IAAI;MACV7B,UAAU,EAAEA,UAAU;MACtBO,WAAW,EAAEA,WAAW;MACxByB,SAAS,EAAE7B,eAAe,CAAC0B,IAAI,CAAC;MAChCvB,gBAAgB,EAAEA,gBAAgB;MAClCS,gBAAgB,EAAEA,gBAAgB,CAACM,OAAO;MAC1CZ,mBAAmB,EAAEA;IAAmB,EACxC;EAZwB,CAa3B,CAAC,CACU,EACd1B,oBAACK,cAAc;IACboC,SAAS,EAAEjC,MAAM,CAAC,YAAY,CAAC;IAC/B0C,QAAQ,EAAElC,gBAAgB;IAC1BmC,OAAO,EAAE1B,gBAAgB;IACzB2B,UAAU,EAAC;EAAM,GAEhB9B,aAAa,CACC,EAChB+B,cAAc,IAAIrD,oBAACM,cAAc,QAAE+C,cAAc,CAAkB,CAChE;AAEV,CAAC,CAC+B;AAElC,eAAezC,uBAAuB","names":["React","useImperativeHandle","useRef","clsx","getBaseProps","InternalButton","AdditionalInfo","Row","styles","useContainerBreakpoints","InternalBox","useMergeRefs","InternalAttributeEditor","forwardRef","_a","ref","disableAddButton","definition","items","_b","isItemRemovable","empty","addButtonText","removeButtonText","i18nStrings","onAddButtonClick","onRemoveButtonClick","_c","__internalRootRef","props","breakpoint","breakpointRef","removeButtonRefs","baseProps","isEmpty","length","focusRemoveButton","rowIndex","current","focus","mergedRef","className","root","margin","bottom","map","item","index","key","removable","disabled","onClick","formAction","additionalInfo"],"sources":["/Users/dcastro/node_modules/src/attribute-editor/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\n\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\n\nimport { AttributeEditorForwardRefType, AttributeEditorProps } from './interfaces';\nimport { AdditionalInfo } from './additional-info';\nimport { Row } from './row';\n\nimport styles from './styles.css.js';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport InternalBox from '../box/internal';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { SomeRequired } from '../internal/types';\n\ntype InternalAttributeEditorProps<T> = SomeRequired<AttributeEditorProps<T>, 'items'> & InternalBaseComponentProps;\n\nconst InternalAttributeEditor = React.forwardRef(\n  <T,>(\n    {\n      additionalInfo,\n      disableAddButton,\n      definition,\n      items,\n      isItemRemovable = () => true,\n      empty,\n      addButtonText,\n      removeButtonText,\n      i18nStrings,\n      onAddButtonClick,\n      onRemoveButtonClick,\n      __internalRootRef = null,\n      ...props\n    }: InternalAttributeEditorProps<T>,\n    ref: React.Ref<AttributeEditorProps.Ref>\n  ) => {\n    const [breakpoint, breakpointRef] = useContainerBreakpoints(['default', 'xxs', 'xs']);\n    const removeButtonRefs = useRef<Array<ButtonProps.Ref | undefined>>([]);\n\n    const baseProps = getBaseProps(props);\n    const isEmpty = items && items.length === 0;\n\n    useImperativeHandle(ref, () => ({\n      focusRemoveButton(rowIndex: number) {\n        removeButtonRefs.current[rowIndex]?.focus();\n      },\n    }));\n\n    const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n\n    return (\n      <div {...baseProps} ref={mergedRef} className={clsx(baseProps.className, styles.root)}>\n        <InternalBox margin={{ bottom: 'l' }}>\n          {isEmpty && <div className={styles.empty}>{empty}</div>}\n          {items.map((item, index) => (\n            <Row\n              key={index}\n              index={index}\n              breakpoint={breakpoint}\n              item={item}\n              definition={definition}\n              i18nStrings={i18nStrings}\n              removable={isItemRemovable(item)}\n              removeButtonText={removeButtonText}\n              removeButtonRefs={removeButtonRefs.current}\n              onRemoveButtonClick={onRemoveButtonClick}\n            />\n          ))}\n        </InternalBox>\n        <InternalButton\n          className={styles['add-button']}\n          disabled={disableAddButton}\n          onClick={onAddButtonClick}\n          formAction=\"none\"\n        >\n          {addButtonText}\n        </InternalButton>\n        {additionalInfo && <AdditionalInfo>{additionalInfo}</AdditionalInfo>}\n      </div>\n    );\n  }\n) as AttributeEditorForwardRefType;\n\nexport default InternalAttributeEditor;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}