{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../../base-component';\nimport PopoverContainer from '../../../popover/container';\nimport PopoverBody from '../../../popover/body';\nimport popoverStyles from '../../../popover/styles.css.js';\nimport { nodeContains } from '../../utils/dom';\nimport styles from './styles.css.js';\nexport default function ChartPopover(_a) {\n  var _b;\n  var _c = _a.position,\n    position = _c === void 0 ? 'right' : _c,\n    _d = _a.size,\n    size = _d === void 0 ? 'medium' : _d,\n    _e = _a.fixedWidth,\n    fixedWidth = _e === void 0 ? false : _e,\n    _f = _a.dismissButton,\n    dismissButton = _f === void 0 ? false : _f,\n    dismissAriaLabel = _a.dismissAriaLabel,\n    children = _a.children,\n    title = _a.title,\n    trackRef = _a.trackRef,\n    trackKey = _a.trackKey,\n    onDismiss = _a.onDismiss,\n    container = _a.container,\n    restProps = __rest(_a, [\"position\", \"size\", \"fixedWidth\", \"dismissButton\", \"dismissAriaLabel\", \"children\", \"title\", \"trackRef\", \"trackKey\", \"onDismiss\", \"container\"]);\n  var baseProps = getBaseProps(restProps);\n  var popoverRef = useRef(null);\n  useEffect(function () {\n    var onDocumentClick = function (event) {\n      if (event.target && !nodeContains(popoverRef.current, event.target) &&\n      // click not in popover\n      !nodeContains(container, event.target) // click not in segment\n      ) {\n        onDismiss(true);\n      }\n    };\n    document.addEventListener('mousedown', onDocumentClick, {\n      capture: true\n    });\n    return function () {\n      document.removeEventListener('mousedown', onDocumentClick, {\n        capture: true\n      });\n    };\n  }, [container, onDismiss]);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(popoverStyles.root, styles.root, baseProps.className, (_b = {}, _b[styles.dismissable] = dismissButton, _b)),\n    ref: popoverRef\n  }), React.createElement(PopoverContainer, {\n    size: size,\n    fixedWidth: fixedWidth,\n    position: position,\n    trackRef: trackRef,\n    trackKey: trackKey,\n    arrow: function (position) {\n      return React.createElement(\"div\", {\n        className: clsx(popoverStyles.arrow, popoverStyles[\"arrow-position-\".concat(position)])\n      }, React.createElement(\"div\", {\n        className: popoverStyles['arrow-outer']\n      }), React.createElement(\"div\", {\n        className: popoverStyles['arrow-inner']\n      }));\n    }\n  }, React.createElement(PopoverBody, {\n    dismissButton: dismissButton,\n    dismissAriaLabel: dismissAriaLabel,\n    returnFocus: false,\n    header: title,\n    onDismiss: onDismiss\n  }, children)));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,YAAY,QAAQ,sBAAsB;AAGnD,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,OAAOC,MAAM,MAAM,iBAAiB;AA6BpC,eAAc,SAAUC,YAAY,CAACC,EAgBjB;;EAflB,oBAAkB;IAAlBC,QAAQ,mBAAG,OAAO;IAClBC,YAAe;IAAfC,IAAI,mBAAG,QAAQ;IACfC,kBAAkB;IAAlBC,UAAU,mBAAG,KAAK;IAClBC,qBAAqB;IAArBC,aAAa,mBAAG,KAAK;IACrBC,gBAAgB;IAEhBC,QAAQ;IAERC,KAAK;IACLC,QAAQ;IACRC,QAAQ;IACRC,SAAS;IACTC,SAAS;IAENC,SAAS,cAfuB,8IAgBpC,CADa;EAEZ,IAAMC,SAAS,GAAGvB,YAAY,CAACsB,SAAS,CAAC;EACzC,IAAME,UAAU,GAAG1B,MAAM,CAAwB,IAAI,CAAC;EAEtDD,SAAS,CAAC;IACR,IAAM4B,eAAe,GAAG,UAACC,KAAiB;MACxC,IACEA,KAAK,CAACC,MAAM,IACZ,CAACvB,YAAY,CAACoB,UAAU,CAACI,OAAO,EAAEF,KAAK,CAACC,MAAiB,CAAC;MAAI;MAC9D,CAACvB,YAAY,CAACiB,SAAS,EAAEK,KAAK,CAACC,MAAiB,CAAC,CAAC;MAAA,EAClD;QACAP,SAAS,CAAC,IAAI,CAAC;;IAEnB,CAAC;IAEDS,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEL,eAAe,EAAE;MAAEM,OAAO,EAAE;IAAI,CAAE,CAAC;IAC1E,OAAO;MACLF,QAAQ,CAACG,mBAAmB,CAAC,WAAW,EAAEP,eAAe,EAAE;QAAEM,OAAO,EAAE;MAAI,CAAE,CAAC;IAC/E,CAAC;EACH,CAAC,EAAE,CAACV,SAAS,EAAED,SAAS,CAAC,CAAC;EAE1B,OACExB,wCACM2B,SAAS;IACbU,SAAS,EAAElC,IAAI,CAACI,aAAa,CAAC+B,IAAI,EAAE7B,MAAM,CAAC6B,IAAI,EAAEX,SAAS,CAACU,SAAS,YAAIE,GAAC9B,MAAM,CAAC+B,WAAW,IAAGtB,aAAa,MAAG;IAC9GuB,GAAG,EAAEb;EAAU,IAEf5B,oBAACK,gBAAgB;IACfS,IAAI,EAAEA,IAAI;IACVE,UAAU,EAAEA,UAAU;IACtBJ,QAAQ,EAAEA,QAAQ;IAClBU,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA,QAAQ;IAClBmB,KAAK,EAAE,kBAAQ;MAAI,OACjB1C;QAAKqC,SAAS,EAAElC,IAAI,CAACI,aAAa,CAACmC,KAAK,EAAEnC,aAAa,CAAC,yBAAkBK,QAAQ,CAAE,CAAC;MAAC,GACpFZ;QAAKqC,SAAS,EAAE9B,aAAa,CAAC,aAAa;MAAC,EAAI,EAChDP;QAAKqC,SAAS,EAAE9B,aAAa,CAAC,aAAa;MAAC,EAAI,CAC5C;IAJW;EAKlB,GAEDP,oBAACM,WAAW;IACVY,aAAa,EAAEA,aAAa;IAC5BC,gBAAgB,EAAEA,gBAAgB;IAClCwB,WAAW,EAAE,KAAK;IAClBC,MAAM,EAAEvB,KAAK;IACbG,SAAS,EAAEA;EAAS,GAEnBJ,QAAQ,CACG,CACG,CACf;AAEV","names":["React","useEffect","useRef","clsx","getBaseProps","PopoverContainer","PopoverBody","popoverStyles","nodeContains","styles","ChartPopover","_a","position","_d","size","_e","fixedWidth","_f","dismissButton","dismissAriaLabel","children","title","trackRef","trackKey","onDismiss","container","restProps","baseProps","popoverRef","onDocumentClick","event","target","current","document","addEventListener","capture","removeEventListener","className","root","_b","dismissable","ref","arrow","returnFocus","header"],"sources":["/Users/dcastro/node_modules/src/internal/components/chart-popover/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../../base-component';\n\nimport { PopoverProps } from '../../../popover/interfaces';\nimport PopoverContainer from '../../../popover/container';\nimport PopoverBody from '../../../popover/body';\nimport popoverStyles from '../../../popover/styles.css.js';\nimport { nodeContains } from '../../utils/dom';\n\nimport styles from './styles.css.js';\n\nexport interface ChartPopoverProps extends PopoverProps {\n  /** Title of the popover */\n  title?: React.ReactNode;\n\n  /** References the element the container is positioned against. */\n  trackRef: React.RefObject<Element>;\n  /**\n    Used to update the container position in case track or track position changes:\n    \n    const trackRef = useRef<Element>(null)\n    return (<>\n      <Track style={getPosition(selectedItemId)} ref={trackRef} />\n      <PopoverContainer trackRef={trackRef} trackKey={selectedItemId} .../>\n    </>)\n  */\n  trackKey?: string | number;\n\n  /** Optional container element that prevents any clicks in there from dismissing the popover */\n  container: Element | null;\n\n  /** Event that is fired when the popover is dismissed */\n  onDismiss: (outsideClick?: boolean) => void;\n\n  /** Popover content */\n  children?: React.ReactNode;\n}\n\nexport default function ChartPopover({\n  position = 'right',\n  size = 'medium',\n  fixedWidth = false,\n  dismissButton = false,\n  dismissAriaLabel,\n\n  children,\n\n  title,\n  trackRef,\n  trackKey,\n  onDismiss,\n  container,\n\n  ...restProps\n}: ChartPopoverProps) {\n  const baseProps = getBaseProps(restProps);\n  const popoverRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const onDocumentClick = (event: MouseEvent) => {\n      if (\n        event.target &&\n        !nodeContains(popoverRef.current, event.target as Element) && // click not in popover\n        !nodeContains(container, event.target as Element) // click not in segment\n      ) {\n        onDismiss(true);\n      }\n    };\n\n    document.addEventListener('mousedown', onDocumentClick, { capture: true });\n    return () => {\n      document.removeEventListener('mousedown', onDocumentClick, { capture: true });\n    };\n  }, [container, onDismiss]);\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(popoverStyles.root, styles.root, baseProps.className, { [styles.dismissable]: dismissButton })}\n      ref={popoverRef}\n    >\n      <PopoverContainer\n        size={size}\n        fixedWidth={fixedWidth}\n        position={position}\n        trackRef={trackRef}\n        trackKey={trackKey}\n        arrow={position => (\n          <div className={clsx(popoverStyles.arrow, popoverStyles[`arrow-position-${position}`])}>\n            <div className={popoverStyles['arrow-outer']} />\n            <div className={popoverStyles['arrow-inner']} />\n          </div>\n        )}\n      >\n        <PopoverBody\n          dismissButton={dismissButton}\n          dismissAriaLabel={dismissAriaLabel}\n          returnFocus={false}\n          header={title}\n          onDismiss={onDismiss}\n        >\n          {children}\n        </PopoverBody>\n      </PopoverContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}