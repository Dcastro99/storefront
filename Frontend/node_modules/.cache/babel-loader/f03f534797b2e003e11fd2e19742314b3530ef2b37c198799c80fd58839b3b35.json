{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport FocusLock from 'react-focus-lock';\nimport { ResizableBox } from 'react-resizable';\nimport { KeyCode } from '../internal/keycode';\nimport { scrollElementIntoView } from '../internal/utils/scrollable-containers';\nimport { InternalButton } from '../button/internal';\nimport handler from './resize-handler';\nimport styles from './styles.css.js';\nvar ANNOTATION_ITEM_HEIGHT = 31;\nvar PANE_ANNOTATIONS_PADDING = 12;\nvar MIN_HEIGHT = 3 * ANNOTATION_ITEM_HEIGHT + 2 * PANE_ANNOTATIONS_PADDING;\nexport var Pane = function (_a) {\n  var id = _a.id,\n    visible = _a.visible,\n    annotations = _a.annotations,\n    highlighted = _a.highlighted,\n    onAllowlist = _a.onAllowlist,\n    onClose = _a.onClose,\n    onAnnotationClick = _a.onAnnotationClick,\n    onAnnotationClear = _a.onAnnotationClear,\n    cursorPositionLabel = _a.cursorPositionLabel,\n    closeButtonAriaLabel = _a.closeButtonAriaLabel;\n  var listRef = useRef(null);\n  var _b = useState(false),\n    isFocusTrapActive = _b[0],\n    setFocusTrapActive = _b[1];\n  useEffect(function () {\n    var _a;\n    if (!highlighted) {\n      return;\n    }\n    var row = highlighted.row,\n      column = highlighted.column;\n    var highlightedAnnotationIndex = annotations.indexOf(annotations.filter(function (a) {\n      return a.row === row && a.column === column;\n    })[0]);\n    if (highlightedAnnotationIndex > -1) {\n      var errorItem = (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.children[highlightedAnnotationIndex];\n      scrollElementIntoView(errorItem);\n    }\n  }, [highlighted, annotations]);\n  var onItemFocus = function () {\n    setFocusTrapActive(true);\n    onAnnotationClear();\n  };\n  var onItemClick = function (annotation) {\n    setFocusTrapActive(false);\n    onAnnotationClick(annotation);\n  };\n  var onItemKeyDown = function (annotation, event) {\n    if (event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) {\n      event.preventDefault();\n      setFocusTrapActive(false);\n      onAnnotationClick(annotation);\n    }\n  };\n  var onEscKeyDown = function (event) {\n    if (event.keyCode === KeyCode.escape) {\n      event.preventDefault();\n      setFocusTrapActive(false);\n      onClose();\n    }\n  };\n  if (!visible) {\n    return null;\n  }\n  return React.createElement(\"div\", {\n    id: id,\n    className: styles.pane,\n    onKeyDown: onEscKeyDown,\n    role: \"tabpanel\"\n  }, React.createElement(ResizableBox, {\n    className: styles['resizable-box'],\n    width: Infinity,\n    height: MIN_HEIGHT,\n    minConstraints: [Infinity, MIN_HEIGHT],\n    axis: \"y\",\n    handle: handler\n  }, React.createElement(FocusLock, {\n    disabled: !isFocusTrapActive,\n    className: styles['focus-lock'],\n    autoFocus: false,\n    returnFocus: false,\n    whiteList: onAllowlist\n  }, React.createElement(\"div\", {\n    className: styles.pane__list,\n    tabIndex: -1\n  }, React.createElement(\"table\", {\n    className: styles.pane__table,\n    role: \"presentation\"\n  }, React.createElement(\"colgroup\", null, React.createElement(\"col\", {\n    style: {\n      width: 1\n    } /* shrink to fit content */\n  }), React.createElement(\"col\", {\n    style: {\n      width: 'auto'\n    }\n  })), React.createElement(\"tbody\", {\n    ref: listRef\n  }, annotations.map(function (annotation, i) {\n    var _a;\n    return React.createElement(\"tr\", {\n      key: i,\n      className: clsx(styles.pane__item, (_a = {}, _a[styles['pane__item--highlighted']] = annotation === highlighted, _a)),\n      onFocus: onItemFocus,\n      onMouseOver: onAnnotationClear,\n      onClick: onItemClick.bind(null, annotation),\n      onKeyDown: onItemKeyDown.bind(null, annotation),\n      tabIndex: 0,\n      role: \"link\"\n    }, React.createElement(\"td\", {\n      className: clsx(styles.pane__location, styles.pane__cell),\n      tabIndex: -1\n    }, cursorPositionLabel((annotation.row || 0) + 1, (annotation.column || 0) + 1)), React.createElement(\"td\", {\n      className: clsx(styles.pane__description, styles.pane__cell),\n      tabIndex: -1\n    }, annotation.text));\n  })))), React.createElement(\"div\", {\n    className: styles['pane__close-container']\n  }, React.createElement(InternalButton, {\n    formAction: \"none\",\n    variant: \"icon\",\n    iconName: \"close\",\n    onClick: onClose,\n    ariaLabel: closeButtonAriaLabel\n  })))));\n};","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","useState","clsx","FocusLock","ResizableBox","KeyCode","scrollElementIntoView","InternalButton","handler","styles","ANNOTATION_ITEM_HEIGHT","PANE_ANNOTATIONS_PADDING","MIN_HEIGHT","Pane","_a","id","visible","annotations","highlighted","onAllowlist","onClose","onAnnotationClick","onAnnotationClear","cursorPositionLabel","closeButtonAriaLabel","listRef","isFocusTrapActive","setFocusTrapActive","column","highlightedAnnotationIndex","indexOf","filter","row","a","errorItem","current","children","onItemFocus","onItemClick","annotation","onItemKeyDown","event","keyCode","enter","space","preventDefault","onEscKeyDown","escape","className","pane","onKeyDown","role","width","Infinity","height","minConstraints","axis","handle","disabled","autoFocus","returnFocus","whiteList","pane__list","tabIndex","pane__table","style","ref","map","i","key","pane__item","onFocus","onMouseOver","onClick","bind","pane__location","pane__cell","pane__description","text","formAction","variant","iconName","ariaLabel"],"sources":["/Users/dcastro/node_modules/src/code-editor/pane.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport FocusLock from 'react-focus-lock';\nimport { ResizableBox } from 'react-resizable';\nimport { Ace } from 'ace-builds';\n\nimport { KeyCode } from '../internal/keycode';\nimport { scrollElementIntoView } from '../internal/utils/scrollable-containers';\n\nimport { InternalButton } from '../button/internal';\nimport handler from './resize-handler';\n\nimport styles from './styles.css.js';\n\nconst ANNOTATION_ITEM_HEIGHT = 31;\nconst PANE_ANNOTATIONS_PADDING = 12;\nconst MIN_HEIGHT = 3 * ANNOTATION_ITEM_HEIGHT + 2 * PANE_ANNOTATIONS_PADDING;\n\nexport interface PaneProps {\n  id: string;\n\n  visible: boolean;\n  annotations: Ace.Annotation[];\n  highlighted?: Ace.Annotation;\n\n  cursorPositionLabel: (row: number, column: number) => string;\n  closeButtonAriaLabel: string;\n\n  onAllowlist: (activeElement: HTMLElement) => boolean;\n  onClose: () => void;\n  onAnnotationClick: (annotation: Ace.Annotation) => void;\n  onAnnotationClear: () => void;\n}\n\nexport const Pane = ({\n  id,\n  visible,\n  annotations,\n  highlighted,\n  onAllowlist,\n  onClose,\n  onAnnotationClick,\n  onAnnotationClear,\n  cursorPositionLabel,\n  closeButtonAriaLabel,\n}: PaneProps) => {\n  const listRef = useRef<HTMLTableSectionElement>(null);\n  const [isFocusTrapActive, setFocusTrapActive] = useState(false);\n\n  useEffect(() => {\n    if (!highlighted) {\n      return;\n    }\n    const { row, column } = highlighted;\n    const highlightedAnnotationIndex = annotations.indexOf(\n      annotations.filter(a => a.row === row && a.column === column)[0]\n    );\n\n    if (highlightedAnnotationIndex > -1) {\n      const errorItem = listRef.current?.children[highlightedAnnotationIndex] as HTMLElement | undefined;\n      scrollElementIntoView(errorItem);\n    }\n  }, [highlighted, annotations]);\n\n  const onItemFocus = () => {\n    setFocusTrapActive(true);\n    onAnnotationClear();\n  };\n\n  const onItemClick = (annotation: Ace.Annotation) => {\n    setFocusTrapActive(false);\n    onAnnotationClick(annotation);\n  };\n  const onItemKeyDown = (annotation: Ace.Annotation, event: React.KeyboardEvent) => {\n    if (event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) {\n      event.preventDefault();\n      setFocusTrapActive(false);\n      onAnnotationClick(annotation);\n    }\n  };\n\n  const onEscKeyDown = (event: React.KeyboardEvent) => {\n    if (event.keyCode === KeyCode.escape) {\n      event.preventDefault();\n      setFocusTrapActive(false);\n      onClose();\n    }\n  };\n\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <div id={id} className={styles.pane} onKeyDown={onEscKeyDown} role=\"tabpanel\">\n      <ResizableBox\n        className={styles['resizable-box']}\n        width={Infinity}\n        height={MIN_HEIGHT}\n        minConstraints={[Infinity, MIN_HEIGHT]}\n        axis=\"y\"\n        handle={handler}\n      >\n        <FocusLock\n          disabled={!isFocusTrapActive}\n          className={styles['focus-lock']}\n          autoFocus={false}\n          returnFocus={false}\n          whiteList={onAllowlist}\n        >\n          <div className={styles.pane__list} tabIndex={-1}>\n            <table className={styles.pane__table} role=\"presentation\">\n              <colgroup>\n                <col style={{ width: 1 } /* shrink to fit content */} />\n                <col style={{ width: 'auto' }} />\n              </colgroup>\n              <tbody ref={listRef}>\n                {annotations.map((annotation, i) => (\n                  <tr\n                    key={i}\n                    className={clsx(styles.pane__item, {\n                      [styles['pane__item--highlighted']]: annotation === highlighted,\n                    })}\n                    onFocus={onItemFocus}\n                    onMouseOver={onAnnotationClear}\n                    onClick={onItemClick.bind(null, annotation)}\n                    onKeyDown={onItemKeyDown.bind(null, annotation)}\n                    tabIndex={0}\n                    role=\"link\"\n                  >\n                    <td className={clsx(styles.pane__location, styles.pane__cell)} tabIndex={-1}>\n                      {cursorPositionLabel((annotation.row || 0) + 1, (annotation.column || 0) + 1)}\n                    </td>\n                    <td className={clsx(styles.pane__description, styles.pane__cell)} tabIndex={-1}>\n                      {annotation.text}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div className={styles['pane__close-container']}>\n            <InternalButton\n              formAction=\"none\"\n              variant=\"icon\"\n              iconName=\"close\"\n              onClick={onClose}\n              ariaLabel={closeButtonAriaLabel}\n            />\n          </div>\n        </FocusLock>\n      </ResizableBox>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}