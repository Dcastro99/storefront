{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styles from './styles.css.js';\nimport { InternalButton } from '../../../button/internal';\nimport InternalBox from '../../../box/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport { Task } from './task';\nimport { getStepInfo } from '../../../annotation-context/index.js';\nexport function TaskList(_a) {\n  var _b;\n  var tasks = _a.tasks,\n    onExitTutorial = _a.onExitTutorial,\n    currentGlobalStepIndex = _a.currentGlobalStepIndex,\n    i18nStrings = _a.i18nStrings;\n  var currentTaskIndex = getStepInfo(tasks, currentGlobalStepIndex !== null && currentGlobalStepIndex !== void 0 ? currentGlobalStepIndex : 0).taskIndex;\n  var _c = useState((_b = {}, _b[currentTaskIndex] = true, _b)),\n    expandedTasks = _c[0],\n    setExpandedTasks = _c[1];\n  var onToggleExpand = useCallback(function (stepIndex) {\n    setExpandedTasks(function (prevTasks) {\n      var _a;\n      return __assign(__assign({}, prevTasks), (_a = {}, _a[stepIndex] = !prevTasks[stepIndex], _a));\n    });\n  }, []);\n  // When the user progresses to a different task, all tasks except this one are collapsed.\n  useEffect(function () {\n    var _a;\n    setExpandedTasks((_a = {}, _a[currentTaskIndex] = true, _a));\n  }, [currentTaskIndex]);\n  return React.createElement(InternalSpaceBetween, {\n    size: \"xxl\"\n  }, React.createElement(\"ol\", {\n    className: styles['tutorial-list']\n  }, tasks.map(function (task, index) {\n    var _a;\n    return React.createElement(Task, {\n      task: task,\n      key: index,\n      taskIndex: index,\n      currentTaskIndex: currentTaskIndex,\n      expanded: (_a = expandedTasks[index]) !== null && _a !== void 0 ? _a : false,\n      onToggleExpand: onToggleExpand,\n      i18nStrings: i18nStrings\n    });\n  })), React.createElement(InternalBox, {\n    margin: {\n      top: 'xxxs'\n    }\n  }, React.createElement(InternalButton, {\n    onClick: onExitTutorial,\n    formAction: \"none\",\n    className: styles['dismiss-button']\n  }, i18nStrings.dismissTutorialButtonText)));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,SAASC,cAAc,QAAQ,0BAA0B;AACzD,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,oBAAoB,MAAM,iCAAiC;AAElE,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,WAAW,QAAQ,sCAAsC;AASlE,OAAM,SAAUC,QAAQ,CAACC,EAA6E;;MAA3EC,KAAK;IAAEC,cAAc;IAAEC,sBAAsB;IAAEC,WAAW;EACnF,IAAMC,gBAAgB,GAAGP,WAAW,CAACG,KAAK,EAAEE,sBAAsB,aAAtBA,sBAAsB,cAAtBA,sBAAsB,GAAI,CAAC,CAAC,CAACG,SAAS;EAC5E,SAAoCd,QAAQ,WAAGe,GAACF,gBAAgB,IAAG,IAAI,MAAG;IAAzEG,aAAa;IAAEC,gBAAgB,QAA0C;EAEhF,IAAMC,cAAc,GAAGpB,WAAW,CAAC,UAACqB,SAAiB;IACnDF,gBAAgB,CAAC,mBAAS;;MAAI,6BAAMG,SAAS,gBAAGD,SAAS,IAAG,CAACC,SAAS,CAACD,SAAS,CAAC;IAAnD,CAAsD,CAAC;EACvF,CAAC,EAAE,EAAE,CAAC;EAEN;EACApB,SAAS,CAAC;;IACRkB,gBAAgB,WAAGT,GAACK,gBAAgB,IAAG,IAAI,MAAG;EAChD,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,OACEhB,oBAACO,oBAAoB;IAACiB,IAAI,EAAC;EAAK,GAC9BxB;IAAIyB,SAAS,EAAErB,MAAM,CAAC,eAAe;EAAC,GACnCQ,KAAK,CAACc,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;;IAAK,OAC1B5B,oBAACQ,IAAI;MACHmB,IAAI,EAAEA,IAAI;MACVE,GAAG,EAAED,KAAK;MACVX,SAAS,EAAEW,KAAK;MAChBZ,gBAAgB,EAAEA,gBAAgB;MAClCc,QAAQ,EAAE,mBAAa,CAACF,KAAK,CAAC,mCAAI,KAAK;MACvCP,cAAc,EAAEA,cAAc;MAC9BN,WAAW,EAAEA;IAAW,EACxB;GACH,CAAC,CACC,EACLf,oBAACM,WAAW;IAACyB,MAAM,EAAE;MAAEC,GAAG,EAAE;IAAM;EAAE,GAClChC,oBAACK,cAAc;IAAC4B,OAAO,EAAEpB,cAAc;IAAEqB,UAAU,EAAC,MAAM;IAACT,SAAS,EAAErB,MAAM,CAAC,gBAAgB;EAAC,GAC3FW,WAAW,CAACoB,yBAAyB,CACvB,CACL,CACO;AAE3B","names":["React","useCallback","useEffect","useState","styles","InternalButton","InternalBox","InternalSpaceBetween","Task","getStepInfo","TaskList","_a","tasks","onExitTutorial","currentGlobalStepIndex","i18nStrings","currentTaskIndex","taskIndex","_b","expandedTasks","setExpandedTasks","onToggleExpand","stepIndex","prevTasks","size","className","map","task","index","key","expanded","margin","top","onClick","formAction","dismissTutorialButtonText"],"sources":["/Users/dcastro/node_modules/src/tutorial-panel/components/tutorial-detail-view/task-list.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styles from './styles.css.js';\nimport { TutorialPanelProps } from '../../interfaces';\nimport { InternalButton } from '../../../button/internal';\nimport InternalBox from '../../../box/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport { HotspotContext } from '../../../annotation-context/context';\nimport { Task } from './task';\nimport { getStepInfo } from '../../../annotation-context/index.js';\n\nexport interface TaskListProps {\n  tasks: ReadonlyArray<TutorialPanelProps.Task>;\n  onExitTutorial: () => void;\n  currentGlobalStepIndex: HotspotContext['currentStepIndex'];\n  i18nStrings: TutorialPanelProps['i18nStrings'];\n}\n\nexport function TaskList({ tasks, onExitTutorial, currentGlobalStepIndex, i18nStrings }: TaskListProps) {\n  const currentTaskIndex = getStepInfo(tasks, currentGlobalStepIndex ?? 0).taskIndex;\n  const [expandedTasks, setExpandedTasks] = useState({ [currentTaskIndex]: true });\n\n  const onToggleExpand = useCallback((stepIndex: number) => {\n    setExpandedTasks(prevTasks => ({ ...prevTasks, [stepIndex]: !prevTasks[stepIndex] }));\n  }, []);\n\n  // When the user progresses to a different task, all tasks except this one are collapsed.\n  useEffect(() => {\n    setExpandedTasks({ [currentTaskIndex]: true });\n  }, [currentTaskIndex]);\n\n  return (\n    <InternalSpaceBetween size=\"xxl\">\n      <ol className={styles['tutorial-list']}>\n        {tasks.map((task, index) => (\n          <Task\n            task={task}\n            key={index}\n            taskIndex={index}\n            currentTaskIndex={currentTaskIndex}\n            expanded={expandedTasks[index] ?? false}\n            onToggleExpand={onToggleExpand}\n            i18nStrings={i18nStrings}\n          />\n        ))}\n      </ol>\n      <InternalBox margin={{ top: 'xxxs' }}>\n        <InternalButton onClick={onExitTutorial} formAction=\"none\" className={styles['dismiss-button']}>\n          {i18nStrings.dismissTutorialButtonText}\n        </InternalButton>\n      </InternalBox>\n    </InternalSpaceBetween>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}