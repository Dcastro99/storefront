{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useReducer, useRef } from 'react';\nimport InternalBreadcrumbGroup from '../../breadcrumb-group/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalModal from '../../modal/internal';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport { useEffectOnUpdate } from '../../internal/hooks/use-effect-on-update';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport { BucketsTable } from './buckets-table';\nimport { ObjectsTable } from './objects-table';\nimport { VersionsTable } from './versions-table';\nimport styles from './styles.css.js';\nimport { joinObjectPath } from '../utils';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction assertNever(_value) {\n  return null;\n}\nvar initialBrowseState = {\n  selectedItem: null,\n  currentView: 'buckets',\n  breadcrumbs: []\n};\nfunction s3BrowseReducer(state, action) {\n  switch (action.type) {\n    case 'browse-buckets':\n      return initialBrowseState;\n    case 'browse-objects':\n      return {\n        selectedItem: null,\n        currentView: 'objects',\n        breadcrumbs: action.breadcrumbs\n      };\n    case 'browse-versions':\n      return {\n        selectedItem: null,\n        currentView: 'versions',\n        breadcrumbs: action.breadcrumbs\n      };\n    case 'select-item':\n      return __assign(__assign({}, state), {\n        selectedItem: action.item\n      });\n    default:\n      assertNever(action);\n  }\n  return state;\n}\nfunction createResourceInfo(_a) {\n  var currentView = _a.currentView,\n    breadcrumbs = _a.breadcrumbs,\n    selectedItem = _a.selectedItem;\n  var prefix = 's3://';\n  if (currentView === 'versions') {\n    return {\n      uri: prefix + joinObjectPath(breadcrumbs),\n      versionId: selectedItem !== null && selectedItem !== void 0 ? selectedItem : undefined\n    };\n  }\n  return {\n    uri: prefix + joinObjectPath(__spreadArray(__spreadArray([], breadcrumbs, true), [selectedItem], false))\n  };\n}\nexport function S3Modal(_a) {\n  var _b, _c;\n  var i18nStrings = _a.i18nStrings,\n    alert = _a.alert,\n    selectableItemsTypes = _a.selectableItemsTypes,\n    fetchBuckets = _a.fetchBuckets,\n    bucketsVisibleColumns = _a.bucketsVisibleColumns,\n    bucketsIsItemDisabled = _a.bucketsIsItemDisabled,\n    fetchObjects = _a.fetchObjects,\n    objectsVisibleColumns = _a.objectsVisibleColumns,\n    objectsIsItemDisabled = _a.objectsIsItemDisabled,\n    fetchVersions = _a.fetchVersions,\n    versionsVisibleColumns = _a.versionsVisibleColumns,\n    versionsIsItemDisabled = _a.versionsIsItemDisabled,\n    onSubmit = _a.onSubmit,\n    onDismiss = _a.onDismiss;\n  var _d = useReducer(s3BrowseReducer, initialBrowseState),\n    _e = _d[0],\n    currentView = _e.currentView,\n    breadcrumbs = _e.breadcrumbs,\n    selectedItem = _e.selectedItem,\n    dispatch = _d[1];\n  var forwardFocusRef = useRef(null);\n  var isVisualRefresh = useVisualRefresh();\n  useEffectOnUpdate(function () {\n    var _a;\n    (_a = forwardFocusRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  }, [breadcrumbs]);\n  return React.createElement(\"div\", null, React.createElement(InternalModal, {\n    visible: true,\n    size: \"max\",\n    closeAriaLabel: (_b = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelModalDismiss) !== null && _b !== void 0 ? _b : '',\n    onDismiss: onDismiss,\n    header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalTitle,\n    footer: React.createElement(InternalSpaceBetween, {\n      className: styles['modal-actions'],\n      size: \"xs\",\n      direction: \"horizontal\"\n    }, React.createElement(InternalButton, {\n      variant: \"link\",\n      formAction: \"none\",\n      onClick: onDismiss\n    }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalCancelButton), React.createElement(InternalButton, {\n      variant: \"primary\",\n      className: styles['submit-button'],\n      disabled: !selectedItem,\n      formAction: \"none\",\n      onClick: function () {\n        return onSubmit(createResourceInfo({\n          currentView: currentView,\n          breadcrumbs: breadcrumbs,\n          selectedItem: selectedItem\n        }));\n      }\n    }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalSubmitButton))\n  }, React.createElement(InternalSpaceBetween, {\n    size: isVisualRefresh ? 'xxs' : 'xs'\n  }, React.createElement(InternalBreadcrumbGroup, {\n    ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelBreadcrumbs,\n    expandAriaLabel: \"Show path\",\n    onFollow: function (event) {\n      event.preventDefault();\n      event.detail.item.meta.onClick();\n    },\n    items: __spreadArray([{\n      text: (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalBreadcrumbRootItem) !== null && _c !== void 0 ? _c : '',\n      href: '',\n      meta: {\n        onClick: function () {\n          return dispatch({\n            type: 'browse-buckets'\n          });\n        }\n      }\n    }], breadcrumbs.map(function (segment, index) {\n      return {\n        text: segment,\n        href: '',\n        meta: {\n          onClick: function () {\n            return dispatch({\n              type: 'browse-objects',\n              breadcrumbs: breadcrumbs.slice(0, index + 1)\n            });\n          }\n        }\n      };\n    }), true)\n  }), alert, currentView === 'buckets' ? React.createElement(BucketsTable, {\n    forwardFocusRef: forwardFocusRef,\n    fetchData: fetchBuckets,\n    visibleColumns: bucketsVisibleColumns,\n    isItemDisabled: bucketsIsItemDisabled,\n    selectableItemsTypes: selectableItemsTypes,\n    i18nStrings: i18nStrings,\n    isVisualRefresh: isVisualRefresh,\n    onDrilldown: function (path) {\n      return dispatch({\n        type: 'browse-objects',\n        breadcrumbs: [path]\n      });\n    },\n    onSelect: function (item) {\n      return dispatch({\n        type: 'select-item',\n        item: item\n      });\n    }\n  }) : currentView === 'objects' ? React.createElement(ObjectsTable, {\n    forwardFocusRef: forwardFocusRef,\n    pathSegments: breadcrumbs,\n    fetchData: fetchObjects,\n    visibleColumns: objectsVisibleColumns,\n    isItemDisabled: objectsIsItemDisabled,\n    selectableItemsTypes: selectableItemsTypes,\n    i18nStrings: i18nStrings,\n    isVisualRefresh: isVisualRefresh,\n    onDrilldown: function (item) {\n      dispatch({\n        type: item.IsFolder ? 'browse-objects' : 'browse-versions',\n        breadcrumbs: __spreadArray(__spreadArray([], breadcrumbs, true), [item.Key], false)\n      });\n    },\n    onSelect: function (item) {\n      return dispatch({\n        type: 'select-item',\n        item: item\n      });\n    }\n  }) : currentView === 'versions' ? React.createElement(VersionsTable, {\n    forwardFocusRef: forwardFocusRef,\n    pathSegments: breadcrumbs,\n    fetchData: fetchVersions,\n    visibleColumns: versionsVisibleColumns,\n    isItemDisabled: versionsIsItemDisabled,\n    i18nStrings: i18nStrings,\n    isVisualRefresh: isVisualRefresh,\n    onSelect: function (item) {\n      return dispatch({\n        type: 'select-item',\n        item: item\n      });\n    }\n  }) : assertNever(currentView))));\n}","map":{"version":3,"mappings":"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","names":["React","useReducer","useRef","InternalBreadcrumbGroup","InternalButton","InternalModal","InternalSpaceBetween","useEffectOnUpdate","useVisualRefresh","BucketsTable","ObjectsTable","VersionsTable","styles","joinObjectPath","assertNever","_value","initialBrowseState","selectedItem","currentView","breadcrumbs","s3BrowseReducer","state","action","type","item","createResourceInfo","_a","prefix","uri","versionId","undefined","S3Modal","i18nStrings","alert","selectableItemsTypes","fetchBuckets","bucketsVisibleColumns","bucketsIsItemDisabled","fetchObjects","objectsVisibleColumns","objectsIsItemDisabled","fetchVersions","versionsVisibleColumns","versionsIsItemDisabled","onSubmit","onDismiss","_e","dispatch","forwardFocusRef","isVisualRefresh","current","focus","visible","size","closeAriaLabel","labelModalDismiss","header","modalTitle","footer","className","direction","variant","formAction","onClick","modalCancelButton","disabled","modalSubmitButton","ariaLabel","labelBreadcrumbs","expandAriaLabel","onFollow","event","preventDefault","detail","meta","items","text","modalBreadcrumbRootItem","href","map","segment","index","slice","fetchData","visibleColumns","isItemDisabled","onDrilldown","path","onSelect","pathSegments","IsFolder","Key"],"sources":["/Users/dcastro/node_modules/src/s3-resource-selector/s3-modal/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useReducer, useRef } from 'react';\nimport InternalBreadcrumbGroup from '../../breadcrumb-group/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalModal from '../../modal/internal';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { useEffectOnUpdate } from '../../internal/hooks/use-effect-on-update';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { BucketsTable } from './buckets-table';\nimport { ObjectsTable } from './objects-table';\nimport { VersionsTable } from './versions-table';\nimport styles from './styles.css.js';\nimport { joinObjectPath } from '../utils';\n\nexport interface S3ModalProps {\n  alert: React.ReactNode;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchBuckets: S3ResourceSelectorProps['fetchBuckets'];\n  bucketsVisibleColumns: ReadonlyArray<string>;\n  bucketsIsItemDisabled: S3ResourceSelectorProps['bucketsIsItemDisabled'];\n  fetchObjects: S3ResourceSelectorProps['fetchObjects'];\n  objectsVisibleColumns: ReadonlyArray<string>;\n  objectsIsItemDisabled: S3ResourceSelectorProps['objectsIsItemDisabled'];\n  fetchVersions: S3ResourceSelectorProps['fetchVersions'];\n  versionsVisibleColumns: ReadonlyArray<string>;\n  versionsIsItemDisabled: S3ResourceSelectorProps['versionsIsItemDisabled'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  onDismiss: () => void;\n  onSubmit: (resource: S3ResourceSelectorProps.Resource) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction assertNever(_value: never) {\n  return null;\n}\n\ninterface S3BrowseState {\n  selectedItem: string | null;\n  currentView: 'buckets' | 'objects' | 'versions';\n  breadcrumbs: ReadonlyArray<string>;\n}\n\ntype S3BrowseActions =\n  | { type: 'browse-buckets' }\n  | { type: 'browse-objects' | 'browse-versions'; breadcrumbs: S3BrowseState['breadcrumbs'] }\n  | { type: 'select-item'; item: string };\n\nconst initialBrowseState: S3BrowseState = {\n  selectedItem: null,\n  currentView: 'buckets',\n  breadcrumbs: [],\n};\n\nfunction s3BrowseReducer(state: S3BrowseState, action: S3BrowseActions) {\n  switch (action.type) {\n    case 'browse-buckets':\n      return initialBrowseState;\n    case 'browse-objects':\n      return {\n        selectedItem: null,\n        currentView: 'objects' as const,\n        breadcrumbs: action.breadcrumbs,\n      };\n    case 'browse-versions':\n      return {\n        selectedItem: null,\n        currentView: 'versions' as const,\n        breadcrumbs: action.breadcrumbs,\n      };\n    case 'select-item':\n      return {\n        ...state,\n        selectedItem: action.item,\n      };\n    default:\n      assertNever(action);\n  }\n  return state;\n}\n\nfunction createResourceInfo({ currentView, breadcrumbs, selectedItem }: S3BrowseState) {\n  const prefix = 's3://';\n  if (currentView === 'versions') {\n    return { uri: prefix + joinObjectPath(breadcrumbs), versionId: selectedItem ?? undefined };\n  }\n  return { uri: prefix + joinObjectPath([...breadcrumbs, selectedItem!]) };\n}\n\nexport function S3Modal({\n  i18nStrings,\n  alert,\n  selectableItemsTypes,\n  fetchBuckets,\n  bucketsVisibleColumns,\n  bucketsIsItemDisabled,\n  fetchObjects,\n  objectsVisibleColumns,\n  objectsIsItemDisabled,\n  fetchVersions,\n  versionsVisibleColumns,\n  versionsIsItemDisabled,\n  onSubmit,\n  onDismiss,\n}: S3ModalProps) {\n  const [{ currentView, breadcrumbs, selectedItem }, dispatch] = useReducer(s3BrowseReducer, initialBrowseState);\n  const forwardFocusRef = useRef<ForwardFocusRef>(null);\n\n  const isVisualRefresh = useVisualRefresh();\n\n  useEffectOnUpdate(() => {\n    forwardFocusRef.current?.focus();\n  }, [breadcrumbs]);\n\n  return (\n    <div>\n      <InternalModal\n        visible={true}\n        size=\"max\"\n        closeAriaLabel={i18nStrings?.labelModalDismiss ?? ''}\n        onDismiss={onDismiss}\n        header={i18nStrings?.modalTitle}\n        footer={\n          <InternalSpaceBetween className={styles['modal-actions']} size=\"xs\" direction=\"horizontal\">\n            <InternalButton variant=\"link\" formAction=\"none\" onClick={onDismiss}>\n              {i18nStrings?.modalCancelButton}\n            </InternalButton>\n            <InternalButton\n              variant=\"primary\"\n              className={styles['submit-button']}\n              disabled={!selectedItem}\n              formAction=\"none\"\n              onClick={() => onSubmit(createResourceInfo({ currentView, breadcrumbs, selectedItem }))}\n            >\n              {i18nStrings?.modalSubmitButton}\n            </InternalButton>\n          </InternalSpaceBetween>\n        }\n      >\n        <InternalSpaceBetween size={isVisualRefresh ? 'xxs' : 'xs'}>\n          <InternalBreadcrumbGroup\n            ariaLabel={i18nStrings?.labelBreadcrumbs}\n            expandAriaLabel=\"Show path\"\n            onFollow={event => {\n              event.preventDefault();\n              event.detail.item.meta.onClick();\n            }}\n            items={[\n              {\n                text: i18nStrings?.modalBreadcrumbRootItem ?? '',\n                href: '',\n                meta: { onClick: () => dispatch({ type: 'browse-buckets' }) },\n              },\n              ...breadcrumbs.map((segment, index) => ({\n                text: segment,\n                href: '',\n                meta: {\n                  onClick: () =>\n                    dispatch({\n                      type: 'browse-objects',\n                      breadcrumbs: breadcrumbs.slice(0, index + 1),\n                    }),\n                },\n              })),\n            ]}\n          />\n          {alert}\n          {currentView === 'buckets' ? (\n            <BucketsTable\n              forwardFocusRef={forwardFocusRef}\n              fetchData={fetchBuckets}\n              visibleColumns={bucketsVisibleColumns}\n              isItemDisabled={bucketsIsItemDisabled}\n              selectableItemsTypes={selectableItemsTypes}\n              i18nStrings={i18nStrings}\n              isVisualRefresh={isVisualRefresh}\n              onDrilldown={path =>\n                dispatch({\n                  type: 'browse-objects',\n                  breadcrumbs: [path],\n                })\n              }\n              onSelect={item => dispatch({ type: 'select-item', item })}\n            />\n          ) : currentView === 'objects' ? (\n            <ObjectsTable\n              forwardFocusRef={forwardFocusRef}\n              pathSegments={breadcrumbs}\n              fetchData={fetchObjects}\n              visibleColumns={objectsVisibleColumns}\n              isItemDisabled={objectsIsItemDisabled}\n              selectableItemsTypes={selectableItemsTypes}\n              i18nStrings={i18nStrings}\n              isVisualRefresh={isVisualRefresh}\n              onDrilldown={item => {\n                dispatch({\n                  type: item.IsFolder ? 'browse-objects' : 'browse-versions',\n                  breadcrumbs: [...breadcrumbs, item.Key!],\n                });\n              }}\n              onSelect={item => dispatch({ type: 'select-item', item })}\n            />\n          ) : currentView === 'versions' ? (\n            <VersionsTable\n              forwardFocusRef={forwardFocusRef}\n              pathSegments={breadcrumbs}\n              fetchData={fetchVersions}\n              visibleColumns={versionsVisibleColumns}\n              isItemDisabled={versionsIsItemDisabled}\n              i18nStrings={i18nStrings}\n              isVisualRefresh={isVisualRefresh}\n              onSelect={item => dispatch({ type: 'select-item', item })}\n            />\n          ) : (\n            assertNever(currentView)\n          )}\n        </InternalSpaceBetween>\n      </InternalModal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}