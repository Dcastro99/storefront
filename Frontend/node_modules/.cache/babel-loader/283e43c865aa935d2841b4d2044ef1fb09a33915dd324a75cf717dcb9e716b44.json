{"ast":null,"code":"import { warnOnce } from '../internal/logging';\nexport function hasActiveLink(items, activeHref) {\n  for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n    var item = items_1[_i];\n    if ((item.type === 'link' || item.type === 'link-group' || item.type === 'expandable-link-group') && item.href === activeHref) {\n      return true;\n    }\n    if ((item.type === 'section' || item.type === 'link-group' || item.type === 'expandable-link-group') && hasActiveLink(item.items, activeHref)) {\n      return true;\n    }\n  }\n  return false;\n}\nexport function generateExpandableItemsMapping(items, mapping, expandableParents) {\n  if (mapping === void 0) {\n    mapping = new WeakMap();\n  }\n  if (expandableParents === void 0) {\n    expandableParents = [];\n  }\n  items.forEach(function (item) {\n    var nextLevelParents = expandableParents.slice();\n    if (item.type === 'section' || item.type === 'expandable-link-group') {\n      mapping.set(item, expandableParents);\n      nextLevelParents.unshift(item);\n    }\n    if (item.type === 'section' || item.type === 'link-group' || item.type === 'expandable-link-group') {\n      generateExpandableItemsMapping(item.items, mapping, nextLevelParents);\n    }\n  });\n  return mapping;\n}\nexport function checkDuplicateHrefs(items) {\n  var hrefs = new Set();\n  var queue = items.slice();\n  while (queue.length > 0) {\n    // We just checked that there's items in the queue.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var item = queue.shift();\n    // Check duplicated hrefs\n    if ('href' in item) {\n      if (hrefs.has(item.href)) {\n        warnOnce('SideNavigation', \"duplicate href in \\\"\".concat(item.text, \"\\\": \").concat(item.href));\n      }\n      hrefs.add(item.href);\n    }\n    if ('items' in item) {\n      queue.push.apply(queue, item.items);\n    }\n  }\n}","map":{"version":3,"mappings":"AAGA,SAASA,QAAQ,QAAQ,qBAAqB;AAI9C,OAAM,SAAUC,aAAa,CAACC,KAA8C,EAAEC,UAAkB;EAC9F,KAAmB,UAAK,EAALC,eAAK,EAALC,mBAAK,EAALA,IAAK,EAAE;IAArB,IAAMC,IAAI;IACb,IACE,CAACA,IAAI,CAACC,IAAI,KAAK,MAAM,IAAID,IAAI,CAACC,IAAI,KAAK,YAAY,IAAID,IAAI,CAACC,IAAI,KAAK,uBAAuB,KAC5FD,IAAI,CAACE,IAAI,KAAKL,UAAU,EACxB;MACA,OAAO,IAAI;;IAEb,IACE,CAACG,IAAI,CAACC,IAAI,KAAK,SAAS,IAAID,IAAI,CAACC,IAAI,KAAK,YAAY,IAAID,IAAI,CAACC,IAAI,KAAK,uBAAuB,KAC/FN,aAAa,CAACK,IAAI,CAACJ,KAAK,EAAEC,UAAU,CAAC,EACrC;MACA,OAAO,IAAI;;;EAGf,OAAO,KAAK;AACd;AAEA,OAAM,SAAUM,8BAA8B,CAC5CP,KAA8C,EAC9CQ,OAAyF,EACzFC,iBAAqD;EADrD;IAAAD,cAAgFE,OAAO,EAAE;EAAA;EACzF;IAAAD,sBAAqD;EAAA;EAErDT,KAAK,CAACW,OAAO,CAAC,cAAI;IAChB,IAAMC,gBAAgB,GAAGH,iBAAiB,CAACI,KAAK,EAAE;IAClD,IAAIT,IAAI,CAACC,IAAI,KAAK,SAAS,IAAID,IAAI,CAACC,IAAI,KAAK,uBAAuB,EAAE;MACpEG,OAAO,CAACM,GAAG,CAACV,IAAI,EAAEK,iBAAiB,CAAC;MACpCG,gBAAgB,CAACG,OAAO,CAACX,IAAI,CAAC;;IAEhC,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,IAAID,IAAI,CAACC,IAAI,KAAK,YAAY,IAAID,IAAI,CAACC,IAAI,KAAK,uBAAuB,EAAE;MAClGE,8BAA8B,CAACH,IAAI,CAACJ,KAAK,EAAEQ,OAAO,EAAEI,gBAAgB,CAAC;;EAEzE,CAAC,CAAC;EACF,OAAOJ,OAAO;AAChB;AAEA,OAAM,SAAUQ,mBAAmB,CAAChB,KAA8C;EAChF,IAAMiB,KAAK,GAAG,IAAIC,GAAG,EAAE;EACvB,IAAMC,KAAK,GAAGnB,KAAK,CAACa,KAAK,EAAE;EAC3B,OAAOM,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IACvB;IACA;IACA,IAAMhB,IAAI,GAAGe,KAAK,CAACE,KAAK,EAAG;IAE3B;IACA,IAAI,MAAM,IAAIjB,IAAI,EAAE;MAClB,IAAIa,KAAK,CAACK,GAAG,CAAClB,IAAI,CAACE,IAAI,CAAC,EAAE;QACxBR,QAAQ,CAAC,gBAAgB,EAAE,8BAAsBM,IAAI,CAACmB,IAAI,iBAAMnB,IAAI,CAACE,IAAI,CAAE,CAAC;;MAE9EW,KAAK,CAACO,GAAG,CAACpB,IAAI,CAACE,IAAI,CAAC;;IAGtB,IAAI,OAAO,IAAIF,IAAI,EAAE;MACnBe,KAAK,CAACM,IAAI,OAAVN,KAAK,EAASf,IAAI,CAACJ,KAAK;;;AAG9B","names":["warnOnce","hasActiveLink","items","activeHref","items_1","_i","item","type","href","generateExpandableItemsMapping","mapping","expandableParents","WeakMap","forEach","nextLevelParents","slice","set","unshift","checkDuplicateHrefs","hrefs","Set","queue","length","shift","has","text","add","push"],"sources":["/Users/dcastro/node_modules/src/side-navigation/util.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SideNavigationProps } from './interfaces';\nimport { warnOnce } from '../internal/logging';\n\ntype ExpandableItem = SideNavigationProps.Section | SideNavigationProps.ExpandableLinkGroup;\n\nexport function hasActiveLink(items: ReadonlyArray<SideNavigationProps.Item>, activeHref: string): boolean {\n  for (const item of items) {\n    if (\n      (item.type === 'link' || item.type === 'link-group' || item.type === 'expandable-link-group') &&\n      item.href === activeHref\n    ) {\n      return true;\n    }\n    if (\n      (item.type === 'section' || item.type === 'link-group' || item.type === 'expandable-link-group') &&\n      hasActiveLink(item.items, activeHref)\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function generateExpandableItemsMapping(\n  items: ReadonlyArray<SideNavigationProps.Item>,\n  mapping: WeakMap<SideNavigationProps.Item, ReadonlyArray<ExpandableItem>> = new WeakMap(),\n  expandableParents: ReadonlyArray<ExpandableItem> = []\n): WeakMap<SideNavigationProps.Item, ReadonlyArray<ExpandableItem>> {\n  items.forEach(item => {\n    const nextLevelParents = expandableParents.slice();\n    if (item.type === 'section' || item.type === 'expandable-link-group') {\n      mapping.set(item, expandableParents);\n      nextLevelParents.unshift(item);\n    }\n    if (item.type === 'section' || item.type === 'link-group' || item.type === 'expandable-link-group') {\n      generateExpandableItemsMapping(item.items, mapping, nextLevelParents);\n    }\n  });\n  return mapping;\n}\n\nexport function checkDuplicateHrefs(items: ReadonlyArray<SideNavigationProps.Item>) {\n  const hrefs = new Set();\n  const queue = items.slice();\n  while (queue.length > 0) {\n    // We just checked that there's items in the queue.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const item = queue.shift()!;\n\n    // Check duplicated hrefs\n    if ('href' in item) {\n      if (hrefs.has(item.href)) {\n        warnOnce('SideNavigation', `duplicate href in \"${item.text}\": ${item.href}`);\n      }\n      hrefs.add(item.href);\n    }\n\n    if ('items' in item) {\n      queue.push(...item.items);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}