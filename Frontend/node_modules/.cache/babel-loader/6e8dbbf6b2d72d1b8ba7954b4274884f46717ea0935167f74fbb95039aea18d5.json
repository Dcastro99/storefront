{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useState } from 'react';\nimport AnnotationTrigger from './annotation-trigger';\nexport function ClosedAnnotation(_a) {\n  var globalStepIndex = _a.globalStepIndex,\n    onOpen = _a.onOpen,\n    i18nStrings = _a.i18nStrings,\n    focusOnRender = _a.focusOnRender;\n  var _b = useState(null),\n    hotspotRef = _b[0],\n    setHotspotRef = _b[1];\n  var onClick = useCallback(function () {\n    onOpen(globalStepIndex);\n  }, [globalStepIndex, onOpen]);\n  useEffect(function () {\n    if (focusOnRender && hotspotRef) {\n      hotspotRef.focus();\n    }\n  }, [focusOnRender, hotspotRef]);\n  return React.createElement(AnnotationTrigger, {\n    open: false,\n    onClick: onClick,\n    i18nStrings: i18nStrings,\n    ref: setHotspotRef\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE/D,OAAOC,iBAAiB,MAAM,sBAAsB;AAYpD,OAAM,SAAUC,gBAAgB,CAACC,EAAwE;MAAtEC,eAAe;IAAEC,MAAM;IAAEC,WAAW;IAAEC,aAAa;EAC9E,SAA8BP,QAAQ,CAA2B,IAAI,CAAC;IAArEQ,UAAU;IAAEC,aAAa,QAA4C;EAC5E,IAAMC,OAAO,GAAGZ,WAAW,CAAC;IAC1BO,MAAM,CAACD,eAAe,CAAC;EACzB,CAAC,EAAE,CAACA,eAAe,EAAEC,MAAM,CAAC,CAAC;EAE7BN,SAAS,CAAC;IACR,IAAIQ,aAAa,IAAIC,UAAU,EAAE;MAC/BA,UAAU,CAACG,KAAK,EAAE;;EAEtB,CAAC,EAAE,CAACJ,aAAa,EAAEC,UAAU,CAAC,CAAC;EAE/B,OAAOX,oBAACI,iBAAiB;IAACW,IAAI,EAAE,KAAK;IAAEF,OAAO,EAAEA,OAAO;IAAEJ,WAAW,EAAEA,WAAW;IAAEO,GAAG,EAAEJ;EAAa,EAAI;AAC3G","names":["React","useCallback","useEffect","useState","AnnotationTrigger","ClosedAnnotation","_a","globalStepIndex","onOpen","i18nStrings","focusOnRender","hotspotRef","setHotspotRef","onClick","focus","open","ref"],"sources":["/Users/dcastro/node_modules/src/annotation-context/annotation/closed-annotation.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AnnotationContextProps } from '../interfaces';\nimport AnnotationTrigger from './annotation-trigger';\n\nexport interface AnnotationProps {\n  globalStepIndex: number;\n\n  onOpen: (stepId: number) => void;\n\n  i18nStrings: AnnotationContextProps['i18nStrings'];\n\n  focusOnRender: boolean;\n}\n\nexport function ClosedAnnotation({ globalStepIndex, onOpen, i18nStrings, focusOnRender }: AnnotationProps) {\n  const [hotspotRef, setHotspotRef] = useState<HTMLButtonElement | null>(null);\n  const onClick = useCallback(() => {\n    onOpen(globalStepIndex);\n  }, [globalStepIndex, onOpen]);\n\n  useEffect(() => {\n    if (focusOnRender && hotspotRef) {\n      hotspotRef.focus();\n    }\n  }, [focusOnRender, hotspotRef]);\n\n  return <AnnotationTrigger open={false} onClick={onClick} i18nStrings={i18nStrings} ref={setHotspotRef} />;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}