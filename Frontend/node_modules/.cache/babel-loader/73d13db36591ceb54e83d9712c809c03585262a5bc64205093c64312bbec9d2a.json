{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { ResizableBox } from 'react-resizable';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { getBaseProps } from '../internal/base-component';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { Pane } from './pane';\nimport { useChangeEffect } from './listeners';\nimport { getDefaultConfig, getAceTheme, getLanguageLabel, DEFAULT_DARK_THEME, DEFAULT_LIGHT_THEME, getDefaultTheme } from './util';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { setupEditor } from './setup-editor';\nimport handler from './resize-handler';\nimport PreferencesModal from './preferences-modal';\nimport LoadingScreen from './loading-screen';\nimport ErrorScreen from './error-screen';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { useContainerQuery } from '../internal/hooks/container-queries/use-container-query';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useCurrentMode } from '../internal/hooks/use-visual-mode';\nimport { StatusBar } from './status-bar';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useControllable } from '../internal/hooks/use-controllable';\nexport default function CodeEditor(props) {\n  var _a;\n  var __internalRootRef = useBaseComponent('CodeEditor').__internalRootRef;\n  var _b = useFormFieldContext(props),\n    controlId = _b.controlId,\n    ariaLabelledby = _b.ariaLabelledby,\n    ariaDescribedby = _b.ariaDescribedby;\n  var ace = props.ace,\n    value = props.value,\n    language = props.language,\n    i18nStrings = props.i18nStrings,\n    editorContentHeight = props.editorContentHeight,\n    onEditorContentResize = props.onEditorContentResize,\n    rest = __rest(props, [\"ace\", \"value\", \"language\", \"i18nStrings\", \"editorContentHeight\", \"onEditorContentResize\"]);\n  var _c = useControllable(editorContentHeight, onEditorContentResize, 480, {\n      componentName: 'code-editor',\n      changeHandler: 'onEditorContentResize',\n      controlledProp: 'editorContentHeight'\n    }),\n    _d = _c[0],\n    editorHeight = _d === void 0 ? 480 : _d,\n    setEditorHeight = _c[1];\n  var baseProps = getBaseProps(rest);\n  var _e = useState(),\n    editor = _e[0],\n    setEditor = _e[1];\n  var mode = useCurrentMode(__internalRootRef);\n  var defaultTheme = mode === 'dark' ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n  var editorRef = useCallback(function (elem) {\n    if (!ace || !elem) {\n      return;\n    }\n    var config = getDefaultConfig();\n    setEditor(ace.edit(elem, __assign(__assign({}, config), {\n      theme: getAceTheme(getDefaultTheme(elem))\n    })));\n  }, [ace]); // loads as soon as ace lib is available\n  useEffect(function () {\n    if (!editor) {\n      return;\n    }\n    var textarea = editor.renderer.textarea;\n    if (!textarea) {\n      return;\n    }\n    var updateAttribute = function (attribute, value) {\n      return value ? textarea.setAttribute(attribute, value) : textarea.removeAttribute(attribute);\n    };\n    updateAttribute('id', controlId);\n    updateAttribute('aria-labelledby', ariaLabelledby);\n    updateAttribute('aria-describedby', ariaDescribedby);\n  }, [ariaDescribedby, ariaLabelledby, controlId, editor]);\n  var _f = useState('hidden'),\n    paneStatus = _f[0],\n    setPaneStatus = _f[1];\n  var _g = useState([]),\n    annotations = _g[0],\n    setAnnotations = _g[1];\n  var _h = useState(),\n    highlightedAnnotation = _h[0],\n    setHighlightedAnnotation = _h[1];\n  var _j = useState(''),\n    languageLabel = _j[0],\n    setLanguageLabel = _j[1];\n  var _k = useState({\n      row: 0,\n      column: 0\n    }),\n    cursorPosition = _k[0],\n    setCursorPosition = _k[1];\n  var _l = useState(false),\n    isTabFocused = _l[0],\n    setTabFocused = _l[1];\n  var errorsTabRef = useRef(null);\n  var warningsTabRef = useRef(null);\n  var _m = useContainerQuery(function (rect) {\n      return rect.width;\n    }),\n    codeEditorWidth = _m[0],\n    codeEditorMeasureRef = _m[1];\n  var mergedRef = useMergeRefs(codeEditorMeasureRef, __internalRootRef);\n  var isRefresh = useVisualRefresh();\n  useEffect(function () {\n    editor === null || editor === void 0 ? void 0 : editor.resize();\n  }, [editor, editorContentHeight, codeEditorWidth]);\n  var paneId = useUniqueId('code-editor-pane');\n  useEffect(function () {\n    if (!ace || !editor) {\n      return;\n    }\n    setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus);\n    return function () {\n      editor === null || editor === void 0 ? void 0 : editor.destroy();\n    }; // TODO profile/monitor this\n  }, [ace, editor, __internalRootRef]);\n  useEffect(function () {\n    if (!editor) {\n      return;\n    }\n    if (value === editor.getValue()) {\n      return;\n    }\n    // TODO maintain cursor position?\n    var pos = editor.session.selection.toJSON();\n    editor.setValue(value, -1);\n    editor.session.selection.fromJSON(pos);\n  }, [editor, value]);\n  useEffect(function () {\n    if (!editor) {\n      return;\n    }\n    editor.session.setMode(\"ace/mode/\".concat(language));\n    setLanguageLabel(getLanguageLabel(language));\n  }, [editor, language]);\n  useEffect(function () {\n    var _a, _b, _c, _d;\n    if (!editor) {\n      return;\n    }\n    var theme = (_b = (_a = props.preferences) === null || _a === void 0 ? void 0 : _a.theme) !== null && _b !== void 0 ? _b : defaultTheme;\n    editor.setTheme(getAceTheme(theme));\n    editor.session.setUseWrapMode((_d = (_c = props.preferences) === null || _c === void 0 ? void 0 : _c.wrapLines) !== null && _d !== void 0 ? _d : true);\n  }, [editor, defaultTheme, props.preferences]);\n  // listeners\n  useChangeEffect(editor, props.onChange, props.onDelayedChange);\n  // TODO implement other listeners\n  // Hide error panel when there are no errors to show.\n  useEffect(function () {\n    if (annotations.length === 0) {\n      setPaneStatus('hidden');\n    }\n    if (props.onValidate) {\n      fireNonCancelableEvent(props.onValidate, {\n        annotations: annotations\n      });\n    }\n  }, [annotations, props.onValidate]);\n  var errorCount = annotations.filter(function (a) {\n    return a.type === 'error';\n  }).length;\n  var warningCount = annotations.filter(function (a) {\n    return a.type === 'warning';\n  }).length;\n  var currentAnnotations = useMemo(function () {\n    return annotations.filter(function (a) {\n      return a.type === paneStatus;\n    });\n  }, [annotations, paneStatus]);\n  /*\n   * Callbacks\n   */\n  var onEditorKeydown = useCallback(function (e) {\n    if (editor && e.target === editor.container && e.keyCode === KeyCode.enter) {\n      e.stopPropagation();\n      e.preventDefault();\n      editor.focus();\n    }\n  }, [editor]);\n  var onTabFocus = useCallback(function () {\n    return setTabFocused(true);\n  }, []);\n  var onTabBlur = useCallback(function () {\n    return setTabFocused(false);\n  }, []);\n  var onResize = useCallback(function () {\n    editor === null || editor === void 0 ? void 0 : editor.resize();\n  }, [editor]);\n  var onErrorPaneToggle = useCallback(function () {\n    setPaneStatus(paneStatus !== 'error' ? 'error' : 'hidden');\n  }, [paneStatus]);\n  var onWarningPaneToggle = useCallback(function () {\n    setPaneStatus(paneStatus !== 'warning' ? 'warning' : 'hidden');\n  }, [paneStatus]);\n  var onPaneClose = useCallback(function () {\n    if (paneStatus === 'error' && errorsTabRef.current) {\n      errorsTabRef.current.focus();\n    }\n    if (paneStatus === 'warning' && warningsTabRef.current) {\n      warningsTabRef.current.focus();\n    }\n    setPaneStatus('hidden');\n  }, [paneStatus]);\n  var onAnnotationClick = function (_a) {\n    var _b = _a.row,\n      row = _b === void 0 ? 0 : _b,\n      _c = _a.column,\n      column = _c === void 0 ? 0 : _c;\n    if (!editor) {\n      return;\n    }\n    editor.focus();\n    editor.gotoLine(row + 1, column, false);\n    setHighlightedAnnotation(undefined);\n  };\n  var onAnnotationClear = useCallback(function () {\n    setHighlightedAnnotation(undefined);\n  }, []);\n  /**\n   * Ignore focus lock if focused element is the pane tab button or within editor tree.\n   * This check is required:\n   * - When closing the pane with `ESC` key: The panel closes asynchronously and its focus lock\n   *   still exists when trying to focus the tab button in higher-order component.\n   * - When clicking or hittin `Enter` on an annotation: The panel remains open but focus lock\n   *   deactivates asynchronously.\n   */\n  var shouldHandleFocus = useCallback(function (activeElement) {\n    return activeElement !== errorsTabRef.current && activeElement !== warningsTabRef.current && !(editor === null || editor === void 0 ? void 0 : editor.container.contains(activeElement));\n  }, [editor]);\n  var _o = useState(false),\n    isPreferencesModalVisible = _o[0],\n    setPreferencesModalVisible = _o[1];\n  var onPreferencesOpen = function () {\n    return setPreferencesModalVisible(true);\n  };\n  var onPreferencesConfirm = function (p) {\n    fireNonCancelableEvent(props.onPreferencesChange, p);\n    setPreferencesModalVisible(false);\n  };\n  var onPreferencesDismiss = function () {\n    return setPreferencesModalVisible(false);\n  };\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(styles['code-editor'], baseProps.className, (_a = {}, _a[styles['code-editor-refresh']] = isRefresh, _a)),\n    ref: mergedRef\n  }), props.loading && React.createElement(LoadingScreen, null, i18nStrings.loadingState), !ace && !props.loading && React.createElement(ErrorScreen, {\n    recoveryText: i18nStrings.errorStateRecovery,\n    onRecoveryClick: props.onRecoveryClick\n  }, i18nStrings.errorState), ace && !props.loading && React.createElement(React.Fragment, null, React.createElement(ResizableBox, {\n    className: styles['resizable-box'],\n    width: Infinity,\n    height: Math.max(editorHeight, 20),\n    minConstraints: [Infinity, 20],\n    axis: \"y\",\n    handle: handler,\n    onResize: function (e, data) {\n      setEditorHeight(data.size.height);\n      onResize();\n      fireNonCancelableEvent(onEditorContentResize, {\n        height: data.size.height\n      });\n    }\n  }, React.createElement(\"div\", {\n    ref: editorRef,\n    className: clsx(styles.editor, styles.ace),\n    onKeyDown: onEditorKeydown,\n    tabIndex: 0,\n    role: \"group\",\n    \"aria-label\": i18nStrings.editorGroupAriaLabel\n  })), React.createElement(\"div\", {\n    role: \"group\",\n    \"aria-label\": i18nStrings.statusBarGroupAriaLabel\n  }, React.createElement(StatusBar, {\n    languageLabel: languageLabel,\n    cursorPosition: i18nStrings.cursorPosition(cursorPosition.row + 1, cursorPosition.column + 1),\n    errorCount: errorCount,\n    warningCount: warningCount,\n    paneStatus: paneStatus,\n    onErrorPaneToggle: onErrorPaneToggle,\n    onWarningPaneToggle: onWarningPaneToggle,\n    onTabFocus: onTabFocus,\n    onTabBlur: onTabBlur,\n    errorsTabRef: errorsTabRef,\n    warningsTabRef: warningsTabRef,\n    i18nStrings: i18nStrings,\n    isTabFocused: isTabFocused,\n    paneId: paneId,\n    onPreferencesOpen: onPreferencesOpen,\n    isRefresh: isRefresh\n  }), React.createElement(Pane, {\n    id: paneId,\n    visible: paneStatus !== 'hidden',\n    annotations: currentAnnotations,\n    highlighted: highlightedAnnotation,\n    onAnnotationClick: onAnnotationClick,\n    onAnnotationClear: onAnnotationClear,\n    onClose: onPaneClose,\n    onAllowlist: shouldHandleFocus,\n    cursorPositionLabel: i18nStrings.cursorPosition,\n    closeButtonAriaLabel: i18nStrings.paneCloseButtonAriaLabel\n  })), isPreferencesModalVisible && React.createElement(PreferencesModal, {\n    onConfirm: onPreferencesConfirm,\n    onDismiss: onPreferencesDismiss,\n    preferences: props.preferences,\n    defaultTheme: defaultTheme,\n    i18nStrings: {\n      header: i18nStrings.preferencesModalHeader,\n      cancel: i18nStrings.preferencesModalCancel,\n      confirm: i18nStrings.preferencesModalConfirm,\n      wrapLines: i18nStrings.preferencesModalWrapLines,\n      theme: i18nStrings.preferencesModalTheme,\n      lightThemes: i18nStrings.preferencesModalLightThemes,\n      darkThemes: i18nStrings.preferencesModalDarkThemes\n    }\n  })));\n}\napplyDisplayName(CodeEditor, 'CodeEditor');","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useRef","useState","clsx","ResizableBox","useMergeRefs","getBaseProps","KeyCode","useUniqueId","Pane","useChangeEffect","getDefaultConfig","getAceTheme","getLanguageLabel","DEFAULT_DARK_THEME","DEFAULT_LIGHT_THEME","getDefaultTheme","fireNonCancelableEvent","setupEditor","handler","PreferencesModal","LoadingScreen","ErrorScreen","styles","applyDisplayName","useContainerQuery","useBaseComponent","useCurrentMode","StatusBar","useFormFieldContext","useVisualRefresh","useControllable","CodeEditor","props","controlId","ariaLabelledby","ariaDescribedby","value","language","i18nStrings","editorContentHeight","onEditorContentResize","rest","componentName","changeHandler","controlledProp","_d","editorHeight","setEditorHeight","baseProps","editor","setEditor","mode","__internalRootRef","defaultTheme","editorRef","elem","ace","config","edit","theme","renderer","textarea","updateAttribute","attribute","setAttribute","removeAttribute","paneStatus","setPaneStatus","annotations","setAnnotations","highlightedAnnotation","setHighlightedAnnotation","languageLabel","setLanguageLabel","row","column","cursorPosition","setCursorPosition","isTabFocused","setTabFocused","errorsTabRef","warningsTabRef","width","codeEditorWidth","codeEditorMeasureRef","mergedRef","isRefresh","resize","paneId","destroy","getValue","pos","session","selection","toJSON","setValue","fromJSON","setMode","preferences","setTheme","setUseWrapMode","wrapLines","onChange","onDelayedChange","length","onValidate","errorCount","filter","type","warningCount","currentAnnotations","onEditorKeydown","e","target","container","keyCode","enter","stopPropagation","preventDefault","focus","onTabFocus","onTabBlur","onResize","onErrorPaneToggle","onWarningPaneToggle","onPaneClose","current","onAnnotationClick","_a","_b","_c","gotoLine","undefined","onAnnotationClear","shouldHandleFocus","activeElement","contains","isPreferencesModalVisible","setPreferencesModalVisible","onPreferencesOpen","onPreferencesConfirm","p","onPreferencesChange","onPreferencesDismiss","className","ref","loading","loadingState","recoveryText","errorStateRecovery","onRecoveryClick","errorState","Infinity","height","Math","max","minConstraints","axis","handle","data","size","onKeyDown","tabIndex","role","editorGroupAriaLabel","statusBarGroupAriaLabel","id","visible","highlighted","onClose","onAllowlist","cursorPositionLabel","closeButtonAriaLabel","paneCloseButtonAriaLabel","onConfirm","onDismiss","header","preferencesModalHeader","cancel","preferencesModalCancel","confirm","preferencesModalConfirm","preferencesModalWrapLines","preferencesModalTheme","lightThemes","preferencesModalLightThemes","darkThemes","preferencesModalDarkThemes"],"sources":["/Users/dcastro/node_modules/src/code-editor/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Ace } from 'ace-builds';\nimport clsx from 'clsx';\nimport { ResizableBox } from 'react-resizable';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { CodeEditorProps } from './interfaces';\nimport { Pane } from './pane';\nimport { useChangeEffect } from './listeners';\nimport {\n  getDefaultConfig,\n  getAceTheme,\n  PaneStatus,\n  getLanguageLabel,\n  DEFAULT_DARK_THEME,\n  DEFAULT_LIGHT_THEME,\n  getDefaultTheme,\n} from './util';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { setupEditor } from './setup-editor';\nimport handler from './resize-handler';\nimport PreferencesModal from './preferences-modal';\nimport LoadingScreen from './loading-screen';\nimport ErrorScreen from './error-screen';\n\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { useContainerQuery } from '../internal/hooks/container-queries/use-container-query';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useCurrentMode } from '../internal/hooks/use-visual-mode';\nimport { StatusBar } from './status-bar';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useControllable } from '../internal/hooks/use-controllable';\nexport { CodeEditorProps };\n\nexport default function CodeEditor(props: CodeEditorProps) {\n  const { __internalRootRef } = useBaseComponent('CodeEditor');\n  const { controlId, ariaLabelledby, ariaDescribedby } = useFormFieldContext(props);\n  const { ace, value, language, i18nStrings, editorContentHeight, onEditorContentResize, ...rest } = props;\n  const [editorHeight = 480, setEditorHeight] = useControllable(editorContentHeight, onEditorContentResize, 480, {\n    componentName: 'code-editor',\n    changeHandler: 'onEditorContentResize',\n    controlledProp: 'editorContentHeight',\n  });\n  const baseProps = getBaseProps(rest);\n\n  const [editor, setEditor] = useState<Ace.Editor>();\n  const mode = useCurrentMode(__internalRootRef);\n  const defaultTheme = mode === 'dark' ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n\n  const editorRef = useCallback(\n    (elem: HTMLDivElement) => {\n      if (!ace || !elem) {\n        return;\n      }\n\n      const config = getDefaultConfig();\n      setEditor(\n        ace.edit(elem, {\n          ...config,\n          theme: getAceTheme(getDefaultTheme(elem)),\n        })\n      );\n    },\n    [ace]\n  ); // loads as soon as ace lib is available\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n    const { textarea } = editor.renderer as unknown as { textarea: HTMLTextAreaElement };\n    if (!textarea) {\n      return;\n    }\n    const updateAttribute = (attribute: string, value: string | undefined) =>\n      value ? textarea.setAttribute(attribute, value) : textarea.removeAttribute(attribute);\n    updateAttribute('id', controlId);\n    updateAttribute('aria-labelledby', ariaLabelledby);\n    updateAttribute('aria-describedby', ariaDescribedby);\n  }, [ariaDescribedby, ariaLabelledby, controlId, editor]);\n\n  const [paneStatus, setPaneStatus] = useState<PaneStatus>('hidden');\n  const [annotations, setAnnotations] = useState<Ace.Annotation[]>([]);\n  const [highlightedAnnotation, setHighlightedAnnotation] = useState<Ace.Annotation>();\n  const [languageLabel, setLanguageLabel] = useState<string>('');\n  const [cursorPosition, setCursorPosition] = useState<Ace.Point>({ row: 0, column: 0 });\n  const [isTabFocused, setTabFocused] = useState<boolean>(false);\n\n  const errorsTabRef = useRef<HTMLButtonElement>(null);\n  const warningsTabRef = useRef<HTMLButtonElement>(null);\n\n  const [codeEditorWidth, codeEditorMeasureRef] = useContainerQuery(rect => rect.width);\n  const mergedRef = useMergeRefs(codeEditorMeasureRef, __internalRootRef);\n\n  const isRefresh = useVisualRefresh();\n\n  useEffect(() => {\n    editor?.resize();\n  }, [editor, editorContentHeight, codeEditorWidth]);\n\n  const paneId = useUniqueId('code-editor-pane');\n\n  useEffect(() => {\n    if (!ace || !editor) {\n      return;\n    }\n\n    setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus);\n\n    return () => {\n      editor?.destroy();\n    }; // TODO profile/monitor this\n  }, [ace, editor, __internalRootRef]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n    if (value === editor.getValue()) {\n      return;\n    }\n    // TODO maintain cursor position?\n    const pos = editor.session.selection.toJSON();\n    editor.setValue(value, -1);\n    editor.session.selection.fromJSON(pos);\n  }, [editor, value]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n    editor.session.setMode(`ace/mode/${language}`);\n\n    setLanguageLabel(getLanguageLabel(language));\n  }, [editor, language]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n\n    const theme: CodeEditorProps.Theme = props.preferences?.theme ?? defaultTheme;\n\n    editor.setTheme(getAceTheme(theme));\n\n    editor.session.setUseWrapMode(props.preferences?.wrapLines ?? true);\n  }, [editor, defaultTheme, props.preferences]);\n\n  // listeners\n  useChangeEffect(editor, props.onChange, props.onDelayedChange);\n  // TODO implement other listeners\n\n  // Hide error panel when there are no errors to show.\n  useEffect(() => {\n    if (annotations.length === 0) {\n      setPaneStatus('hidden');\n    }\n\n    if (props.onValidate) {\n      fireNonCancelableEvent(props.onValidate, { annotations });\n    }\n  }, [annotations, props.onValidate]);\n\n  const errorCount = annotations.filter(a => a.type === 'error').length;\n  const warningCount = annotations.filter(a => a.type === 'warning').length;\n  const currentAnnotations = useMemo(() => annotations.filter(a => a.type === paneStatus), [annotations, paneStatus]);\n\n  /*\n   * Callbacks\n   */\n\n  const onEditorKeydown = useCallback(\n    (e: React.KeyboardEvent) => {\n      if (editor && e.target === editor.container && e.keyCode === KeyCode.enter) {\n        e.stopPropagation();\n        e.preventDefault();\n        editor.focus();\n      }\n    },\n    [editor]\n  );\n\n  const onTabFocus = useCallback(() => setTabFocused(true), []);\n  const onTabBlur = useCallback(() => setTabFocused(false), []);\n\n  const onResize = useCallback(() => {\n    editor?.resize();\n  }, [editor]);\n\n  const onErrorPaneToggle = useCallback(() => {\n    setPaneStatus(paneStatus !== 'error' ? 'error' : 'hidden');\n  }, [paneStatus]);\n\n  const onWarningPaneToggle = useCallback(() => {\n    setPaneStatus(paneStatus !== 'warning' ? 'warning' : 'hidden');\n  }, [paneStatus]);\n\n  const onPaneClose = useCallback(() => {\n    if (paneStatus === 'error' && errorsTabRef.current) {\n      errorsTabRef.current.focus();\n    }\n    if (paneStatus === 'warning' && warningsTabRef.current) {\n      warningsTabRef.current.focus();\n    }\n    setPaneStatus('hidden');\n  }, [paneStatus]);\n\n  const onAnnotationClick = ({ row = 0, column = 0 }: Ace.Annotation) => {\n    if (!editor) {\n      return;\n    }\n    editor.focus();\n    editor.gotoLine(row + 1, column, false);\n    setHighlightedAnnotation(undefined);\n  };\n\n  const onAnnotationClear = useCallback(() => {\n    setHighlightedAnnotation(undefined);\n  }, []);\n\n  /**\n   * Ignore focus lock if focused element is the pane tab button or within editor tree.\n   * This check is required:\n   * - When closing the pane with `ESC` key: The panel closes asynchronously and its focus lock\n   *   still exists when trying to focus the tab button in higher-order component.\n   * - When clicking or hittin `Enter` on an annotation: The panel remains open but focus lock\n   *   deactivates asynchronously.\n   */\n  const shouldHandleFocus = useCallback(\n    (activeElement: HTMLElement): boolean => {\n      return (\n        activeElement !== errorsTabRef.current &&\n        activeElement !== warningsTabRef.current &&\n        !editor?.container.contains(activeElement)\n      );\n    },\n    [editor]\n  );\n\n  const [isPreferencesModalVisible, setPreferencesModalVisible] = useState(false);\n  const onPreferencesOpen = () => setPreferencesModalVisible(true);\n  const onPreferencesConfirm = (p: CodeEditorProps.Preferences) => {\n    fireNonCancelableEvent(props.onPreferencesChange, p);\n    setPreferencesModalVisible(false);\n  };\n  const onPreferencesDismiss = () => setPreferencesModalVisible(false);\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(styles['code-editor'], baseProps.className, { [styles['code-editor-refresh']]: isRefresh })}\n      ref={mergedRef}\n    >\n      {props.loading && <LoadingScreen>{i18nStrings.loadingState}</LoadingScreen>}\n\n      {!ace && !props.loading && (\n        <ErrorScreen recoveryText={i18nStrings.errorStateRecovery} onRecoveryClick={props.onRecoveryClick}>\n          {i18nStrings.errorState}\n        </ErrorScreen>\n      )}\n\n      {ace && !props.loading && (\n        <>\n          <ResizableBox\n            className={styles['resizable-box']}\n            width={Infinity}\n            height={Math.max(editorHeight, 20)}\n            minConstraints={[Infinity, 20]}\n            axis=\"y\"\n            handle={handler}\n            onResize={(e, data) => {\n              setEditorHeight(data.size.height);\n              onResize();\n              fireNonCancelableEvent(onEditorContentResize, {\n                height: data.size.height,\n              });\n            }}\n          >\n            <div\n              ref={editorRef}\n              className={clsx(styles.editor, styles.ace)}\n              onKeyDown={onEditorKeydown}\n              tabIndex={0}\n              role=\"group\"\n              aria-label={i18nStrings.editorGroupAriaLabel}\n            />\n          </ResizableBox>\n          <div role=\"group\" aria-label={i18nStrings.statusBarGroupAriaLabel}>\n            <StatusBar\n              languageLabel={languageLabel}\n              cursorPosition={i18nStrings.cursorPosition(cursorPosition.row + 1, cursorPosition.column + 1)}\n              errorCount={errorCount}\n              warningCount={warningCount}\n              paneStatus={paneStatus}\n              onErrorPaneToggle={onErrorPaneToggle}\n              onWarningPaneToggle={onWarningPaneToggle}\n              onTabFocus={onTabFocus}\n              onTabBlur={onTabBlur}\n              errorsTabRef={errorsTabRef}\n              warningsTabRef={warningsTabRef}\n              i18nStrings={i18nStrings}\n              isTabFocused={isTabFocused}\n              paneId={paneId}\n              onPreferencesOpen={onPreferencesOpen}\n              isRefresh={isRefresh}\n            />\n            <Pane\n              id={paneId}\n              visible={paneStatus !== 'hidden'}\n              annotations={currentAnnotations}\n              highlighted={highlightedAnnotation}\n              onAnnotationClick={onAnnotationClick}\n              onAnnotationClear={onAnnotationClear}\n              onClose={onPaneClose}\n              onAllowlist={shouldHandleFocus}\n              cursorPositionLabel={i18nStrings.cursorPosition}\n              closeButtonAriaLabel={i18nStrings.paneCloseButtonAriaLabel}\n            />\n          </div>\n          {isPreferencesModalVisible && (\n            <PreferencesModal\n              onConfirm={onPreferencesConfirm}\n              onDismiss={onPreferencesDismiss}\n              preferences={props.preferences}\n              defaultTheme={defaultTheme}\n              i18nStrings={{\n                header: i18nStrings.preferencesModalHeader,\n                cancel: i18nStrings.preferencesModalCancel,\n                confirm: i18nStrings.preferencesModalConfirm,\n                wrapLines: i18nStrings.preferencesModalWrapLines,\n                theme: i18nStrings.preferencesModalTheme,\n                lightThemes: i18nStrings.preferencesModalLightThemes,\n                darkThemes: i18nStrings.preferencesModalDarkThemes,\n              }}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\napplyDisplayName(CodeEditor, 'CodeEditor');\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}