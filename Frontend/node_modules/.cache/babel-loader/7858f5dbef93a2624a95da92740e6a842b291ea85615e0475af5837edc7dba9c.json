{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { createContext, useContext, useState } from 'react';\nvar defaultCtx = {\n  state: {\n    view: 'utilities',\n    data: null\n  },\n  setState: function () {}\n};\nexport var ViewContext = createContext(defaultCtx);\nexport var useNavigate = function () {\n  var setState = useContext(ViewContext).setState;\n  var navigate = function (view, data) {\n    setState({\n      view: view,\n      data: data\n    });\n  };\n  return navigate;\n};\nexport var Route = function (_a) {\n  var view = _a.view,\n    element = _a.element;\n  var state = useContext(ViewContext).state;\n  if (view === state.view) {\n    if (typeof element === 'function') {\n      return element(state.data);\n    }\n    return React.createElement(React.Fragment, null, element);\n  }\n  return null;\n};\nvar Router = function (_a) {\n  var children = _a.children;\n  var _b = useState({\n      view: 'utilities',\n      data: null\n    }),\n    state = _b[0],\n    setState = _b[1];\n  return React.createElement(ViewContext.Provider, {\n    value: {\n      state: state,\n      setState: setState\n    }\n  }, children);\n};\nexport default Router;","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAA4BC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAsB5F,IAAMC,UAAU,GAAiB;EAAEC,KAAK,EAAE;IAAEC,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAI,CAAE;EAAEC,QAAQ,EAAE,aAAO;AAAC,CAAE;AACjG,OAAO,IAAMC,WAAW,GAAGR,aAAa,CAAeG,UAAU,CAAC;AAElE,OAAO,IAAMM,WAAW,GAAG;EACjB,YAAQ,GAAKR,UAAU,CAACO,WAAW,CAAC,SAA5B;EAEhB,IAAME,QAAQ,GAAG,UAACL,IAAU,EAAEC,IAAS;IACrCC,QAAQ,CAAC;MAAEF,IAAI;MAAEC,IAAI;IAAA,CAAE,CAAC;EAC1B,CAAC;EAED,OAAOI,QAAQ;AACjB,CAAC;AAOD,OAAO,IAAMC,KAAK,GAAG,UAACC,EAA6B;MAA3BP,IAAI;IAAEQ,OAAO;EAC3B,SAAK,GAAKZ,UAAU,CAACO,WAAW,CAAC,MAA5B;EAEb,IAAIH,IAAI,KAAKD,KAAK,CAACC,IAAI,EAAE;IACvB,IAAI,OAAOQ,OAAO,KAAK,UAAU,EAAE;MACjC,OAAOA,OAAO,CAACT,KAAK,CAACE,IAAI,CAAC;;IAG5B,OAAOP,0CAAGc,OAAO,CAAI;;EAGvB,OAAO,IAAI;AACb,CAAC;AAMD,IAAMC,MAAM,GAAG,UAACF,EAAyB;MAAvBG,QAAQ;EAClB,SAAoBb,QAAQ,CAAa;MAAEG,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAI,CAAE,CAAC;IAA1EF,KAAK;IAAEG,QAAQ,QAA2D;EACjF,OAAOR,oBAACS,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK;MAAEG,QAAQ;IAAA;EAAE,GAAGQ,QAAQ,CAAwB;AAC5F,CAAC;AAED,eAAeD,MAAM","names":["React","createContext","useContext","useState","defaultCtx","state","view","data","setState","ViewContext","useNavigate","navigate","Route","_a","element","Router","children","Provider","value"],"sources":["/Users/dcastro/node_modules/src/top-navigation/parts/overflow-menu/router.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { createContext, Dispatch, SetStateAction, useContext, useState } from 'react';\n\ntype View = 'utilities' | 'dropdown-menu';\n\ninterface RouteData {\n  headerText?: string;\n  headerSecondaryText?: string;\n  definition?: any;\n\n  utilityIndex?: number;\n}\n\ninterface RouteState {\n  view: View;\n  data: RouteData | null;\n}\n\ninterface IViewContext {\n  state: RouteState;\n  setState: Dispatch<SetStateAction<RouteState>>;\n}\n\nconst defaultCtx: IViewContext = { state: { view: 'utilities', data: null }, setState: () => {} };\nexport const ViewContext = createContext<IViewContext>(defaultCtx);\n\nexport const useNavigate = () => {\n  const { setState } = useContext(ViewContext);\n\n  const navigate = (view: View, data: any) => {\n    setState({ view, data });\n  };\n\n  return navigate;\n};\n\ninterface RouteProps {\n  view: View;\n  element?: React.ReactNode | ((data: RouteData | null) => React.ReactElement);\n}\n\nexport const Route = ({ view, element }: RouteProps) => {\n  const { state } = useContext(ViewContext);\n\n  if (view === state.view) {\n    if (typeof element === 'function') {\n      return element(state.data);\n    }\n\n    return <>{element}</>;\n  }\n\n  return null;\n};\n\ninterface RouterProps {\n  children?: React.ReactNode;\n}\n\nconst Router = ({ children }: RouterProps) => {\n  const [state, setState] = useState<RouteState>({ view: 'utilities', data: null });\n  return <ViewContext.Provider value={{ state, setState }}>{children}</ViewContext.Provider>;\n};\n\nexport default Router;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}