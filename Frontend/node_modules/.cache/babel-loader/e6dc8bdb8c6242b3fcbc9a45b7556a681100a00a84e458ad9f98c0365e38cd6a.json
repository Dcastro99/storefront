{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useMemo } from 'react';\nimport ChartLegend from '../../internal/components/chart-legend';\nimport { useSelector } from '../model/async-store';\nexport default memo(AreaChartLegend);\nfunction AreaChartLegend(_a) {\n  var model = _a.model,\n    legendTitle = _a.legendTitle,\n    ariaLabel = _a.ariaLabel,\n    plotContainerRef = _a.plotContainerRef;\n  var legendItems = useMemo(function () {\n    return model.series.map(function (s) {\n      var _a = model.getInternalSeries(s),\n        title = _a.title,\n        color = _a.color,\n        markerType = _a.markerType;\n      return {\n        label: title,\n        color: color,\n        type: markerType,\n        datum: s\n      };\n    });\n  }, [model]);\n  var legendSeries = useSelector(model.interactions, function (state) {\n    return state.legendSeries;\n  });\n  return React.createElement(ChartLegend, {\n    series: legendItems,\n    highlightedSeries: legendSeries,\n    onHighlightChange: model.handlers.onLegendHighlight,\n    legendTitle: legendTitle,\n    ariaLabel: ariaLabel,\n    plotContainerRef: plotContainerRef\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,OAAO,QAAQ,OAAO;AAG5C,OAAOC,WAAW,MAAM,wCAAwC;AAChE,SAASC,WAAW,QAAQ,sBAAsB;AAGlD,eAAeH,IAAI,CAACI,eAAe,CAA2B;AAE9D,SAASA,eAAe,CAAqCC,EAU5D;MATCC,KAAK;IACLC,WAAW;IACXC,SAAS;IACTC,gBAAgB;EAOhB,IAAMC,WAAW,GAAGT,OAAO,CACzB;IACE,YAAK,CAACU,MAAM,CAACC,GAAG,CAAC,WAAC;MACV,SAA+BN,KAAK,CAACO,iBAAiB,CAACC,CAAC,CAAC;QAAvDC,KAAK;QAAEC,KAAK;QAAEC,UAAU,gBAA+B;MAC/D,OAAO;QAAEC,KAAK,EAAEH,KAAK;QAAEC,KAAK;QAAEG,IAAI,EAAEF,UAAU;QAAEG,KAAK,EAAEN;MAAC,CAAE;IAC5D,CAAC,CAAC;EAHF,CAGE,EACJ,CAACR,KAAK,CAAC,CACR;EAED,IAAMe,YAAY,GAAGlB,WAAW,CAACG,KAAK,CAACgB,YAAY,EAAE,eAAK;IAAI,YAAK,CAACD,YAAY;EAAlB,CAAkB,CAAC;EAEjF,OACEtB,oBAACG,WAAW;IACVS,MAAM,EAAED,WAAW;IACnBa,iBAAiB,EAAEF,YAAY;IAC/BG,iBAAiB,EAAElB,KAAK,CAACmB,QAAQ,CAACC,iBAAiB;IACnDnB,WAAW,EAAEA,WAAW;IACxBC,SAAS,EAAEA,SAAS;IACpBC,gBAAgB,EAAEA;EAAgB,EAClC;AAEN","names":["React","memo","useMemo","ChartLegend","useSelector","AreaChartLegend","_a","model","legendTitle","ariaLabel","plotContainerRef","legendItems","series","map","getInternalSeries","s","title","color","markerType","label","type","datum","legendSeries","interactions","highlightedSeries","onHighlightChange","handlers","onLegendHighlight"],"sources":["/Users/dcastro/node_modules/src/area-chart/elements/area-chart-legend.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useMemo } from 'react';\n\nimport { AreaChartProps } from '../interfaces';\nimport ChartLegend from '../../internal/components/chart-legend';\nimport { useSelector } from '../model/async-store';\nimport { ChartModel } from '../model';\n\nexport default memo(AreaChartLegend) as typeof AreaChartLegend;\n\nfunction AreaChartLegend<T extends AreaChartProps.DataTypes>({\n  model,\n  legendTitle,\n  ariaLabel,\n  plotContainerRef,\n}: {\n  model: ChartModel<T>;\n  plotContainerRef: React.RefObject<HTMLDivElement>;\n  legendTitle?: string;\n  ariaLabel?: string;\n}) {\n  const legendItems = useMemo(\n    () =>\n      model.series.map(s => {\n        const { title, color, markerType } = model.getInternalSeries(s);\n        return { label: title, color, type: markerType, datum: s };\n      }),\n    [model]\n  );\n\n  const legendSeries = useSelector(model.interactions, state => state.legendSeries);\n\n  return (\n    <ChartLegend\n      series={legendItems}\n      highlightedSeries={legendSeries}\n      onHighlightChange={model.handlers.onLegendHighlight}\n      legendTitle={legendTitle}\n      ariaLabel={ariaLabel}\n      plotContainerRef={plotContainerRef}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}