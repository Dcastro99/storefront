{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { warnOnce } from '../internal/logging';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport WizardForm from './wizard-form';\nimport WizardNavigation from './wizard-navigation';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nvar scrollToTop = function (ref) {\n  var _a;\n  var overflowRegex = /(auto|scroll)/;\n  var parent = (_a = ref === null || ref === void 0 ? void 0 : ref.current) === null || _a === void 0 ? void 0 : _a.parentElement;\n  while (parent && !overflowRegex.test(getComputedStyle(parent).overflow)) {\n    parent = parent.parentElement;\n  }\n  if (parent) {\n    parent.scrollTop = 0;\n  } else {\n    window.scrollTo(window.pageXOffset, 0);\n  }\n};\nexport default function Wizard(_a) {\n  var steps = _a.steps,\n    controlledActiveStepIndex = _a.activeStepIndex,\n    i18nStrings = _a.i18nStrings,\n    _b = _a.isLoadingNextStep,\n    isLoadingNextStep = _b === void 0 ? false : _b,\n    _c = _a.allowSkipTo,\n    allowSkipTo = _c === void 0 ? false : _c,\n    secondaryActions = _a.secondaryActions,\n    onCancel = _a.onCancel,\n    onSubmit = _a.onSubmit,\n    onNavigate = _a.onNavigate,\n    rest = __rest(_a, [\"steps\", \"activeStepIndex\", \"i18nStrings\", \"isLoadingNextStep\", \"allowSkipTo\", \"secondaryActions\", \"onCancel\", \"onSubmit\", \"onNavigate\"]);\n  var __internalRootRef = useBaseComponent('Wizard').__internalRootRef;\n  var baseProps = getBaseProps(rest);\n  var _d = useContainerBreakpoints(['xs']),\n    breakpoint = _d[0],\n    breakpointsRef = _d[1];\n  var ref = useMergeRefs(breakpointsRef, __internalRootRef);\n  var smallContainer = breakpoint === 'default';\n  var _e = useControllable(controlledActiveStepIndex, onNavigate, 0, {\n      componentName: 'Wizard',\n      controlledProp: 'activeStepIndex',\n      changeHandler: 'onNavigate'\n    }),\n    activeStepIndex = _e[0],\n    setActiveStepIndex = _e[1];\n  var actualActiveStepIndex = activeStepIndex ? Math.min(activeStepIndex, steps.length - 1) : 0;\n  var farthestStepIndex = useRef(actualActiveStepIndex);\n  farthestStepIndex.current = Math.max(farthestStepIndex.current, actualActiveStepIndex);\n  var internalRef = useRef(null);\n  useEffect(function () {\n    scrollToTop(internalRef);\n  }, [actualActiveStepIndex]);\n  var isVisualRefresh = useVisualRefresh();\n  var isLastStep = actualActiveStepIndex >= steps.length - 1;\n  var navigationEvent = function (requestedStepIndex, reason) {\n    setActiveStepIndex(requestedStepIndex);\n    fireNonCancelableEvent(onNavigate, {\n      requestedStepIndex: requestedStepIndex,\n      reason: reason\n    });\n  };\n  var onStepClick = function (stepIndex) {\n    return navigationEvent(stepIndex, 'step');\n  };\n  var onSkipToClick = function (stepIndex) {\n    return navigationEvent(stepIndex, 'skip');\n  };\n  var onCancelClick = function () {\n    return fireNonCancelableEvent(onCancel);\n  };\n  var onPreviousClick = function () {\n    return navigationEvent(actualActiveStepIndex - 1, 'previous');\n  };\n  var onPrimaryClick = isLastStep ? function () {\n    return fireNonCancelableEvent(onSubmit);\n  } : function () {\n    return navigationEvent(actualActiveStepIndex + 1, 'next');\n  };\n  if (activeStepIndex && activeStepIndex >= steps.length) {\n    warnOnce('Wizard', \"You have set `activeStepIndex` to \".concat(activeStepIndex, \" but you have provided only \").concat(steps.length, \" steps. Its value is ignored and the component uses \").concat(steps.length - 1, \" instead.\"));\n  }\n  if (allowSkipTo && !i18nStrings.skipToButtonLabel) {\n    warnOnce('Wizard', \"You have set `allowSkipTo` but you have not provided `i18nStrings.skipToButtonLabel`. The skip-to button will not be rendered.\");\n  }\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    ref: ref\n  }), React.createElement(\"div\", {\n    className: clsx(styles.wizard, isVisualRefresh && styles.refresh, smallContainer && styles['small-container']),\n    ref: internalRef\n  }, React.createElement(WizardNavigation, {\n    activeStepIndex: actualActiveStepIndex,\n    farthestStepIndex: farthestStepIndex.current,\n    allowSkipTo: allowSkipTo,\n    hidden: smallContainer,\n    i18nStrings: i18nStrings,\n    isVisualRefresh: isVisualRefresh,\n    isLoadingNextStep: isLoadingNextStep,\n    onStepClick: onStepClick,\n    onSkipToClick: onSkipToClick,\n    steps: steps\n  }), React.createElement(\"div\", {\n    className: clsx(styles.form, isVisualRefresh && styles.refresh, smallContainer && styles['small-container'])\n  }, isVisualRefresh && React.createElement(\"div\", {\n    className: clsx(styles.background, 'awsui-context-content-header')\n  }), React.createElement(WizardForm, {\n    steps: steps,\n    isVisualRefresh: isVisualRefresh,\n    showCollapsedSteps: smallContainer,\n    i18nStrings: i18nStrings,\n    activeStepIndex: actualActiveStepIndex,\n    isPrimaryLoading: isLoadingNextStep,\n    allowSkipTo: allowSkipTo,\n    secondaryActions: secondaryActions,\n    onCancelClick: onCancelClick,\n    onPreviousClick: onPreviousClick,\n    onSkipToClick: onSkipToClick,\n    onPrimaryClick: onPrimaryClick\n  }))));\n}\napplyDisplayName(Wizard, 'Wizard');","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","clsx","getBaseProps","fireNonCancelableEvent","warnOnce","useContainerBreakpoints","useControllable","WizardForm","WizardNavigation","styles","applyDisplayName","useBaseComponent","useMergeRefs","useVisualRefresh","scrollToTop","ref","overflowRegex","parent","current","parentElement","test","getComputedStyle","overflow","scrollTop","window","scrollTo","pageXOffset","Wizard","_a","controlledActiveStepIndex","i18nStrings","_b","isLoadingNextStep","_c","allowSkipTo","secondaryActions","onCancel","onSubmit","onNavigate","rest","baseProps","breakpoint","breakpointsRef","__internalRootRef","smallContainer","componentName","controlledProp","changeHandler","activeStepIndex","setActiveStepIndex","actualActiveStepIndex","Math","min","steps","length","farthestStepIndex","max","internalRef","isVisualRefresh","isLastStep","navigationEvent","requestedStepIndex","reason","onStepClick","stepIndex","onSkipToClick","onCancelClick","onPreviousClick","onPrimaryClick","skipToButtonLabel","className","root","wizard","refresh","hidden","form","background","showCollapsedSteps","isPrimaryLoading"],"sources":["/Users/dcastro/node_modules/src/wizard/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { warnOnce } from '../internal/logging';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport WizardForm from './wizard-form';\nimport WizardNavigation from './wizard-navigation';\nimport { WizardProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\nexport { WizardProps };\n\nconst scrollToTop = (ref: React.RefObject<HTMLDivElement>) => {\n  const overflowRegex = /(auto|scroll)/;\n  let parent = ref?.current?.parentElement;\n  while (parent && !overflowRegex.test(getComputedStyle(parent).overflow)) {\n    parent = parent.parentElement;\n  }\n  if (parent) {\n    parent.scrollTop = 0;\n  } else {\n    window.scrollTo(window.pageXOffset, 0);\n  }\n};\n\nexport default function Wizard({\n  steps,\n  activeStepIndex: controlledActiveStepIndex,\n  i18nStrings,\n  isLoadingNextStep = false,\n  allowSkipTo = false,\n  secondaryActions,\n  onCancel,\n  onSubmit,\n  onNavigate,\n  ...rest\n}: WizardProps) {\n  const { __internalRootRef } = useBaseComponent('Wizard');\n  const baseProps = getBaseProps(rest);\n\n  const [breakpoint, breakpointsRef] = useContainerBreakpoints(['xs']);\n  const ref = useMergeRefs(breakpointsRef, __internalRootRef);\n\n  const smallContainer = breakpoint === 'default';\n\n  const [activeStepIndex, setActiveStepIndex] = useControllable(controlledActiveStepIndex, onNavigate, 0, {\n    componentName: 'Wizard',\n    controlledProp: 'activeStepIndex',\n    changeHandler: 'onNavigate',\n  });\n  const actualActiveStepIndex = activeStepIndex ? Math.min(activeStepIndex, steps.length - 1) : 0;\n\n  const farthestStepIndex = useRef<number>(actualActiveStepIndex);\n  farthestStepIndex.current = Math.max(farthestStepIndex.current, actualActiveStepIndex);\n\n  const internalRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    scrollToTop(internalRef);\n  }, [actualActiveStepIndex]);\n\n  const isVisualRefresh = useVisualRefresh();\n  const isLastStep = actualActiveStepIndex >= steps.length - 1;\n\n  const navigationEvent = (requestedStepIndex: number, reason: WizardProps.NavigationReason) => {\n    setActiveStepIndex(requestedStepIndex);\n    fireNonCancelableEvent(onNavigate, { requestedStepIndex, reason });\n  };\n  const onStepClick = (stepIndex: number) => navigationEvent(stepIndex, 'step');\n  const onSkipToClick = (stepIndex: number) => navigationEvent(stepIndex, 'skip');\n  const onCancelClick = () => fireNonCancelableEvent(onCancel);\n  const onPreviousClick = () => navigationEvent(actualActiveStepIndex - 1, 'previous');\n  const onPrimaryClick = isLastStep\n    ? () => fireNonCancelableEvent(onSubmit)\n    : () => navigationEvent(actualActiveStepIndex + 1, 'next');\n\n  if (activeStepIndex && activeStepIndex >= steps.length) {\n    warnOnce(\n      'Wizard',\n      `You have set \\`activeStepIndex\\` to ${activeStepIndex} but you have provided only ${\n        steps.length\n      } steps. Its value is ignored and the component uses ${steps.length - 1} instead.`\n    );\n  }\n\n  if (allowSkipTo && !i18nStrings.skipToButtonLabel) {\n    warnOnce(\n      'Wizard',\n      `You have set \\`allowSkipTo\\` but you have not provided \\`i18nStrings.skipToButtonLabel\\`. The skip-to button will not be rendered.`\n    );\n  }\n\n  return (\n    <div {...baseProps} className={clsx(styles.root, baseProps.className)} ref={ref}>\n      <div\n        className={clsx(styles.wizard, isVisualRefresh && styles.refresh, smallContainer && styles['small-container'])}\n        ref={internalRef}\n      >\n        <WizardNavigation\n          activeStepIndex={actualActiveStepIndex}\n          farthestStepIndex={farthestStepIndex.current}\n          allowSkipTo={allowSkipTo}\n          hidden={smallContainer}\n          i18nStrings={i18nStrings}\n          isVisualRefresh={isVisualRefresh}\n          isLoadingNextStep={isLoadingNextStep}\n          onStepClick={onStepClick}\n          onSkipToClick={onSkipToClick}\n          steps={steps}\n        />\n        <div\n          className={clsx(styles.form, isVisualRefresh && styles.refresh, smallContainer && styles['small-container'])}\n        >\n          {isVisualRefresh && <div className={clsx(styles.background, 'awsui-context-content-header')} />}\n\n          <WizardForm\n            steps={steps}\n            isVisualRefresh={isVisualRefresh}\n            showCollapsedSteps={smallContainer}\n            i18nStrings={i18nStrings}\n            activeStepIndex={actualActiveStepIndex}\n            isPrimaryLoading={isLoadingNextStep}\n            allowSkipTo={allowSkipTo}\n            secondaryActions={secondaryActions}\n            onCancelClick={onCancelClick}\n            onPreviousClick={onPreviousClick}\n            onSkipToClick={onSkipToClick}\n            onPrimaryClick={onPrimaryClick}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\napplyDisplayName(Wizard, 'Wizard');\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}