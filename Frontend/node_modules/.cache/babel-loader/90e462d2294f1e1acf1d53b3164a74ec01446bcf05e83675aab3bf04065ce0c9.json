{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useRef } from 'react';\nimport InternalSelect from '../select/internal';\nimport InternalAutosuggest from '../autosuggest/internal';\nimport InternalPopover from '../popover/internal';\nimport styles from './styles.css.js';\nimport { useLoadItems } from './use-load-items';\nimport { createPropertiesCompatibilityMap, getAllowedOperators, getPropertyOptions, getPropertyByKey, operatorToDescription, getPropertySuggestions, getExtendedOperator } from './controller';\nimport InternalButton from '../button/internal';\nimport InternalFormField from '../form-field/internal';\nvar freeTextOperators = [':', '!:'];\nfunction PropertyInput(_a) {\n  var propertyKey = _a.propertyKey,\n    onChangePropertyKey = _a.onChangePropertyKey,\n    asyncProps = _a.asyncProps,\n    filteringProperties = _a.filteringProperties,\n    onLoadItems = _a.onLoadItems,\n    customGroupsText = _a.customGroupsText,\n    i18nStrings = _a.i18nStrings,\n    disableFreeTextFiltering = _a.disableFreeTextFiltering;\n  var property = propertyKey !== undefined ? getPropertyByKey(filteringProperties, propertyKey) : undefined;\n  var propertySelectHandlers = useLoadItems(onLoadItems);\n  var asyncPropertySelectProps = asyncProps ? __assign(__assign({}, asyncProps), propertySelectHandlers) : {};\n  var propertyOptions = getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, function (_a) {\n    var propertyLabel = _a.propertyLabel,\n      key = _a.key;\n    return {\n      value: key,\n      label: propertyLabel,\n      dontCloseOnSelect: true\n    };\n  });\n  // Disallow selecting properties that have different representation.\n  var checkPropertiesCompatible = createPropertiesCompatibilityMap(filteringProperties);\n  propertyOptions.forEach(function (optionGroup) {\n    if ('options' in optionGroup) {\n      optionGroup.options.forEach(function (option) {\n        if (propertyKey && option.value) {\n          option.disabled = !checkPropertiesCompatible(option.value, propertyKey);\n        }\n      });\n    }\n  });\n  var allPropertiesOption = {\n    label: i18nStrings.allPropertiesLabel,\n    value: undefined\n  };\n  if (!disableFreeTextFiltering) {\n    propertyOptions.unshift(allPropertiesOption);\n  }\n  return React.createElement(InternalSelect, __assign({\n    options: propertyOptions,\n    selectedOption: property ? {\n      value: propertyKey !== null && propertyKey !== void 0 ? propertyKey : undefined,\n      label: property.propertyLabel\n    } : allPropertiesOption,\n    onChange: function (e) {\n      return onChangePropertyKey(e.detail.selectedOption.value);\n    }\n  }, asyncPropertySelectProps));\n}\nfunction OperatorInput(_a) {\n  var propertyKey = _a.propertyKey,\n    operator = _a.operator,\n    onChangeOperator = _a.onChangeOperator,\n    filteringProperties = _a.filteringProperties,\n    i18nStrings = _a.i18nStrings;\n  var property = propertyKey !== undefined ? getPropertyByKey(filteringProperties, propertyKey) : undefined;\n  var freeTextOperators = [':', '!:'];\n  var operatorOptions = (property ? getAllowedOperators(property) : freeTextOperators).map(function (operator) {\n    return {\n      value: operator,\n      label: operator,\n      description: operatorToDescription(operator, i18nStrings)\n    };\n  });\n  return React.createElement(InternalSelect, {\n    options: operatorOptions,\n    triggerVariant: \"option\",\n    selectedOption: operator ? {\n      value: operator,\n      label: operator,\n      description: operatorToDescription(operator, i18nStrings)\n    } : null,\n    onChange: function (e) {\n      return onChangeOperator(e.detail.selectedOption.value);\n    }\n  });\n}\nfunction ValueInput(_a) {\n  var _b;\n  var propertyKey = _a.propertyKey,\n    operator = _a.operator,\n    value = _a.value,\n    onChangeValue = _a.onChangeValue,\n    asyncProps = _a.asyncProps,\n    filteringProperties = _a.filteringProperties,\n    filteringOptions = _a.filteringOptions,\n    onLoadItems = _a.onLoadItems,\n    i18nStrings = _a.i18nStrings;\n  var property = propertyKey !== undefined ? getPropertyByKey(filteringProperties, propertyKey) : undefined;\n  var valueOptions = property ? getPropertyOptions(property, filteringOptions).map(function (_a) {\n    var value = _a.value;\n    return {\n      value: value\n    };\n  }) : [];\n  var valueAutosuggestHandlers = useLoadItems(onLoadItems, '', property);\n  var asyncValueAutosuggesProps = propertyKey ? __assign(__assign({}, valueAutosuggestHandlers), asyncProps) : {\n    empty: asyncProps.empty\n  };\n  var OperatorForm = propertyKey && operator && ((_b = getExtendedOperator(filteringProperties, propertyKey, operator)) === null || _b === void 0 ? void 0 : _b.form);\n  return OperatorForm ? React.createElement(OperatorForm, {\n    value: value,\n    onChange: onChangeValue,\n    operator: operator\n  }) : React.createElement(InternalAutosuggest, __assign({\n    enteredTextLabel: i18nStrings.enteredTextLabel,\n    value: value !== null && value !== void 0 ? value : '',\n    onChange: function (e) {\n      return onChangeValue(e.detail.value);\n    },\n    disabled: !operator,\n    options: valueOptions\n  }, asyncValueAutosuggesProps, {\n    virtualScroll: true\n  }));\n}\nexport function TokenEditor(_a) {\n  var asyncProperties = _a.asyncProperties,\n    asyncProps = _a.asyncProps,\n    customGroupsText = _a.customGroupsText,\n    disableFreeTextFiltering = _a.disableFreeTextFiltering,\n    expandToViewport = _a.expandToViewport,\n    filteringOptions = _a.filteringOptions,\n    filteringProperties = _a.filteringProperties,\n    i18nStrings = _a.i18nStrings,\n    onLoadItems = _a.onLoadItems,\n    setToken = _a.setToken,\n    token = _a.token,\n    triggerComponent = _a.triggerComponent;\n  var _b = useState(token),\n    temporaryToken = _b[0],\n    setTemporaryToken = _b[1];\n  var popoverRef = useRef(null);\n  var closePopover = function () {\n    popoverRef.current && popoverRef.current.dismissPopover();\n  };\n  var propertyKey = temporaryToken.propertyKey;\n  var onChangePropertyKey = function (newPropertyKey) {\n    var filteringProperty = filteringProperties.reduce(function (acc, property) {\n      return property.key === newPropertyKey ? property : acc;\n    }, undefined);\n    var allowedOperators = filteringProperty ? getAllowedOperators(filteringProperty) : freeTextOperators;\n    var operator = temporaryToken.operator && allowedOperators.indexOf(temporaryToken.operator) !== -1 ? temporaryToken.operator : allowedOperators[0];\n    setTemporaryToken(__assign(__assign({}, temporaryToken), {\n      propertyKey: newPropertyKey,\n      operator: operator\n    }));\n  };\n  var operator = temporaryToken.operator;\n  var onChangeOperator = function (newOperator) {\n    setTemporaryToken(__assign(__assign({}, temporaryToken), {\n      operator: newOperator\n    }));\n  };\n  var value = temporaryToken.value;\n  var onChangeValue = function (newValue) {\n    setTemporaryToken(__assign(__assign({}, temporaryToken), {\n      value: newValue\n    }));\n  };\n  return React.createElement(InternalPopover, {\n    ref: popoverRef,\n    className: styles['token-label'],\n    triggerType: \"text\",\n    header: i18nStrings.editTokenHeader,\n    size: \"large\",\n    position: \"right\",\n    dismissAriaLabel: i18nStrings.dismissAriaLabel,\n    __onOpen: function () {\n      return setTemporaryToken(token);\n    },\n    renderWithPortal: expandToViewport,\n    content: React.createElement(\"div\", {\n      className: styles['token-editor']\n    }, React.createElement(\"div\", {\n      className: styles['token-editor-form']\n    }, React.createElement(InternalFormField, {\n      label: i18nStrings.propertyText,\n      className: styles['token-editor-field-property']\n    }, React.createElement(PropertyInput, {\n      propertyKey: propertyKey,\n      onChangePropertyKey: onChangePropertyKey,\n      asyncProps: asyncProperties ? asyncProps : null,\n      filteringProperties: filteringProperties,\n      onLoadItems: onLoadItems,\n      customGroupsText: customGroupsText,\n      i18nStrings: i18nStrings,\n      disableFreeTextFiltering: disableFreeTextFiltering\n    })), React.createElement(InternalFormField, {\n      label: i18nStrings.operatorText,\n      className: styles['token-editor-field-operator']\n    }, React.createElement(OperatorInput, {\n      propertyKey: propertyKey,\n      operator: operator,\n      onChangeOperator: onChangeOperator,\n      filteringProperties: filteringProperties,\n      i18nStrings: i18nStrings\n    })), React.createElement(InternalFormField, {\n      label: i18nStrings.valueText,\n      className: styles['token-editor-field-value']\n    }, React.createElement(ValueInput, {\n      propertyKey: propertyKey,\n      operator: operator,\n      value: value,\n      onChangeValue: onChangeValue,\n      asyncProps: asyncProps,\n      filteringProperties: filteringProperties,\n      filteringOptions: filteringOptions,\n      onLoadItems: onLoadItems,\n      i18nStrings: i18nStrings\n    }))), React.createElement(\"div\", {\n      className: styles['token-editor-actions']\n    }, React.createElement(InternalButton, {\n      variant: \"link\",\n      className: styles['token-editor-cancel'],\n      onClick: closePopover\n    }, i18nStrings.cancelActionText), React.createElement(InternalButton, {\n      className: styles['token-editor-submit'],\n      onClick: function () {\n        setToken(temporaryToken);\n        closePopover();\n      }\n    }, i18nStrings.applyActionText)))\n  }, triggerComponent);\n}","map":{"version":3,"mappings":"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","names":["React","useState","useRef","InternalSelect","InternalAutosuggest","InternalPopover","styles","useLoadItems","createPropertiesCompatibilityMap","getAllowedOperators","getPropertyOptions","getPropertyByKey","operatorToDescription","getPropertySuggestions","getExtendedOperator","InternalButton","InternalFormField","freeTextOperators","PropertyInput","_a","propertyKey","onChangePropertyKey","asyncProps","filteringProperties","onLoadItems","customGroupsText","i18nStrings","disableFreeTextFiltering","property","undefined","propertySelectHandlers","asyncPropertySelectProps","__assign","propertyOptions","propertyLabel","key","value","label","dontCloseOnSelect","checkPropertiesCompatible","forEach","optionGroup","options","option","disabled","allPropertiesOption","allPropertiesLabel","unshift","selectedOption","onChange","e","detail","OperatorInput","operator","onChangeOperator","operatorOptions","map","description","triggerVariant","ValueInput","onChangeValue","filteringOptions","valueOptions","valueAutosuggestHandlers","asyncValueAutosuggesProps","empty","OperatorForm","form","enteredTextLabel","virtualScroll","TokenEditor","asyncProperties","expandToViewport","setToken","token","triggerComponent","temporaryToken","setTemporaryToken","popoverRef","closePopover","current","dismissPopover","newPropertyKey","filteringProperty","reduce","acc","allowedOperators","indexOf","newOperator","newValue","ref","className","triggerType","header","editTokenHeader","size","position","dismissAriaLabel","__onOpen","renderWithPortal","content","propertyText","operatorText","valueText","variant","onClick","cancelActionText","applyActionText"],"sources":["/Users/dcastro/node_modules/src/property-filter/token-editor.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useRef } from 'react';\n\nimport { SelectProps } from '../select/interfaces';\nimport InternalSelect from '../select/internal';\nimport InternalAutosuggest from '../autosuggest/internal';\nimport InternalPopover, { InternalPopoverRef } from '../popover/internal';\nimport {\n  ComparisonOperator,\n  FilteringOption,\n  FilteringProperty,\n  GroupText,\n  I18nStrings,\n  LoadItemsDetail,\n  Token,\n} from './interfaces';\nimport styles from './styles.css.js';\nimport { useLoadItems } from './use-load-items';\nimport {\n  createPropertiesCompatibilityMap,\n  getAllowedOperators,\n  getPropertyOptions,\n  getPropertyByKey,\n  operatorToDescription,\n  getPropertySuggestions,\n  getExtendedOperator,\n} from './controller';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\nimport InternalButton from '../button/internal';\nimport InternalFormField from '../form-field/internal';\n\nconst freeTextOperators: ComparisonOperator[] = [':', '!:'];\n\ninterface PropertyInputProps {\n  asyncProps: null | DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disableFreeTextFiltering?: boolean;\n  filteringProperties: readonly FilteringProperty[];\n  i18nStrings: I18nStrings;\n  onChangePropertyKey: (propertyKey: undefined | string) => void;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  propertyKey: undefined | string;\n}\n\nfunction PropertyInput({\n  propertyKey,\n  onChangePropertyKey,\n  asyncProps,\n  filteringProperties,\n  onLoadItems,\n  customGroupsText,\n  i18nStrings,\n  disableFreeTextFiltering,\n}: PropertyInputProps) {\n  const property = propertyKey !== undefined ? getPropertyByKey(filteringProperties, propertyKey) : undefined;\n  const propertySelectHandlers = useLoadItems(onLoadItems);\n  const asyncPropertySelectProps = asyncProps ? { ...asyncProps, ...propertySelectHandlers } : {};\n  const propertyOptions: (SelectProps.Option | SelectProps.OptionGroup)[] = getPropertySuggestions(\n    filteringProperties,\n    customGroupsText,\n    i18nStrings,\n    ({ propertyLabel, key }) => ({\n      value: key,\n      label: propertyLabel,\n      dontCloseOnSelect: true,\n    })\n  );\n\n  // Disallow selecting properties that have different representation.\n  const checkPropertiesCompatible = createPropertiesCompatibilityMap(filteringProperties);\n  propertyOptions.forEach(optionGroup => {\n    if ('options' in optionGroup) {\n      optionGroup.options.forEach(option => {\n        if (propertyKey && option.value) {\n          option.disabled = !checkPropertiesCompatible(option.value, propertyKey);\n        }\n      });\n    }\n  });\n\n  const allPropertiesOption = {\n    label: i18nStrings.allPropertiesLabel,\n    value: undefined,\n  };\n  if (!disableFreeTextFiltering) {\n    propertyOptions.unshift(allPropertiesOption);\n  }\n  return (\n    <InternalSelect\n      options={propertyOptions}\n      selectedOption={\n        property\n          ? {\n              value: propertyKey ?? undefined,\n              label: property.propertyLabel,\n            }\n          : allPropertiesOption\n      }\n      onChange={e => onChangePropertyKey(e.detail.selectedOption.value)}\n      {...asyncPropertySelectProps}\n    />\n  );\n}\n\ninterface OperatorInputProps {\n  filteringProperties: readonly FilteringProperty[];\n  i18nStrings: I18nStrings;\n  onChangeOperator: (operator: ComparisonOperator) => void;\n  operator: undefined | ComparisonOperator;\n  propertyKey: undefined | string;\n}\n\nfunction OperatorInput({\n  propertyKey,\n  operator,\n  onChangeOperator,\n  filteringProperties,\n  i18nStrings,\n}: OperatorInputProps) {\n  const property = propertyKey !== undefined ? getPropertyByKey(filteringProperties, propertyKey) : undefined;\n  const freeTextOperators: ComparisonOperator[] = [':', '!:'];\n  const operatorOptions = (property ? getAllowedOperators(property) : freeTextOperators).map(operator => ({\n    value: operator,\n    label: operator,\n    description: operatorToDescription(operator, i18nStrings),\n  }));\n  return (\n    <InternalSelect\n      options={operatorOptions}\n      triggerVariant=\"option\"\n      selectedOption={\n        operator\n          ? {\n              value: operator,\n              label: operator,\n              description: operatorToDescription(operator, i18nStrings),\n            }\n          : null\n      }\n      onChange={e => onChangeOperator(e.detail.selectedOption.value as ComparisonOperator)}\n    />\n  );\n}\n\ninterface ValueInputProps {\n  asyncProps: DropdownStatusProps;\n  filteringOptions: readonly FilteringOption[];\n  filteringProperties: readonly FilteringProperty[];\n  i18nStrings: I18nStrings;\n  onChangeValue: (value: string) => void;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  operator: undefined | ComparisonOperator;\n  propertyKey: undefined | string;\n  value: undefined | string;\n}\n\nfunction ValueInput({\n  propertyKey,\n  operator,\n  value,\n  onChangeValue,\n  asyncProps,\n  filteringProperties,\n  filteringOptions,\n  onLoadItems,\n  i18nStrings,\n}: ValueInputProps) {\n  const property = propertyKey !== undefined ? getPropertyByKey(filteringProperties, propertyKey) : undefined;\n  const valueOptions = property ? getPropertyOptions(property, filteringOptions).map(({ value }) => ({ value })) : [];\n  const valueAutosuggestHandlers = useLoadItems(onLoadItems, '', property);\n  const asyncValueAutosuggesProps = propertyKey\n    ? { ...valueAutosuggestHandlers, ...asyncProps }\n    : { empty: asyncProps.empty };\n\n  const OperatorForm = propertyKey && operator && getExtendedOperator(filteringProperties, propertyKey, operator)?.form;\n\n  return OperatorForm ? (\n    <OperatorForm value={value} onChange={onChangeValue} operator={operator} />\n  ) : (\n    <InternalAutosuggest\n      enteredTextLabel={i18nStrings.enteredTextLabel}\n      value={value ?? ''}\n      onChange={e => onChangeValue(e.detail.value)}\n      disabled={!operator}\n      options={valueOptions}\n      {...asyncValueAutosuggesProps}\n      virtualScroll={true}\n    />\n  );\n}\n\ninterface TokenEditorProps {\n  asyncProperties?: boolean;\n  asyncProps: DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disabled?: boolean;\n  disableFreeTextFiltering?: boolean;\n  expandToViewport?: boolean;\n  filteringOptions: readonly FilteringOption[];\n  filteringProperties: readonly FilteringProperty[];\n  i18nStrings: I18nStrings;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  setToken: (newToken: Token) => void;\n  token: Token;\n  triggerComponent?: React.ReactNode;\n}\n\nexport function TokenEditor({\n  asyncProperties,\n  asyncProps,\n  customGroupsText,\n  disableFreeTextFiltering,\n  expandToViewport,\n  filteringOptions,\n  filteringProperties,\n  i18nStrings,\n  onLoadItems,\n  setToken,\n  token,\n  triggerComponent,\n}: TokenEditorProps) {\n  const [temporaryToken, setTemporaryToken] = useState<Token>(token);\n  const popoverRef = useRef<InternalPopoverRef>(null);\n  const closePopover = () => {\n    popoverRef.current && popoverRef.current.dismissPopover();\n  };\n\n  const propertyKey = temporaryToken.propertyKey;\n  const onChangePropertyKey = (newPropertyKey: undefined | string) => {\n    const filteringProperty = filteringProperties.reduce<FilteringProperty | undefined>(\n      (acc, property) => (property.key === newPropertyKey ? property : acc),\n      undefined\n    );\n    const allowedOperators = filteringProperty ? getAllowedOperators(filteringProperty) : freeTextOperators;\n    const operator =\n      temporaryToken.operator && allowedOperators.indexOf(temporaryToken.operator) !== -1\n        ? temporaryToken.operator\n        : allowedOperators[0];\n    setTemporaryToken({ ...temporaryToken, propertyKey: newPropertyKey, operator });\n  };\n\n  const operator = temporaryToken.operator;\n  const onChangeOperator = (newOperator: ComparisonOperator) => {\n    setTemporaryToken({ ...temporaryToken, operator: newOperator });\n  };\n\n  const value = temporaryToken.value;\n  const onChangeValue = (newValue: string) => {\n    setTemporaryToken({ ...temporaryToken, value: newValue });\n  };\n\n  return (\n    <InternalPopover\n      ref={popoverRef}\n      className={styles['token-label']}\n      triggerType=\"text\"\n      header={i18nStrings.editTokenHeader}\n      size=\"large\"\n      position=\"right\"\n      dismissAriaLabel={i18nStrings.dismissAriaLabel}\n      __onOpen={() => setTemporaryToken(token)}\n      renderWithPortal={expandToViewport}\n      content={\n        <div className={styles['token-editor']}>\n          <div className={styles['token-editor-form']}>\n            <InternalFormField label={i18nStrings.propertyText} className={styles['token-editor-field-property']}>\n              <PropertyInput\n                propertyKey={propertyKey}\n                onChangePropertyKey={onChangePropertyKey}\n                asyncProps={asyncProperties ? asyncProps : null}\n                filteringProperties={filteringProperties}\n                onLoadItems={onLoadItems}\n                customGroupsText={customGroupsText}\n                i18nStrings={i18nStrings}\n                disableFreeTextFiltering={disableFreeTextFiltering}\n              />\n            </InternalFormField>\n\n            <InternalFormField label={i18nStrings.operatorText} className={styles['token-editor-field-operator']}>\n              <OperatorInput\n                propertyKey={propertyKey}\n                operator={operator}\n                onChangeOperator={onChangeOperator}\n                filteringProperties={filteringProperties}\n                i18nStrings={i18nStrings}\n              />\n            </InternalFormField>\n\n            <InternalFormField label={i18nStrings.valueText} className={styles['token-editor-field-value']}>\n              <ValueInput\n                propertyKey={propertyKey}\n                operator={operator}\n                value={value}\n                onChangeValue={onChangeValue}\n                asyncProps={asyncProps}\n                filteringProperties={filteringProperties}\n                filteringOptions={filteringOptions}\n                onLoadItems={onLoadItems}\n                i18nStrings={i18nStrings}\n              />\n            </InternalFormField>\n          </div>\n\n          <div className={styles['token-editor-actions']}>\n            <InternalButton variant=\"link\" className={styles['token-editor-cancel']} onClick={closePopover}>\n              {i18nStrings.cancelActionText}\n            </InternalButton>\n            <InternalButton\n              className={styles['token-editor-submit']}\n              onClick={() => {\n                setToken(temporaryToken);\n                closePopover();\n              }}\n            >\n              {i18nStrings.applyActionText}\n            </InternalButton>\n          </div>\n        </div>\n      }\n    >\n      {triggerComponent}\n    </InternalPopover>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}