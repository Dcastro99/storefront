{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef } from 'react';\nexport var useAutosuggestLoadMore = function (_a) {\n  var _b = _a.options,\n    options = _b === void 0 ? [] : _b,\n    statusType = _a.statusType,\n    onLoadItems = _a.onLoadItems;\n  var lastFilteringText = useRef(null);\n  var fireLoadMore = function (_a) {\n    var _b;\n    var firstPage = _a.firstPage,\n      samePage = _a.samePage,\n      filteringText = _a.filteringText;\n    if (filteringText === undefined || lastFilteringText.current !== filteringText) {\n      if (filteringText !== undefined) {\n        lastFilteringText.current = filteringText;\n      }\n      onLoadItems({\n        filteringText: (_b = lastFilteringText.current) !== null && _b !== void 0 ? _b : '',\n        firstPage: firstPage,\n        samePage: samePage\n      });\n    }\n  };\n  var fireLoadMoreOnScroll = function () {\n    options.length > 0 && statusType === 'pending' && fireLoadMore({\n      firstPage: false,\n      samePage: false\n    });\n  };\n  var fireLoadMoreOnRecoveryClick = function () {\n    return fireLoadMore({\n      firstPage: false,\n      samePage: true\n    });\n  };\n  var fireLoadMoreOnInputFocus = function () {\n    return fireLoadMore({\n      firstPage: true,\n      samePage: false,\n      filteringText: ''\n    });\n  };\n  var fireLoadMoreOnInputChange = function (filteringText) {\n    return fireLoadMore({\n      firstPage: true,\n      samePage: false,\n      filteringText: filteringText\n    });\n  };\n  return {\n    fireLoadMoreOnScroll: fireLoadMoreOnScroll,\n    fireLoadMoreOnRecoveryClick: fireLoadMoreOnRecoveryClick,\n    fireLoadMoreOnInputFocus: fireLoadMoreOnInputFocus,\n    fireLoadMoreOnInputChange: fireLoadMoreOnInputChange\n  };\n};","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,MAAM,QAAQ,OAAO;AAkB9B,OAAO,IAAMC,sBAAsB,GAAG,UAACC,EAIT;MAH5BC,eAAY;IAAZC,OAAO,mBAAG,EAAE;IACZC,UAAU;IACVC,WAAW;EAEX,IAAMC,iBAAiB,GAAGP,MAAM,CAAgB,IAAI,CAAC;EAErD,IAAMQ,YAAY,GAAG,UAACN,EAQrB;;QAPCO,SAAS;MACTC,QAAQ;MACRC,aAAa;IAMb,IAAIA,aAAa,KAAKC,SAAS,IAAIL,iBAAiB,CAACM,OAAO,KAAKF,aAAa,EAAE;MAC9E,IAAIA,aAAa,KAAKC,SAAS,EAAE;QAC/BL,iBAAiB,CAACM,OAAO,GAAGF,aAAa;;MAE3CL,WAAW,CAAC;QAAEK,aAAa,EAAE,uBAAiB,CAACE,OAAO,mCAAI,EAAE;QAAEJ,SAAS;QAAEC,QAAQ;MAAA,CAAE,CAAC;;EAExF,CAAC;EAED,IAAMI,oBAAoB,GAAG;IAC3BV,OAAO,CAACW,MAAM,GAAG,CAAC,IAAIV,UAAU,KAAK,SAAS,IAAIG,YAAY,CAAC;MAAEC,SAAS,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAK,CAAE,CAAC;EACvG,CAAC;EAED,IAAMM,2BAA2B,GAAG;IAAM,mBAAY,CAAC;MAAEP,SAAS,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAI,CAAE,CAAC;EAAlD,CAAkD;EAE5F,IAAMO,wBAAwB,GAAG;IAAM,mBAAY,CAAC;MAAER,SAAS,EAAE,IAAI;MAAEC,QAAQ,EAAE,KAAK;MAAEC,aAAa,EAAE;IAAE,CAAE,CAAC;EAArE,CAAqE;EAE5G,IAAMO,yBAAyB,GAAG,UAACP,aAAqB;IACtD,mBAAY,CAAC;MAAEF,SAAS,EAAE,IAAI;MAAEC,QAAQ,EAAE,KAAK;MAAEC,aAAa;IAAA,CAAE,CAAC;EAAjE,CAAiE;EAEnE,OAAO;IAAEG,oBAAoB;IAAEE,2BAA2B;IAAEC,wBAAwB;IAAEC,yBAAyB;EAAA,CAAE;AACnH,CAAC","names":["useRef","useAutosuggestLoadMore","_a","_b","options","statusType","onLoadItems","lastFilteringText","fireLoadMore","firstPage","samePage","filteringText","undefined","current","fireLoadMoreOnScroll","length","fireLoadMoreOnRecoveryClick","fireLoadMoreOnInputFocus","fireLoadMoreOnInputChange"],"sources":["/Users/dcastro/node_modules/src/autosuggest/load-more-controller.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef } from 'react';\nimport { AutosuggestProps } from './interfaces';\nimport { OptionsLoadItemsDetail } from '../internal/components/dropdown/interfaces';\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\n\nexport interface UseAutosuggestLoadMoreProps {\n  options?: AutosuggestProps.Options;\n  statusType: DropdownStatusProps.StatusType;\n  onLoadItems: (detail: OptionsLoadItemsDetail) => void;\n}\n\nexport interface AutosuggestLoadMoreHandlers {\n  fireLoadMoreOnScroll(): void;\n  fireLoadMoreOnRecoveryClick(): void;\n  fireLoadMoreOnInputFocus(): void;\n  fireLoadMoreOnInputChange(filteringText: string): void;\n}\n\nexport const useAutosuggestLoadMore = ({\n  options = [],\n  statusType,\n  onLoadItems,\n}: UseAutosuggestLoadMoreProps): AutosuggestLoadMoreHandlers => {\n  const lastFilteringText = useRef<string | null>(null);\n\n  const fireLoadMore = ({\n    firstPage,\n    samePage,\n    filteringText,\n  }: {\n    firstPage: boolean;\n    samePage: boolean;\n    filteringText?: string;\n  }) => {\n    if (filteringText === undefined || lastFilteringText.current !== filteringText) {\n      if (filteringText !== undefined) {\n        lastFilteringText.current = filteringText;\n      }\n      onLoadItems({ filteringText: lastFilteringText.current ?? '', firstPage, samePage });\n    }\n  };\n\n  const fireLoadMoreOnScroll = () => {\n    options.length > 0 && statusType === 'pending' && fireLoadMore({ firstPage: false, samePage: false });\n  };\n\n  const fireLoadMoreOnRecoveryClick = () => fireLoadMore({ firstPage: false, samePage: true });\n\n  const fireLoadMoreOnInputFocus = () => fireLoadMore({ firstPage: true, samePage: false, filteringText: '' });\n\n  const fireLoadMoreOnInputChange = (filteringText: string) =>\n    fireLoadMore({ firstPage: true, samePage: false, filteringText });\n\n  return { fireLoadMoreOnScroll, fireLoadMoreOnRecoveryClick, fireLoadMoreOnInputFocus, fireLoadMoreOnInputChange };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}