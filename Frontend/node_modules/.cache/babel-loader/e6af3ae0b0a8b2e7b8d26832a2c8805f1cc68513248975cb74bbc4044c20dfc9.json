{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalToggle from '../toggle/internal';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport styles from './styles.css.js';\nvar isVisible = function (id, visibleIds) {\n  return visibleIds.indexOf(id) !== -1;\n};\nvar className = function (suffix) {\n  return {\n    className: styles[\"visible-content-\".concat(suffix)]\n  };\n};\nexport default function VisibleContentPreference(_a) {\n  var title = _a.title,\n    options = _a.options,\n    _b = _a.value,\n    value = _b === void 0 ? [] : _b,\n    onChange = _a.onChange;\n  var idPrefix = useUniqueId('visible-content');\n  var flatOptionsIds = options.reduce(function (ids, group) {\n    return __spreadArray(__spreadArray([], ids, true), group.options.reduce(function (groupIds, option) {\n      return __spreadArray(__spreadArray([], groupIds, true), [option.id], false);\n    }, []), true);\n  }, []);\n  var onToggle = function (id) {\n    if (!isVisible(id, value)) {\n      onChange(__spreadArray(__spreadArray([], value, true), [id], false).sort(function (firstId, secondId) {\n        return flatOptionsIds.indexOf(firstId) - flatOptionsIds.indexOf(secondId);\n      }));\n    } else {\n      onChange(value.filter(function (currentId) {\n        return currentId !== id;\n      }));\n    }\n  };\n  var selectionOption = function (option, optionGroupIndex, optionIndex) {\n    var labelId = \"\".concat(idPrefix, \"-\").concat(optionGroupIndex, \"-\").concat(optionIndex);\n    return React.createElement(\"div\", __assign({\n      key: optionIndex\n    }, className('option')), React.createElement(\"label\", __assign({}, className('option-label'), {\n      htmlFor: labelId\n    }), option.label), React.createElement(\"div\", __assign({}, className('toggle')), React.createElement(InternalToggle, {\n      checked: isVisible(option.id, value),\n      onChange: function () {\n        return onToggle(option.id);\n      },\n      disabled: option.editable === false,\n      controlId: labelId\n    })));\n  };\n  var outerGroupLabelId = \"\".concat(idPrefix, \"-outer\");\n  return React.createElement(\"div\", {\n    className: styles['visible-content']\n  }, React.createElement(\"div\", __assign({}, className('title'), {\n    id: outerGroupLabelId\n  }), title), React.createElement(InternalSpaceBetween, __assign({}, className('groups'), {\n    size: \"xs\"\n  }), options.map(function (optionGroup, optionGroupIndex) {\n    var groupLabelId = \"\".concat(idPrefix, \"-\").concat(optionGroupIndex);\n    return React.createElement(\"div\", __assign({\n      key: optionGroupIndex\n    }, className('group'), {\n      role: \"group\",\n      \"aria-labelledby\": \"\".concat(outerGroupLabelId, \" \").concat(groupLabelId)\n    }), React.createElement(\"div\", __assign({}, className('group-label'), {\n      id: groupLabelId\n    }), optionGroup.label), React.createElement(\"div\", null, optionGroup.options.map(function (option, optionIndex) {\n      return selectionOption(option, optionGroupIndex, optionIndex);\n    })));\n  })));\n}","map":{"version":3,"mappings":"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","names":["React","InternalSpaceBetween","InternalToggle","useUniqueId","styles","isVisible","id","visibleIds","indexOf","className","suffix","VisibleContentPreference","_a","title","options","_b","value","onChange","idPrefix","flatOptionsIds","reduce","ids","group","groupIds","option","onToggle","__spreadArray","sort","firstId","secondId","filter","selectionOption","optionGroupIndex","optionIndex","labelId","key","htmlFor","label","checked","disabled","editable","controlId","outerGroupLabelId","size","map","optionGroup","groupLabelId","role"],"sources":["/Users/dcastro/node_modules/src/collection-preferences/visible-content.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalToggle from '../toggle/internal';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\n\nimport { CollectionPreferencesProps } from './interfaces';\nimport styles from './styles.css.js';\n\nconst isVisible = (id: string, visibleIds: ReadonlyArray<string>) => visibleIds.indexOf(id) !== -1;\n\ninterface ClassNameProps {\n  className: string;\n}\nconst className = (suffix: string): ClassNameProps => ({\n  className: styles[`visible-content-${suffix}`],\n});\n\ninterface VisibleContentPreferenceProps extends CollectionPreferencesProps.VisibleContentPreference {\n  onChange: (value: ReadonlyArray<string>) => void;\n  value?: ReadonlyArray<string>;\n}\n\nexport default function VisibleContentPreference({\n  title,\n  options,\n  value = [],\n  onChange,\n}: VisibleContentPreferenceProps) {\n  const idPrefix = useUniqueId('visible-content');\n\n  const flatOptionsIds = options.reduce<string[]>(\n    (ids, group) => [...ids, ...group.options.reduce<string[]>((groupIds, option) => [...groupIds, option.id], [])],\n    []\n  );\n\n  const onToggle = (id: string) => {\n    if (!isVisible(id, value)) {\n      onChange(\n        [...value, id].sort((firstId, secondId) => flatOptionsIds.indexOf(firstId) - flatOptionsIds.indexOf(secondId))\n      );\n    } else {\n      onChange(value.filter(currentId => currentId !== id));\n    }\n  };\n\n  const selectionOption = (\n    option: CollectionPreferencesProps.VisibleContentOption,\n    optionGroupIndex: number,\n    optionIndex: number\n  ) => {\n    const labelId = `${idPrefix}-${optionGroupIndex}-${optionIndex}`;\n    return (\n      <div key={optionIndex} {...className('option')}>\n        <label {...className('option-label')} htmlFor={labelId}>\n          {option.label}\n        </label>\n        <div {...className('toggle')}>\n          <InternalToggle\n            checked={isVisible(option.id, value)}\n            onChange={() => onToggle(option.id)}\n            disabled={option.editable === false}\n            controlId={labelId}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const outerGroupLabelId = `${idPrefix}-outer`;\n  return (\n    <div className={styles['visible-content']}>\n      <div {...className('title')} id={outerGroupLabelId}>\n        {title}\n      </div>\n      <InternalSpaceBetween {...className('groups')} size=\"xs\">\n        {options.map((optionGroup, optionGroupIndex) => {\n          const groupLabelId = `${idPrefix}-${optionGroupIndex}`;\n          return (\n            <div\n              key={optionGroupIndex}\n              {...className('group')}\n              role=\"group\"\n              aria-labelledby={`${outerGroupLabelId} ${groupLabelId}`}\n            >\n              <div {...className('group-label')} id={groupLabelId}>\n                {optionGroup.label}\n              </div>\n              <div>\n                {optionGroup.options.map((option, optionIndex) =>\n                  selectionOption(option, optionGroupIndex, optionIndex)\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </InternalSpaceBetween>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}