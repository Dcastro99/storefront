{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nexport default function InternalBox(_a) {\n  var _b = _a.variant,\n    variant = _b === void 0 ? 'div' : _b,\n    tagOverride = _a.tagOverride,\n    _c = _a.margin,\n    margin = _c === void 0 ? {} : _c,\n    _d = _a.padding,\n    padding = _d === void 0 ? {} : _d,\n    display = _a.display,\n    textAlign = _a.textAlign,\n    float = _a.float,\n    fontSize = _a.fontSize,\n    fontWeight = _a.fontWeight,\n    color = _a.color,\n    children = _a.children,\n    _e = _a.__internalRootRef,\n    __internalRootRef = _e === void 0 ? null : _e,\n    props = __rest(_a, [\"variant\", \"tagOverride\", \"margin\", \"padding\", \"display\", \"textAlign\", \"float\", \"fontSize\", \"fontWeight\", \"color\", \"children\", \"__internalRootRef\"]);\n  var baseProps = getBaseProps(props);\n  var marginsClassNamesSuffices = getClassNamesSuffixes(margin);\n  var paddingsClassNamesSuffices = getClassNamesSuffixes(padding);\n  // This can be any arbitrary string if passed into tagOverride.\n  // We appease the compiler with an incorrect type.\n  var Tag = getTag(variant, tagOverride);\n  var className = clsx(baseProps.className, styles.root, styles.box, styles[\"\".concat(variant.replace(/^awsui-/, ''), \"-variant\")], marginsClassNamesSuffices.map(function (suffix) {\n    return styles[\"m-\".concat(suffix)];\n  }), paddingsClassNamesSuffices.map(function (suffix) {\n    return styles[\"p-\".concat(suffix)];\n  }), styles[\"d-\".concat(display)], styles[\"f-\".concat(float)], styles[\"color-\".concat(color || 'default')], styles[\"font-size-\".concat(fontSize || 'default')], styles[\"font-weight-\".concat(fontWeight || 'default')], styles[\"t-\".concat(textAlign)]);\n  return React.createElement(Tag, __assign({}, baseProps, {\n    className: className,\n    ref: __internalRootRef\n  }), children);\n}\nvar getClassNamesSuffixes = function (value) {\n  if (typeof value === 'string') {\n    return [value];\n  }\n  var sides = ['top', 'right', 'bottom', 'left', 'horizontal', 'vertical'];\n  return sides.filter(function (side) {\n    return !!value[side];\n  }).map(function (side) {\n    return \"\".concat(side, \"-\").concat(value[side]);\n  });\n};\nvar getTag = function (variant, tagOverride) {\n  if (tagOverride) {\n    return tagOverride;\n  }\n  if (variant === 'awsui-value-large') {\n    return 'span';\n  }\n  if (variant === 'awsui-key-label') {\n    return 'div';\n  }\n  return variant;\n};","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,MAAM,MAAM,iBAAiB;AAMpC,eAAc,SAAUC,WAAW,CAACC,EAcjB;EAbjB,mBAAe;IAAfC,OAAO,mBAAG,KAAK;IACfC,WAAW;IACXC,cAAW;IAAXC,MAAM,mBAAG,EAAE;IACXC,eAAY;IAAZC,OAAO,mBAAG,EAAE;IACZC,OAAO;IACPC,SAAS;IACTC,KAAK;IACLC,QAAQ;IACRC,UAAU;IACVC,KAAK;IACLC,QAAQ;IACRC,yBAAwB;IAAxBC,iBAAiB,mBAAG,IAAI;IACrBC,KAAK,cAb0B,oJAcnC,CADS;EAER,IAAMC,SAAS,GAAGrB,YAAY,CAACoB,KAAK,CAAC;EACrC,IAAME,yBAAyB,GAAGC,qBAAqB,CAACf,MAAM,CAAC;EAC/D,IAAMgB,0BAA0B,GAAGD,qBAAqB,CAACb,OAAO,CAAC;EACjE;EACA;EACA,IAAMe,GAAG,GAAGC,MAAM,CAACrB,OAAO,EAAEC,WAAW,CAAU;EAEjD,IAAMqB,SAAS,GAAG1B,IAAI,CACpBoB,SAAS,CAACM,SAAS,EACnBzB,MAAM,CAAC0B,IAAI,EACX1B,MAAM,CAAC2B,GAAG,EACV3B,MAAM,CAAC,UAAGG,OAAO,CAACyB,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,aAAU,CAAC,EACnDR,yBAAyB,CAACS,GAAG,CAAC,gBAAM;IAAI,aAAM,CAAC,YAAKC,MAAM,CAAE,CAAC;EAArB,CAAqB,CAAC,EAC9DR,0BAA0B,CAACO,GAAG,CAAC,gBAAM;IAAI,aAAM,CAAC,YAAKC,MAAM,CAAE,CAAC;EAArB,CAAqB,CAAC,EAC/D9B,MAAM,CAAC,YAAKS,OAAO,CAAE,CAAC,EACtBT,MAAM,CAAC,YAAKW,KAAK,CAAE,CAAC,EACpBX,MAAM,CAAC,gBAASc,KAAK,IAAI,SAAS,CAAE,CAAC,EACrCd,MAAM,CAAC,oBAAaY,QAAQ,IAAI,SAAS,CAAE,CAAC,EAC5CZ,MAAM,CAAC,sBAAea,UAAU,IAAI,SAAS,CAAE,CAAC,EAChDb,MAAM,CAAC,YAAKU,SAAS,CAAE,CAAC,CACzB;EAED,OACEb,oBAAC0B,GAAG,eAAKJ,SAAS;IAAEM,SAAS,EAAEA,SAAS;IAAEM,GAAG,EAAEd;EAAiB,IAC7DF,QAAQ,CACL;AAEV;AAEA,IAAMM,qBAAqB,GAAG,UAACW,KAA8C;EAC3E,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,CAACA,KAAK,CAAC;;EAEhB,IAAMC,KAAK,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,CAAU;EACnF,OAAOA,KAAK,CAACC,MAAM,CAAC,cAAI;IAAI,QAAC,CAACF,KAAK,CAACG,IAAI,CAAC;EAAb,CAAa,CAAC,CAACN,GAAG,CAAC,cAAI;IAAI,iBAAGM,IAAI,cAAIH,KAAK,CAACG,IAAI,CAAC,CAAE;EAAxB,CAAwB,CAAC;AAClF,CAAC;AAED,IAAMX,MAAM,GAAG,UAACrB,OAAyB,EAAEC,WAAoC;EAC7E,IAAIA,WAAW,EAAE;IACf,OAAOA,WAAW;;EAGpB,IAAID,OAAO,KAAK,mBAAmB,EAAE;IACnC,OAAO,MAAM;;EAGf,IAAIA,OAAO,KAAK,iBAAiB,EAAE;IACjC,OAAO,KAAK;;EAGd,OAAOA,OAAO;AAChB,CAAC","names":["React","getBaseProps","clsx","styles","InternalBox","_a","variant","tagOverride","_c","margin","_d","padding","display","textAlign","float","fontSize","fontWeight","color","children","_e","__internalRootRef","props","baseProps","marginsClassNamesSuffices","getClassNamesSuffixes","paddingsClassNamesSuffices","Tag","getTag","className","root","box","replace","map","suffix","ref","value","sides","filter","side"],"sources":["/Users/dcastro/node_modules/src/box/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { BoxProps } from './interfaces';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\ntype InternalBoxProps = BoxProps & InternalBaseComponentProps;\n\nexport default function InternalBox({\n  variant = 'div',\n  tagOverride,\n  margin = {},\n  padding = {},\n  display,\n  textAlign,\n  float,\n  fontSize,\n  fontWeight,\n  color,\n  children,\n  __internalRootRef = null,\n  ...props\n}: InternalBoxProps) {\n  const baseProps = getBaseProps(props);\n  const marginsClassNamesSuffices = getClassNamesSuffixes(margin);\n  const paddingsClassNamesSuffices = getClassNamesSuffixes(padding);\n  // This can be any arbitrary string if passed into tagOverride.\n  // We appease the compiler with an incorrect type.\n  const Tag = getTag(variant, tagOverride) as 'div';\n\n  const className = clsx(\n    baseProps.className,\n    styles.root,\n    styles.box,\n    styles[`${variant.replace(/^awsui-/, '')}-variant`],\n    marginsClassNamesSuffices.map(suffix => styles[`m-${suffix}`]),\n    paddingsClassNamesSuffices.map(suffix => styles[`p-${suffix}`]),\n    styles[`d-${display}`],\n    styles[`f-${float}`],\n    styles[`color-${color || 'default'}`],\n    styles[`font-size-${fontSize || 'default'}`],\n    styles[`font-weight-${fontWeight || 'default'}`],\n    styles[`t-${textAlign}`]\n  );\n\n  return (\n    <Tag {...baseProps} className={className} ref={__internalRootRef}>\n      {children}\n    </Tag>\n  );\n}\n\nconst getClassNamesSuffixes = (value: BoxProps.SpacingSize | BoxProps.Spacing) => {\n  if (typeof value === 'string') {\n    return [value];\n  }\n  const sides = ['top', 'right', 'bottom', 'left', 'horizontal', 'vertical'] as const;\n  return sides.filter(side => !!value[side]).map(side => `${side}-${value[side]}`);\n};\n\nconst getTag = (variant: BoxProps.Variant, tagOverride: BoxProps['tagOverride']) => {\n  if (tagOverride) {\n    return tagOverride;\n  }\n\n  if (variant === 'awsui-value-large') {\n    return 'span';\n  }\n\n  if (variant === 'awsui-key-label') {\n    return 'div';\n  }\n\n  return variant;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}