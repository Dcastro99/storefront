{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, memo } from 'react';\nimport HighlightedPoint from '../../internal/components/cartesian-chart/highlighted-point';\nimport { useSelector } from '../model/async-store';\nexport default memo(forwardRef(AreaHighlightedPoint));\nfunction AreaHighlightedPoint(_a, ref) {\n  var model = _a.model,\n    ariaLabel = _a.ariaLabel;\n  var highlightedPoint = useSelector(model.interactions, function (state) {\n    return state.highlightedPoint;\n  });\n  var isPopoverPinned = useSelector(model.interactions, function (state) {\n    return state.isPopoverPinned;\n  });\n  var point = highlightedPoint ? {\n    key: \"\".concat(highlightedPoint.index.x, \":\").concat(highlightedPoint.index.s),\n    x: highlightedPoint.scaled.x,\n    y: highlightedPoint.scaled.y1,\n    color: model.getInternalSeries(model.series[highlightedPoint.index.s]).color\n  } : null;\n  return React.createElement(HighlightedPoint, {\n    ref: ref,\n    point: point,\n    role: \"button\",\n    ariaLabel: ariaLabel,\n    ariaHasPopup: true,\n    ariaExpanded: isPopoverPinned\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,IAAI,QAAQ,OAAO;AAE/C,OAAOC,gBAAgB,MAAM,6DAA6D;AAG1F,SAASC,WAAW,QAAQ,sBAAsB;AAElD,eAAeF,IAAI,CAACD,UAAU,CAACI,oBAAoB,CAAC,CAAC;AAErD,SAASA,oBAAoB,CAC3BC,EAMC,EACDC,GAA2B;MANzBC,KAAK;IACLC,SAAS;EAOX,IAAMC,gBAAgB,GAAGN,WAAW,CAACI,KAAK,CAACG,YAAY,EAAE,eAAK;IAAI,YAAK,CAACD,gBAAgB;EAAtB,CAAsB,CAAC;EACzF,IAAME,eAAe,GAAGR,WAAW,CAACI,KAAK,CAACG,YAAY,EAAE,eAAK;IAAI,YAAK,CAACC,eAAe;EAArB,CAAqB,CAAC;EAEvF,IAAMC,KAAK,GAAGH,gBAAgB,GAC1B;IACEI,GAAG,EAAE,UAAGJ,gBAAgB,CAACK,KAAK,CAACC,CAAC,cAAIN,gBAAgB,CAACK,KAAK,CAACE,CAAC,CAAE;IAC9DD,CAAC,EAAEN,gBAAgB,CAACQ,MAAM,CAACF,CAAC;IAC5BG,CAAC,EAAET,gBAAgB,CAACQ,MAAM,CAACE,EAAE;IAC7BC,KAAK,EAAEb,KAAK,CAACc,iBAAiB,CAACd,KAAK,CAACe,MAAM,CAACb,gBAAgB,CAACK,KAAK,CAACE,CAAC,CAAC,CAAC,CAACI;GACxE,GACD,IAAI;EAER,OACErB,oBAACG,gBAAgB;IACfI,GAAG,EAAEA,GAAG;IACRM,KAAK,EAAEA,KAAK;IACZW,IAAI,EAAC,QAAQ;IACbf,SAAS,EAAEA,SAAS;IACpBgB,YAAY,EAAE,IAAI;IAClBC,YAAY,EAAEd;EAAe,EAC7B;AAEN","names":["React","forwardRef","memo","HighlightedPoint","useSelector","AreaHighlightedPoint","_a","ref","model","ariaLabel","highlightedPoint","interactions","isPopoverPinned","point","key","index","x","s","scaled","y","y1","color","getInternalSeries","series","role","ariaHasPopup","ariaExpanded"],"sources":["/Users/dcastro/node_modules/src/area-chart/elements/highlighted-point.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, memo } from 'react';\n\nimport HighlightedPoint from '../../internal/components/cartesian-chart/highlighted-point';\n\nimport { ChartModel } from '../model';\nimport { useSelector } from '../model/async-store';\n\nexport default memo(forwardRef(AreaHighlightedPoint));\n\nfunction AreaHighlightedPoint(\n  {\n    model,\n    ariaLabel,\n  }: {\n    model: ChartModel<any>;\n    ariaLabel?: string;\n  },\n  ref: React.Ref<SVGGElement>\n) {\n  const highlightedPoint = useSelector(model.interactions, state => state.highlightedPoint);\n  const isPopoverPinned = useSelector(model.interactions, state => state.isPopoverPinned);\n\n  const point = highlightedPoint\n    ? {\n        key: `${highlightedPoint.index.x}:${highlightedPoint.index.s}`,\n        x: highlightedPoint.scaled.x,\n        y: highlightedPoint.scaled.y1,\n        color: model.getInternalSeries(model.series[highlightedPoint.index.s]).color,\n      }\n    : null;\n\n  return (\n    <HighlightedPoint\n      ref={ref}\n      point={point}\n      role=\"button\"\n      ariaLabel={ariaLabel}\n      ariaHasPopup={true}\n      ariaExpanded={isPopoverPinned}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}