{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport RadioButton from './radio-button';\nimport styles from './styles.css.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nexport default function InternalRadioGroup(_a) {\n  var name = _a.name,\n    value = _a.value,\n    items = _a.items,\n    ariaLabel = _a.ariaLabel,\n    ariaRequired = _a.ariaRequired,\n    onChange = _a.onChange,\n    _b = _a.__internalRootRef,\n    __internalRootRef = _b === void 0 ? null : _b,\n    props = __rest(_a, [\"name\", \"value\", \"items\", \"ariaLabel\", \"ariaRequired\", \"onChange\", \"__internalRootRef\"]);\n  var _c = useFormFieldContext(props),\n    ariaDescribedby = _c.ariaDescribedby,\n    ariaLabelledby = _c.ariaLabelledby;\n  var baseProps = getBaseProps(props);\n  var generatedName = useUniqueId('awsui-radio-');\n  return React.createElement(\"div\", __assign({\n    role: \"radiogroup\",\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-label\": ariaLabel,\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-required\": ariaRequired\n  }, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), items && items.map(function (item) {\n    return React.createElement(RadioButton, {\n      key: item.value,\n      checked: item.value === value,\n      name: name || generatedName,\n      value: item.value,\n      label: item.label,\n      description: item.description,\n      disabled: item.disabled,\n      onChange: onChange,\n      controlId: item.controlId\n    });\n  }));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,4BAA4B;AAEzD,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,mBAAmB,QAAQ,wCAAwC;AAC5E,SAASC,WAAW,QAAQ,iCAAiC;AAK7D,eAAc,SAAUC,kBAAkB,CAACC,EASjB;EARxB,QAAI;IACJC,KAAK;IACLC,KAAK;IACLC,SAAS;IACTC,YAAY;IACZC,QAAQ;IACRC,yBAAwB;IAAxBC,iBAAiB,mBAAG,IAAI;IACrBC,KAAK,cARiC,wFAS1C,CADS;EAEF,SAAsCX,mBAAmB,CAACW,KAAK,CAAC;IAA9DC,eAAe;IAAEC,cAAc,oBAA+B;EACtE,IAAMC,SAAS,GAAGjB,YAAY,CAACc,KAAK,CAAC;EACrC,IAAMI,aAAa,GAAGd,WAAW,CAAC,cAAc,CAAC;EACjD,OACEL;IACEoB,IAAI,EAAC,YAAY;IAAA,mBACAH,cAAc;IAAA,cACnBP,SAAS;IAAA,oBACHM,eAAe;IAAA,iBAClBL;EAAY,GACvBO,SAAS;IACbG,SAAS,EAAEtB,IAAI,CAACmB,SAAS,CAACG,SAAS,EAAElB,MAAM,CAACmB,IAAI,CAAC;IACjDC,GAAG,EAAET;EAAiB,IAErBL,KAAK,IACJA,KAAK,CAACe,GAAG,CAAC,cAAI;IAAI,OAChBxB,oBAACE,WAAW;MACVuB,GAAG,EAAEC,IAAI,CAAClB,KAAK;MACfmB,OAAO,EAAED,IAAI,CAAClB,KAAK,KAAKA,KAAK;MAC7BoB,IAAI,EAAEA,IAAI,IAAIT,aAAa;MAC3BX,KAAK,EAAEkB,IAAI,CAAClB,KAAK;MACjBqB,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,WAAW,EAAEJ,IAAI,CAACI,WAAW;MAC7BC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;MACvBnB,QAAQ,EAAEA,QAAQ;MAClBoB,SAAS,EAAEN,IAAI,CAACM;IAAS,EACzB;EAXc,CAYjB,CAAC,CACA;AAEV","names":["clsx","React","getBaseProps","RadioButton","styles","useFormFieldContext","useUniqueId","InternalRadioGroup","_a","value","items","ariaLabel","ariaRequired","onChange","_b","__internalRootRef","props","ariaDescribedby","ariaLabelledby","baseProps","generatedName","role","className","root","ref","map","key","item","checked","name","label","description","disabled","controlId"],"sources":["/Users/dcastro/node_modules/src/radio-group/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { RadioGroupProps } from './interfaces';\nimport RadioButton from './radio-button';\nimport styles from './styles.css.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\ntype InternalRadioGroupProps = RadioGroupProps & InternalBaseComponentProps;\n\nexport default function InternalRadioGroup({\n  name,\n  value,\n  items,\n  ariaLabel,\n  ariaRequired,\n  onChange,\n  __internalRootRef = null,\n  ...props\n}: InternalRadioGroupProps) {\n  const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(props);\n  const baseProps = getBaseProps(props);\n  const generatedName = useUniqueId('awsui-radio-');\n  return (\n    <div\n      role=\"radiogroup\"\n      aria-labelledby={ariaLabelledby}\n      aria-label={ariaLabel}\n      aria-describedby={ariaDescribedby}\n      aria-required={ariaRequired}\n      {...baseProps}\n      className={clsx(baseProps.className, styles.root)}\n      ref={__internalRootRef}\n    >\n      {items &&\n        items.map(item => (\n          <RadioButton\n            key={item.value}\n            checked={item.value === value}\n            name={name || generatedName}\n            value={item.value}\n            label={item.label}\n            description={item.description}\n            disabled={item.disabled}\n            onChange={onChange}\n            controlId={item.controlId}\n          />\n        ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}