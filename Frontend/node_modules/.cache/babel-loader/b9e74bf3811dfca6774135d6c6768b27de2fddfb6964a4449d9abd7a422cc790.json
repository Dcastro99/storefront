{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useLayoutEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { getContainingBlock, nodeContains } from '../internal/utils/dom';\nimport { useResizeObserver } from '../internal/hooks/container-queries';\nimport { calculatePosition } from './utils/positions';\nimport styles from './styles.css.js';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nvar INITIAL_STYLES = {\n  position: 'absolute',\n  top: -9999,\n  left: -9999\n};\nexport default function PopoverContainer(_a) {\n  var _b;\n  var position = _a.position,\n    trackRef = _a.trackRef,\n    trackKey = _a.trackKey,\n    arrow = _a.arrow,\n    children = _a.children,\n    zIndex = _a.zIndex,\n    renderWithPortal = _a.renderWithPortal,\n    size = _a.size,\n    fixedWidth = _a.fixedWidth,\n    variant = _a.variant;\n  var bodyRef = useRef(null);\n  var contentRef = useRef(null);\n  var popoverRef = useRef(null);\n  var arrowRef = useRef(null);\n  var _c = useState(INITIAL_STYLES),\n    popoverStyle = _c[0],\n    setPopoverStyle = _c[1];\n  var _d = useState(null),\n    internalPosition = _d[0],\n    setInternalPosition = _d[1];\n  var isRefresh = useVisualRefresh();\n  // Store the handler in a ref so that it can still be replaced from outside of the listener closure.\n  var positionHandlerRef = useRef(function () {});\n  // Updates the position handler.\n  var updatePositionHandler = useCallback(function () {\n    if (!trackRef.current || !popoverRef.current || !bodyRef.current || !contentRef.current || !arrowRef.current) {\n      return;\n    }\n    // Get important elements\n    var popover = popoverRef.current;\n    var body = bodyRef.current;\n    var arrow = arrowRef.current;\n    var document = popover.ownerDocument;\n    var track = trackRef.current;\n    // If the popover body isn't being rendered for whatever reason (e.g. \"display: none\" or JSDOM),\n    // or track does not belong to the document - bail on calculating dimensions.\n    if (popover.offsetWidth === 0 || popover.offsetHeight === 0 || !nodeContains(document.body, track)) {\n      return;\n    }\n    // Imperatively move body off-screen to give it room to expand.\n    // Not doing this in React because this recalculation should happen\n    // in the span of a single frame without rerendering anything.\n    var prevTop = popover.style.top;\n    var prevLeft = popover.style.left;\n    popover.style.top = '0';\n    popover.style.left = '0';\n    // Imperatively remove body styles that can remain from the previous computation.\n    body.style.maxHeight = '';\n    body.style.overflowX = '';\n    body.style.overflowY = '';\n    // Get rects representing key elements\n    // Use getComputedStyle for arrowRect to avoid modifications made by transform\n    var viewportRect = getViewportRect(document.defaultView);\n    var trackRect = track.getBoundingClientRect();\n    var arrowRect = {\n      width: parseFloat(getComputedStyle(arrow).width),\n      height: parseFloat(getComputedStyle(arrow).height)\n    };\n    var containingBlock = getContainingBlock(popover);\n    var containingBlockRect = containingBlock ? containingBlock.getBoundingClientRect() : viewportRect;\n    var bodyBorderWidth = getBorderWidth(body);\n    var contentRect = contentRef.current.getBoundingClientRect();\n    var contentBoundingBox = {\n      width: contentRect.width + 2 * bodyBorderWidth,\n      height: contentRect.height + 2 * bodyBorderWidth\n    };\n    // Calculate the arrow direction and viewport-relative position of the popover.\n    var _a = calculatePosition(position, trackRect, arrowRect, contentBoundingBox, containingBlock ? containingBlockRect : getDocumentRect(document), viewportRect, renderWithPortal),\n      scrollable = _a.scrollable,\n      newInternalPosition = _a.internalPosition,\n      boundingOffset = _a.boundingOffset;\n    // Get the position of the popover relative to the offset parent.\n    var popoverOffset = toRelativePosition(boundingOffset, containingBlockRect);\n    // Cache the distance between the trigger and the popover (which stays the same as you scroll),\n    // and use that to recalculate the new popover position.\n    var trackRelativeOffset = toRelativePosition(popoverOffset, toRelativePosition(trackRect, containingBlockRect));\n    // Bring back the container to its original position to prevent any flashing.\n    popover.style.top = prevTop;\n    popover.style.left = prevLeft;\n    // Allow popover body to scroll if can't fit the popover into the container/viewport otherwise.\n    if (scrollable) {\n      body.style.maxHeight = boundingOffset.height + 'px';\n      body.style.overflowX = 'hidden';\n      body.style.overflowY = 'auto';\n    }\n    // Position the popover\n    setInternalPosition(newInternalPosition);\n    setPopoverStyle({\n      top: popoverOffset.top,\n      left: popoverOffset.left\n    });\n    positionHandlerRef.current = function () {\n      var newTrackOffset = toRelativePosition(track.getBoundingClientRect(), containingBlock ? containingBlock.getBoundingClientRect() : viewportRect);\n      setPopoverStyle({\n        top: newTrackOffset.top + trackRelativeOffset.top,\n        left: newTrackOffset.left + trackRelativeOffset.left\n      });\n    };\n  }, [position, trackRef, renderWithPortal]);\n  // Recalculate position when properties change.\n  useLayoutEffect(function () {\n    updatePositionHandler();\n  }, [updatePositionHandler, trackKey]);\n  // Recalculate position when content size changes.\n  useResizeObserver(contentRef, function () {\n    return updatePositionHandler();\n  });\n  // Recalculate position on DOM events.\n  useLayoutEffect(function () {\n    /*\n      This is a heuristic. Some layout changes are caused by user clicks (e.g. toggling the tools panel, submitting a form),\n      and by tracking the click event we can adapt the popover's position to the new layout.\n           TODO: extend this to Enter and Spacebar?\n    */\n    var updatePosition = function () {\n      return requestAnimationFrame(function () {\n        return updatePositionHandler();\n      });\n    };\n    var refreshPosition = function () {\n      return requestAnimationFrame(function () {\n        return positionHandlerRef.current();\n      });\n    };\n    window.addEventListener('click', updatePosition);\n    window.addEventListener('resize', updatePosition);\n    window.addEventListener('scroll', refreshPosition, true);\n    return function () {\n      window.removeEventListener('click', updatePosition);\n      window.removeEventListener('resize', updatePosition);\n      window.removeEventListener('scroll', refreshPosition, true);\n    };\n  }, [updatePositionHandler]);\n  return React.createElement(\"div\", {\n    ref: popoverRef,\n    style: __assign(__assign({}, popoverStyle), {\n      zIndex: zIndex\n    }),\n    className: clsx(styles.container, isRefresh && styles.refresh)\n  }, React.createElement(\"div\", {\n    ref: arrowRef,\n    className: clsx(styles[\"container-arrow\"], styles[\"container-arrow-position-\".concat(internalPosition)]),\n    \"aria-hidden\": true\n  }, arrow(internalPosition)), React.createElement(\"div\", {\n    ref: bodyRef,\n    className: clsx(styles['container-body'], styles[\"container-body-size-\".concat(size)], (_b = {}, _b[styles['fixed-width']] = fixedWidth, _b[styles[\"container-body-variant-\".concat(variant)]] = variant, _b))\n  }, React.createElement(\"div\", {\n    ref: contentRef\n  }, children)));\n}\nfunction getBorderWidth(element) {\n  return parseInt(getComputedStyle(element).borderWidth) || 0;\n}\n/**\n * Convert a viewport-relative offset to an element-relative offset.\n */\nfunction toRelativePosition(element, parent) {\n  return {\n    top: element.top - parent.top,\n    left: element.left - parent.left\n  };\n}\n/**\n * Get a BoundingOffset that represents the visible viewport.\n */\nfunction getViewportRect(window) {\n  return {\n    top: 0,\n    left: 0,\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n}\nfunction getDocumentRect(document) {\n  var _a = document.documentElement.getBoundingClientRect(),\n    top = _a.top,\n    left = _a.left;\n  return {\n    top: top,\n    left: left,\n    width: document.documentElement.scrollWidth,\n    height: document.documentElement.scrollHeight\n  };\n}","map":{"version":3,"mappings":"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","names":["React","useCallback","useLayoutEffect","useRef","useState","clsx","getContainingBlock","nodeContains","useResizeObserver","calculatePosition","styles","useVisualRefresh","INITIAL_STYLES","position","top","left","PopoverContainer","_a","trackRef","trackKey","arrow","children","zIndex","renderWithPortal","size","fixedWidth","variant","bodyRef","contentRef","popoverRef","arrowRef","popoverStyle","setPopoverStyle","internalPosition","setInternalPosition","isRefresh","positionHandlerRef","updatePositionHandler","current","popover","body","document","ownerDocument","track","offsetWidth","offsetHeight","prevTop","style","prevLeft","maxHeight","overflowX","overflowY","viewportRect","getViewportRect","defaultView","trackRect","getBoundingClientRect","arrowRect","width","parseFloat","getComputedStyle","height","containingBlock","containingBlockRect","bodyBorderWidth","getBorderWidth","contentRect","contentBoundingBox","getDocumentRect","scrollable","newInternalPosition","boundingOffset","popoverOffset","toRelativePosition","trackRelativeOffset","newTrackOffset","updatePosition","refreshPosition","window","addEventListener","removeEventListener","ref","className","container","refresh","_b","element","parseInt","borderWidth","parent","innerWidth","innerHeight","documentElement","scrollWidth","scrollHeight"],"sources":["/Users/dcastro/node_modules/src/popover/container.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { CSSProperties, useCallback, useLayoutEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { getContainingBlock, nodeContains } from '../internal/utils/dom';\nimport { useResizeObserver } from '../internal/hooks/container-queries';\nimport { BoundingOffset, InternalPosition, Offset, PopoverProps } from './interfaces';\nimport { calculatePosition } from './utils/positions';\nimport styles from './styles.css.js';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\nexport interface PopoverContainerProps {\n  /** References the element the container is positioned against. */\n  trackRef: React.RefObject<Element>;\n  /**\n    Used to update the container position in case track or track position changes:\n    \n    const trackRef = useRef<Element>(null)\n    return (<>\n      <Track style={getPosition(selectedItemId)} ref={trackRef} />\n      <PopoverContainer trackRef={trackRef} trackKey={selectedItemId} .../>\n    </>)\n  */\n  trackKey?: string | number;\n  position: PopoverProps.Position;\n  zIndex?: React.CSSProperties['zIndex'];\n  arrow: (position: InternalPosition | null) => React.ReactNode;\n  children: React.ReactNode;\n  renderWithPortal?: boolean;\n  size: PopoverProps.Size;\n  fixedWidth: boolean;\n  variant?: 'annotation';\n}\n\nconst INITIAL_STYLES: CSSProperties = { position: 'absolute', top: -9999, left: -9999 };\n\nexport default function PopoverContainer({\n  position,\n  trackRef,\n  trackKey,\n  arrow,\n  children,\n  zIndex,\n  renderWithPortal,\n  size,\n  fixedWidth,\n  variant,\n}: PopoverContainerProps) {\n  const bodyRef = useRef<HTMLDivElement | null>(null);\n  const contentRef = useRef<HTMLDivElement | null>(null);\n  const popoverRef = useRef<HTMLDivElement | null>(null);\n  const arrowRef = useRef<HTMLDivElement | null>(null);\n\n  const [popoverStyle, setPopoverStyle] = useState<CSSProperties>(INITIAL_STYLES);\n  const [internalPosition, setInternalPosition] = useState<InternalPosition | null>(null);\n  const isRefresh = useVisualRefresh();\n\n  // Store the handler in a ref so that it can still be replaced from outside of the listener closure.\n  const positionHandlerRef = useRef<() => void>(() => {});\n\n  // Updates the position handler.\n  const updatePositionHandler = useCallback(() => {\n    if (!trackRef.current || !popoverRef.current || !bodyRef.current || !contentRef.current || !arrowRef.current) {\n      return;\n    }\n\n    // Get important elements\n    const popover = popoverRef.current;\n    const body = bodyRef.current;\n    const arrow = arrowRef.current;\n    const document = popover.ownerDocument;\n    const track = trackRef.current;\n\n    // If the popover body isn't being rendered for whatever reason (e.g. \"display: none\" or JSDOM),\n    // or track does not belong to the document - bail on calculating dimensions.\n    if (popover.offsetWidth === 0 || popover.offsetHeight === 0 || !nodeContains(document.body, track)) {\n      return;\n    }\n\n    // Imperatively move body off-screen to give it room to expand.\n    // Not doing this in React because this recalculation should happen\n    // in the span of a single frame without rerendering anything.\n    const prevTop = popover.style.top;\n    const prevLeft = popover.style.left;\n    popover.style.top = '0';\n    popover.style.left = '0';\n    // Imperatively remove body styles that can remain from the previous computation.\n    body.style.maxHeight = '';\n    body.style.overflowX = '';\n    body.style.overflowY = '';\n\n    // Get rects representing key elements\n    // Use getComputedStyle for arrowRect to avoid modifications made by transform\n    const viewportRect = getViewportRect(document.defaultView!);\n    const trackRect = track.getBoundingClientRect();\n    const arrowRect = {\n      width: parseFloat(getComputedStyle(arrow).width),\n      height: parseFloat(getComputedStyle(arrow).height),\n    };\n    const containingBlock = getContainingBlock(popover);\n    const containingBlockRect = containingBlock ? containingBlock.getBoundingClientRect() : viewportRect;\n\n    const bodyBorderWidth = getBorderWidth(body);\n    const contentRect = contentRef.current.getBoundingClientRect();\n    const contentBoundingBox = {\n      width: contentRect.width + 2 * bodyBorderWidth,\n      height: contentRect.height + 2 * bodyBorderWidth,\n    };\n\n    // Calculate the arrow direction and viewport-relative position of the popover.\n    const {\n      scrollable,\n      internalPosition: newInternalPosition,\n      boundingOffset,\n    } = calculatePosition(\n      position,\n      trackRect,\n      arrowRect,\n      contentBoundingBox,\n      containingBlock ? containingBlockRect : getDocumentRect(document),\n      viewportRect,\n      renderWithPortal\n    );\n\n    // Get the position of the popover relative to the offset parent.\n    const popoverOffset = toRelativePosition(boundingOffset, containingBlockRect);\n\n    // Cache the distance between the trigger and the popover (which stays the same as you scroll),\n    // and use that to recalculate the new popover position.\n    const trackRelativeOffset = toRelativePosition(popoverOffset, toRelativePosition(trackRect, containingBlockRect));\n\n    // Bring back the container to its original position to prevent any flashing.\n    popover.style.top = prevTop;\n    popover.style.left = prevLeft;\n\n    // Allow popover body to scroll if can't fit the popover into the container/viewport otherwise.\n    if (scrollable) {\n      body.style.maxHeight = boundingOffset.height + 'px';\n      body.style.overflowX = 'hidden';\n      body.style.overflowY = 'auto';\n    }\n\n    // Position the popover\n    setInternalPosition(newInternalPosition);\n    setPopoverStyle({ top: popoverOffset.top, left: popoverOffset.left });\n\n    positionHandlerRef.current = () => {\n      const newTrackOffset = toRelativePosition(\n        track.getBoundingClientRect(),\n        containingBlock ? containingBlock.getBoundingClientRect() : viewportRect\n      );\n      setPopoverStyle({\n        top: newTrackOffset.top + trackRelativeOffset.top,\n        left: newTrackOffset.left + trackRelativeOffset.left,\n      });\n    };\n  }, [position, trackRef, renderWithPortal]);\n\n  // Recalculate position when properties change.\n  useLayoutEffect(() => {\n    updatePositionHandler();\n  }, [updatePositionHandler, trackKey]);\n\n  // Recalculate position when content size changes.\n  useResizeObserver(contentRef, () => updatePositionHandler());\n\n  // Recalculate position on DOM events.\n  useLayoutEffect(() => {\n    /*\n      This is a heuristic. Some layout changes are caused by user clicks (e.g. toggling the tools panel, submitting a form),\n      and by tracking the click event we can adapt the popover's position to the new layout.\n\n      TODO: extend this to Enter and Spacebar?\n    */\n    const updatePosition = () => requestAnimationFrame(() => updatePositionHandler());\n    const refreshPosition = () => requestAnimationFrame(() => positionHandlerRef.current());\n\n    window.addEventListener('click', updatePosition);\n    window.addEventListener('resize', updatePosition);\n    window.addEventListener('scroll', refreshPosition, true);\n    return () => {\n      window.removeEventListener('click', updatePosition);\n      window.removeEventListener('resize', updatePosition);\n      window.removeEventListener('scroll', refreshPosition, true);\n    };\n  }, [updatePositionHandler]);\n\n  return (\n    <div\n      ref={popoverRef}\n      style={{ ...popoverStyle, zIndex }}\n      className={clsx(styles.container, isRefresh && styles.refresh)}\n    >\n      <div\n        ref={arrowRef}\n        className={clsx(styles[`container-arrow`], styles[`container-arrow-position-${internalPosition}`])}\n        aria-hidden={true}\n      >\n        {arrow(internalPosition)}\n      </div>\n\n      <div\n        ref={bodyRef}\n        className={clsx(styles['container-body'], styles[`container-body-size-${size}`], {\n          [styles['fixed-width']]: fixedWidth,\n          [styles[`container-body-variant-${variant}`]]: variant,\n        })}\n      >\n        <div ref={contentRef}>{children}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction getBorderWidth(element: HTMLElement) {\n  return parseInt(getComputedStyle(element).borderWidth) || 0;\n}\n\n/**\n * Convert a viewport-relative offset to an element-relative offset.\n */\nfunction toRelativePosition(element: Offset, parent: Offset): Offset {\n  return {\n    top: element.top - parent.top,\n    left: element.left - parent.left,\n  };\n}\n\n/**\n * Get a BoundingOffset that represents the visible viewport.\n */\nfunction getViewportRect(window: Window): BoundingOffset {\n  return {\n    top: 0,\n    left: 0,\n    width: window.innerWidth,\n    height: window.innerHeight,\n  };\n}\n\nfunction getDocumentRect(document: Document): BoundingOffset {\n  const { top, left } = document.documentElement.getBoundingClientRect();\n  return {\n    top,\n    left,\n    width: document.documentElement.scrollWidth,\n    height: document.documentElement.scrollHeight,\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}