{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __rest } from \"tslib\";\nimport React, { useRef } from 'react';\nimport { useAutosuggestItems } from '../autosuggest/options-controller';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport { generateUniqueId, useUniqueId } from '../internal/hooks/use-unique-id';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport autosuggestStyles from '../autosuggest/styles.css.js';\nimport styles from './styles.css.js';\nimport { fireCancelableEvent } from '../internal/events/index';\nimport AutosuggestOptionsList from '../autosuggest/options-list';\nimport { useAutosuggestLoadMore } from '../autosuggest/load-more-controller';\nimport AutosuggestInput from '../internal/components/autosuggest-input';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport clsx from 'clsx';\nimport { getFirstFocusable } from '../internal/components/focus-lock/utils';\nvar DROPDOWN_WIDTH_OPTIONS_LIST = 300;\nvar DROPDOWN_WIDTH_CUSTOM_FORM = 200;\nvar PropertyFilterAutosuggest = React.forwardRef(function (props, ref) {\n  var _a;\n  var value = props.value,\n    onChange = props.onChange,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onLoadItems = props.onLoadItems,\n    options = props.options,\n    _b = props.filteringType,\n    filteringType = _b === void 0 ? 'auto' : _b,\n    _c = props.statusType,\n    statusType = _c === void 0 ? 'finished' : _c,\n    placeholder = props.placeholder,\n    disabled = props.disabled,\n    ariaLabel = props.ariaLabel,\n    enteredTextLabel = props.enteredTextLabel,\n    onKeyDown = props.onKeyDown,\n    virtualScroll = props.virtualScroll,\n    expandToViewport = props.expandToViewport,\n    customForm = props.customForm,\n    filterText = props.filterText,\n    onOptionClick = props.onOptionClick,\n    hideEnteredTextOption = props.hideEnteredTextOption,\n    rest = __rest(props, [\"value\", \"onChange\", \"onFocus\", \"onBlur\", \"onLoadItems\", \"options\", \"filteringType\", \"statusType\", \"placeholder\", \"disabled\", \"ariaLabel\", \"enteredTextLabel\", \"onKeyDown\", \"virtualScroll\", \"expandToViewport\", \"customForm\", \"filterText\", \"onOptionClick\", \"hideEnteredTextOption\"]);\n  var highlightText = filterText === undefined ? value : filterText;\n  var customFormRef = useRef(null);\n  var autosuggestInputRef = useRef(null);\n  var mergedRef = useMergeRefs(autosuggestInputRef, ref);\n  var _d = useAutosuggestItems({\n      options: options || [],\n      filterValue: value,\n      filterText: highlightText,\n      filteringType: filteringType,\n      hideEnteredTextLabel: hideEnteredTextOption,\n      onSelectItem: function (option) {\n        var _a;\n        var value = option.value || '';\n        fireNonCancelableEvent(onChange, {\n          value: value\n        });\n        var selectedCancelled = fireCancelableEvent(onOptionClick, option);\n        if (!selectedCancelled) {\n          (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n        } else {\n          autosuggestItemsHandlers.resetHighlightWithKeyboard();\n        }\n      }\n    }),\n    autosuggestItemsState = _d[0],\n    autosuggestItemsHandlers = _d[1];\n  var autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n    options: options,\n    statusType: statusType,\n    onLoadItems: function (detail) {\n      return fireNonCancelableEvent(onLoadItems, detail);\n    }\n  });\n  var handleChange = function (event) {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    fireNonCancelableEvent(onChange, event.detail);\n  };\n  var handleDelayedInput = function (event) {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n  };\n  var handleFocus = function () {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n    fireCancelableEvent(onFocus, null);\n  };\n  var handleBlur = function () {\n    fireCancelableEvent(onBlur, null);\n  };\n  var handleKeyDown = function (e) {\n    fireCancelableEvent(onKeyDown, e.detail);\n  };\n  var handlePressArrowDown = function () {\n    var _a;\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n    if (customFormRef.current) {\n      (_a = getFirstFocusable(customFormRef.current)) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  var handlePressArrowUp = function () {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n  };\n  var handlePressEnter = function () {\n    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n  };\n  var handleCloseDropdown = function () {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n  };\n  var handleRecoveryClick = function () {\n    var _a;\n    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n    (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  var selfControlId = useUniqueId('input');\n  var controlId = (_a = rest.controlId) !== null && _a !== void 0 ? _a : selfControlId;\n  var listId = useUniqueId('list');\n  var highlightedOptionId = autosuggestItemsState.highlightedOption ? generateUniqueId() : undefined;\n  var isEmpty = !value && !autosuggestItemsState.items.length;\n  var dropdownStatus = useDropdownStatus(__assign(__assign({}, props), {\n    isEmpty: isEmpty,\n    onRecoveryClick: handleRecoveryClick\n  }));\n  var content = null;\n  if (customForm) {\n    content = React.createElement(\"div\", {\n      ref: customFormRef\n    }, customForm);\n  } else if (autosuggestItemsState.items.length > 0) {\n    content = React.createElement(AutosuggestOptionsList, {\n      autosuggestItemsState: autosuggestItemsState,\n      autosuggestItemsHandlers: autosuggestItemsHandlers,\n      highlightedOptionId: highlightedOptionId,\n      highlightText: highlightText,\n      listId: listId,\n      controlId: controlId,\n      enteredTextLabel: enteredTextLabel,\n      handleLoadMore: autosuggestLoadMoreHandlers.fireLoadMoreOnScroll,\n      hasDropdownStatus: dropdownStatus.content !== null,\n      virtualScroll: virtualScroll,\n      listBottom: !dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n        content: dropdownStatus.content\n      }) : null\n    });\n  }\n  return React.createElement(AutosuggestInput, __assign({\n    ref: mergedRef\n  }, rest, {\n    className: clsx(autosuggestStyles.root, styles.input),\n    value: value,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown,\n    controlId: controlId,\n    placeholder: placeholder,\n    disabled: disabled,\n    ariaLabel: ariaLabel,\n    expandToViewport: expandToViewport,\n    ariaControls: listId,\n    ariaActivedescendant: highlightedOptionId,\n    dropdownExpanded: autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null || !!customForm,\n    dropdownContentKey: customForm ? 'custom' : 'options',\n    dropdownContent: content,\n    dropdownFooter: dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n      content: dropdownStatus.content,\n      hasItems: autosuggestItemsState.items.length >= 1\n    }) : null,\n    dropdownWidth: customForm ? DROPDOWN_WIDTH_CUSTOM_FORM : DROPDOWN_WIDTH_OPTIONS_LIST,\n    dropdownContentFocusable: !!customForm,\n    onCloseDropdown: handleCloseDropdown,\n    onDelayedInput: handleDelayedInput,\n    onPressArrowDown: handlePressArrowDown,\n    onPressArrowUp: handlePressArrowUp,\n    onPressEnter: handlePressEnter\n  }));\n});\nexport default PropertyFilterAutosuggest;","map":{"version":3,"mappings":"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","names":["React","useRef","useAutosuggestItems","useDropdownStatus","DropdownFooter","generateUniqueId","useUniqueId","fireNonCancelableEvent","autosuggestStyles","styles","fireCancelableEvent","AutosuggestOptionsList","useAutosuggestLoadMore","AutosuggestInput","useMergeRefs","clsx","getFirstFocusable","DROPDOWN_WIDTH_OPTIONS_LIST","DROPDOWN_WIDTH_CUSTOM_FORM","PropertyFilterAutosuggest","forwardRef","props","ref","onChange","onFocus","onBlur","onLoadItems","options","_b","filteringType","_c","statusType","placeholder","disabled","ariaLabel","enteredTextLabel","onKeyDown","virtualScroll","expandToViewport","customForm","filterText","onOptionClick","hideEnteredTextOption","rest","highlightText","undefined","value","customFormRef","autosuggestInputRef","mergedRef","filterValue","hideEnteredTextLabel","onSelectItem","option","selectedCancelled","current","close","autosuggestItemsHandlers","resetHighlightWithKeyboard","autosuggestItemsState","autosuggestLoadMoreHandlers","detail","handleChange","event","handleDelayedInput","fireLoadMoreOnInputChange","handleFocus","fireLoadMoreOnInputFocus","handleBlur","handleKeyDown","e","handlePressArrowDown","moveHighlightWithKeyboard","focus","handlePressArrowUp","handlePressEnter","selectHighlightedOptionWithKeyboard","handleCloseDropdown","handleRecoveryClick","fireLoadMoreOnRecoveryClick","selfControlId","controlId","listId","highlightedOptionId","highlightedOption","isEmpty","items","length","dropdownStatus","onRecoveryClick","content","handleLoadMore","fireLoadMoreOnScroll","hasDropdownStatus","listBottom","isSticky","className","root","input","ariaControls","ariaActivedescendant","dropdownExpanded","dropdownContentKey","dropdownContent","dropdownFooter","hasItems","dropdownWidth","dropdownContentFocusable","onCloseDropdown","onDelayedInput","onPressArrowDown","onPressArrowUp","onPressEnter"],"sources":["/Users/dcastro/node_modules/src/property-filter/property-filter-autosuggest.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { Ref, useRef } from 'react';\n\nimport { useAutosuggestItems } from '../autosuggest/options-controller';\nimport { AutosuggestItem, AutosuggestProps } from '../autosuggest/interfaces';\n\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport DropdownFooter from '../internal/components/dropdown-footer';\n\nimport { generateUniqueId, useUniqueId } from '../internal/hooks/use-unique-id';\nimport {\n  fireNonCancelableEvent,\n  CancelableEventHandler,\n  NonCancelableCustomEvent,\n  BaseKeyDetail,\n} from '../internal/events';\nimport { BaseChangeDetail } from '../input/interfaces';\nimport autosuggestStyles from '../autosuggest/styles.css.js';\nimport styles from './styles.css.js';\nimport { fireCancelableEvent } from '../internal/events/index';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport AutosuggestOptionsList from '../autosuggest/options-list';\nimport { useAutosuggestLoadMore } from '../autosuggest/load-more-controller';\nimport { OptionsLoadItemsDetail } from '../internal/components/dropdown/interfaces';\nimport AutosuggestInput, { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport clsx from 'clsx';\nimport { getFirstFocusable } from '../internal/components/focus-lock/utils';\n\nconst DROPDOWN_WIDTH_OPTIONS_LIST = 300;\nconst DROPDOWN_WIDTH_CUSTOM_FORM = 200;\n\nexport interface PropertyFilterAutosuggestProps extends AutosuggestProps, InternalBaseComponentProps {\n  customForm?: React.ReactNode;\n  filterText?: string;\n  onOptionClick?: CancelableEventHandler<AutosuggestProps.Option>;\n  hideEnteredTextOption?: boolean;\n}\n\nconst PropertyFilterAutosuggest = React.forwardRef(\n  (props: PropertyFilterAutosuggestProps, ref: Ref<AutosuggestInputRef>) => {\n    const {\n      value,\n      onChange,\n      onFocus,\n      onBlur,\n      onLoadItems,\n      options,\n      filteringType = 'auto',\n      statusType = 'finished',\n      placeholder,\n      disabled,\n      ariaLabel,\n      enteredTextLabel,\n      onKeyDown,\n      virtualScroll,\n      expandToViewport,\n      customForm,\n      filterText,\n      onOptionClick,\n      hideEnteredTextOption,\n      ...rest\n    } = props;\n    const highlightText = filterText === undefined ? value : filterText;\n\n    const customFormRef = useRef<HTMLDivElement>(null);\n    const autosuggestInputRef = useRef<AutosuggestInputRef>(null);\n    const mergedRef = useMergeRefs(autosuggestInputRef, ref);\n\n    const [autosuggestItemsState, autosuggestItemsHandlers] = useAutosuggestItems({\n      options: options || [],\n      filterValue: value,\n      filterText: highlightText,\n      filteringType,\n      hideEnteredTextLabel: hideEnteredTextOption,\n      onSelectItem: (option: AutosuggestItem) => {\n        const value = option.value || '';\n        fireNonCancelableEvent(onChange, { value });\n        const selectedCancelled = fireCancelableEvent(onOptionClick, option);\n        if (!selectedCancelled) {\n          autosuggestInputRef.current?.close();\n        } else {\n          autosuggestItemsHandlers.resetHighlightWithKeyboard();\n        }\n      },\n    });\n\n    const autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n      options,\n      statusType,\n      onLoadItems: (detail: OptionsLoadItemsDetail) => fireNonCancelableEvent(onLoadItems, detail),\n    });\n\n    const handleChange = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n      autosuggestItemsHandlers.resetHighlightWithKeyboard();\n      fireNonCancelableEvent(onChange, event.detail);\n    };\n\n    const handleDelayedInput = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n      autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n    };\n\n    const handleFocus = () => {\n      autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n      fireCancelableEvent(onFocus, null);\n    };\n\n    const handleBlur = () => {\n      fireCancelableEvent(onBlur, null);\n    };\n\n    const handleKeyDown = (e: CustomEvent<BaseKeyDetail>) => {\n      fireCancelableEvent(onKeyDown, e.detail);\n    };\n\n    const handlePressArrowDown = () => {\n      autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n      if (customFormRef.current) {\n        getFirstFocusable(customFormRef.current)?.focus();\n      }\n    };\n\n    const handlePressArrowUp = () => {\n      autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n    };\n\n    const handlePressEnter = () => {\n      return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n    };\n\n    const handleCloseDropdown = () => {\n      autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    };\n\n    const handleRecoveryClick = () => {\n      autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n      autosuggestInputRef.current?.focus();\n    };\n\n    const selfControlId = useUniqueId('input');\n    const controlId = rest.controlId ?? selfControlId;\n    const listId = useUniqueId('list');\n    const highlightedOptionId = autosuggestItemsState.highlightedOption ? generateUniqueId() : undefined;\n\n    const isEmpty = !value && !autosuggestItemsState.items.length;\n    const dropdownStatus = useDropdownStatus({ ...props, isEmpty, onRecoveryClick: handleRecoveryClick });\n\n    let content = null;\n    if (customForm) {\n      content = <div ref={customFormRef}>{customForm}</div>;\n    } else if (autosuggestItemsState.items.length > 0) {\n      content = (\n        <AutosuggestOptionsList\n          autosuggestItemsState={autosuggestItemsState}\n          autosuggestItemsHandlers={autosuggestItemsHandlers}\n          highlightedOptionId={highlightedOptionId}\n          highlightText={highlightText}\n          listId={listId}\n          controlId={controlId}\n          enteredTextLabel={enteredTextLabel}\n          handleLoadMore={autosuggestLoadMoreHandlers.fireLoadMoreOnScroll}\n          hasDropdownStatus={dropdownStatus.content !== null}\n          virtualScroll={virtualScroll}\n          listBottom={!dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} /> : null}\n        />\n      );\n    }\n\n    return (\n      <AutosuggestInput\n        ref={mergedRef}\n        {...rest}\n        className={clsx(autosuggestStyles.root, styles.input)}\n        value={value}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        controlId={controlId}\n        placeholder={placeholder}\n        disabled={disabled}\n        ariaLabel={ariaLabel}\n        expandToViewport={expandToViewport}\n        ariaControls={listId}\n        ariaActivedescendant={highlightedOptionId}\n        dropdownExpanded={autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null || !!customForm}\n        dropdownContentKey={customForm ? 'custom' : 'options'}\n        dropdownContent={content}\n        dropdownFooter={\n          dropdownStatus.isSticky ? (\n            <DropdownFooter content={dropdownStatus.content} hasItems={autosuggestItemsState.items.length >= 1} />\n          ) : null\n        }\n        dropdownWidth={customForm ? DROPDOWN_WIDTH_CUSTOM_FORM : DROPDOWN_WIDTH_OPTIONS_LIST}\n        dropdownContentFocusable={!!customForm}\n        onCloseDropdown={handleCloseDropdown}\n        onDelayedInput={handleDelayedInput}\n        onPressArrowDown={handlePressArrowDown}\n        onPressArrowUp={handlePressArrowUp}\n        onPressEnter={handlePressEnter}\n      />\n    );\n  }\n);\n\nexport default PropertyFilterAutosuggest;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}