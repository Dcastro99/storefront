{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport Icon from '../../icon/internal';\nimport styles from './styles.css.js';\nfunction TriggerButton(_a, ref) {\n  var _b;\n  var ariaLabel = _a.ariaLabel,\n    iconName = _a.iconName,\n    onClick = _a.onClick,\n    _c = _a.selected,\n    selected = _c === void 0 ? false : _c,\n    className = _a.className;\n  var focusVisible = useFocusVisible();\n  return React.createElement(\"button\", __assign({\n    \"aria-label\": ariaLabel,\n    \"aria-expanded\": false,\n    \"aria-haspopup\": true,\n    className: clsx(styles.trigger, (_b = {}, _b[styles.selected] = selected, _b), className),\n    onClick: onClick,\n    type: \"button\",\n    ref: ref\n  }, focusVisible), React.createElement(Icon, {\n    name: iconName\n  }));\n}\nexport default React.forwardRef(TriggerButton);","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,IAAI,MAAM,qBAAqB;AACtC,OAAOC,MAAM,MAAM,iBAAiB;AAYpC,SAASC,aAAa,CACpBC,EAAiF,EACjFC,GAA+B;;MAD7BC,SAAS;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,gBAAgB;IAAhBC,QAAQ,mBAAG,KAAK;IAAEC,SAAS;EAG3D,IAAMC,YAAY,GAAGZ,eAAe,EAAE;EAEtC,OACEF;IAAA,cACcQ,SAAS;IAAA,iBACN,KAAK;IAAA,iBACL,IAAI;IACnBK,SAAS,EAAEZ,IAAI,CACbG,MAAM,CAACW,OAAO,YAEZC,GAACZ,MAAM,CAACQ,QAAQ,IAAGA,QAAQ,OAE7BC,SAAS,CACV;IACDH,OAAO,EAAEA,OAAO;IAChBO,IAAI,EAAC,QAAQ;IACbV,GAAG,EAAEA;EAAmC,GACpCO,YAAY,GAEhBd,oBAACG,IAAI;IAACe,IAAI,EAAET;EAAQ,EAAI,CACjB;AAEb;AAEA,eAAeT,KAAK,CAACmB,UAAU,CAACd,aAAa,CAAC","names":["React","clsx","useFocusVisible","Icon","styles","TriggerButton","_a","ref","ariaLabel","iconName","onClick","_c","selected","className","focusVisible","trigger","_b","type","name","forwardRef"],"sources":["/Users/dcastro/node_modules/src/app-layout/visual-refresh/trigger-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport Icon from '../../icon/internal';\nimport styles from './styles.css.js';\nimport { ButtonProps } from '../../button/interfaces';\nimport { IconProps } from '../../icon/interfaces';\n\ninterface TriggerButtonProps {\n  ariaLabel?: string;\n  iconName: IconProps.Name;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  selected?: boolean;\n  className?: string;\n}\n\nfunction TriggerButton(\n  { ariaLabel, iconName, onClick, selected = false, className }: TriggerButtonProps,\n  ref: React.Ref<ButtonProps.Ref>\n) {\n  const focusVisible = useFocusVisible();\n\n  return (\n    <button\n      aria-label={ariaLabel}\n      aria-expanded={false}\n      aria-haspopup={true}\n      className={clsx(\n        styles.trigger,\n        {\n          [styles.selected]: selected,\n        },\n        className\n      )}\n      onClick={onClick}\n      type=\"button\"\n      ref={ref as React.Ref<HTMLButtonElement>}\n      {...focusVisible}\n    >\n      <Icon name={iconName} />\n    </button>\n  );\n}\n\nexport default React.forwardRef(TriggerButton);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}