{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalPopover from './internal';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nexport default function Popover(_a) {\n  var _b = _a.position,\n    position = _b === void 0 ? 'right' : _b,\n    _c = _a.size,\n    size = _c === void 0 ? 'medium' : _c,\n    _d = _a.fixedWidth,\n    fixedWidth = _d === void 0 ? false : _d,\n    _e = _a.triggerType,\n    triggerType = _e === void 0 ? 'text' : _e,\n    _f = _a.dismissButton,\n    dismissButton = _f === void 0 ? true : _f,\n    _g = _a.renderWithPortal,\n    renderWithPortal = _g === void 0 ? false : _g,\n    rest = __rest(_a, [\"position\", \"size\", \"fixedWidth\", \"triggerType\", \"dismissButton\", \"renderWithPortal\"]);\n  var baseComponentProps = useBaseComponent('Popover');\n  var externalProps = getExternalProps(rest);\n  return React.createElement(InternalPopover, __assign({\n    position: position,\n    size: size,\n    fixedWidth: fixedWidth,\n    triggerType: triggerType,\n    dismissButton: dismissButton,\n    renderWithPortal: renderWithPortal\n  }, externalProps, baseComponentProps));\n}\napplyDisplayName(Popover, 'Popover');","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,YAAY;AACxC,SAASC,gBAAgB,QAAQ,kCAAkC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,gBAAgB,MAAM,sCAAsC;AAKnE,eAAc,SAAUC,OAAO,CAACC,EAQjB;EAPb,oBAAkB;IAAlBC,QAAQ,mBAAG,OAAO;IAClBC,YAAe;IAAfC,IAAI,mBAAG,QAAQ;IACfC,kBAAkB;IAAlBC,UAAU,mBAAG,KAAK;IAClBC,mBAAoB;IAApBC,WAAW,mBAAG,MAAM;IACpBC,qBAAoB;IAApBC,aAAa,mBAAG,IAAI;IACpBC,wBAAwB;IAAxBC,gBAAgB,mBAAG,KAAK;IACrBC,IAAI,cAPuB,sFAQ/B,CADQ;EAEP,IAAMC,kBAAkB,GAAGf,gBAAgB,CAAC,SAAS,CAAC;EACtD,IAAMgB,aAAa,GAAGlB,gBAAgB,CAACgB,IAAI,CAAC;EAC5C,OACElB,oBAACC,eAAe;IACdM,QAAQ,EAAEA,QAAQ;IAClBE,IAAI,EAAEA,IAAI;IACVE,UAAU,EAAEA,UAAU;IACtBE,WAAW,EAAEA,WAAW;IACxBE,aAAa,EAAEA,aAAa;IAC5BE,gBAAgB,EAAEA;EAAgB,GAC9BG,aAAa,EACbD,kBAAkB,EACtB;AAEN;AAEAhB,gBAAgB,CAACE,OAAO,EAAE,SAAS,CAAC","names":["React","InternalPopover","getExternalProps","applyDisplayName","useBaseComponent","Popover","_a","position","_c","size","_d","fixedWidth","_e","triggerType","_f","dismissButton","_g","renderWithPortal","rest","baseComponentProps","externalProps"],"sources":["/Users/dcastro/node_modules/src/popover/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalPopover from './internal';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { PopoverProps } from './interfaces';\n\nexport { PopoverProps };\n\nexport default function Popover({\n  position = 'right',\n  size = 'medium',\n  fixedWidth = false,\n  triggerType = 'text',\n  dismissButton = true,\n  renderWithPortal = false,\n  ...rest\n}: PopoverProps) {\n  const baseComponentProps = useBaseComponent('Popover');\n  const externalProps = getExternalProps(rest);\n  return (\n    <InternalPopover\n      position={position}\n      size={size}\n      fixedWidth={fixedWidth}\n      triggerType={triggerType}\n      dismissButton={dismissButton}\n      renderWithPortal={renderWithPortal}\n      {...externalProps}\n      {...baseComponentProps}\n    />\n  );\n}\n\napplyDisplayName(Popover, 'Popover');\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}