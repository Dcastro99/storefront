{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getColumnAriaLabel, compareDates } from './table-utils';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\nexport function VersionsTable(_a) {\n  var forwardFocusRef = _a.forwardFocusRef,\n    pathSegments = _a.pathSegments,\n    i18nStrings = _a.i18nStrings,\n    isVisualRefresh = _a.isVisualRefresh,\n    isItemDisabled = _a.isItemDisabled,\n    fetchData = _a.fetchData,\n    visibleColumns = _a.visibleColumns,\n    onSelect = _a.onSelect;\n  return React.createElement(BasicS3Table, {\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"VersionId\",\n    fetchData: function () {\n      var bucketName = pathSegments[0],\n        rest = pathSegments.slice(1);\n      return fetchData(bucketName, joinObjectPath(rest));\n    },\n    i18nStrings: __assign(__assign({}, getSharedI18Strings(i18nStrings)), {\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersions,\n      filteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersions),\n      filteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsSearchPlaceholder,\n      loadingText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsLoading,\n      emptyText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsNoItems,\n      selectionLabels: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsVersionsSelection\n    }),\n    isVisualRefresh: isVisualRefresh,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled,\n    columnDefinitions: [{\n      id: 'ID',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionID,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionID),\n      sortingField: 'VersionId',\n      cell: function (item) {\n        return item.VersionId;\n      },\n      minWidth: '250px'\n    }, {\n      id: 'LastModified',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionLastModified,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionLastModified),\n      sortingComparator: function (a, b) {\n        return compareDates(a.LastModified, b.LastModified);\n      },\n      cell: function (item) {\n        return formatDefault(item.LastModified);\n      }\n    }, {\n      id: 'Size',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionSize,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionSize),\n      sortingField: 'Size',\n      cell: function (item) {\n        return formatSize(item.Size);\n      }\n    }],\n    onSelect: function (item) {\n      var _a;\n      return onSelect((_a = item === null || item === void 0 ? void 0 : item.VersionId) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["React","getColumnAriaLabel","compareDates","formatSize","formatDefault","BasicS3Table","getSharedI18Strings","joinObjectPath","VersionsTable","_a","forwardFocusRef","pathSegments","i18nStrings","isVisualRefresh","isItemDisabled","fetchData","visibleColumns","onSelect","trackBy","rest","bucketName","header","selectionVersions","filteringAriaLabel","labelFiltering","filteringPlaceholder","selectionVersionsSearchPlaceholder","loadingText","selectionVersionsLoading","emptyText","selectionVersionsNoItems","selectionLabels","labelsVersionsSelection","columnDefinitions","id","columnVersionID","ariaLabel","sortingField","cell","VersionId","minWidth","columnVersionLastModified","sortingComparator","a","b","LastModified","item","columnVersionSize","Size"],"sources":["/Users/dcastro/node_modules/src/s3-resource-selector/s3-modal/versions-table.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { getColumnAriaLabel, compareDates } from './table-utils';\nimport { TableProps } from '../../table/interfaces';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\n\ninterface VersionsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  pathSegments: ReadonlyArray<string>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Version> | undefined;\n  fetchData: S3ResourceSelectorProps['fetchVersions'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onSelect: (versionId: string) => void;\n}\n\nexport function VersionsTable({\n  forwardFocusRef,\n  pathSegments,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  fetchData,\n  visibleColumns,\n  onSelect,\n}: VersionsTableProps) {\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Version>\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"VersionId\"\n      fetchData={() => {\n        const [bucketName, ...rest] = pathSegments;\n        return fetchData(bucketName, joinObjectPath(rest));\n      }}\n      i18nStrings={{\n        ...getSharedI18Strings(i18nStrings),\n        header: i18nStrings?.selectionVersions,\n        filteringAriaLabel: i18nStrings?.labelFiltering(i18nStrings?.selectionVersions),\n        filteringPlaceholder: i18nStrings?.selectionVersionsSearchPlaceholder,\n        loadingText: i18nStrings?.selectionVersionsLoading,\n        emptyText: i18nStrings?.selectionVersionsNoItems,\n        selectionLabels: i18nStrings?.labelsVersionsSelection,\n      }}\n      isVisualRefresh={isVisualRefresh}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled}\n      columnDefinitions={[\n        {\n          id: 'ID',\n          header: i18nStrings?.columnVersionID,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnVersionID),\n          sortingField: 'VersionId',\n          cell: item => item.VersionId,\n          minWidth: '250px',\n        },\n        {\n          id: 'LastModified',\n          header: i18nStrings?.columnVersionLastModified,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnVersionLastModified),\n          sortingComparator: (a, b) => compareDates(a.LastModified, b.LastModified),\n          cell: item => formatDefault(item.LastModified),\n        },\n        {\n          id: 'Size',\n          header: i18nStrings?.columnVersionSize,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnVersionSize),\n          sortingField: 'Size',\n          cell: item => formatSize(item.Size),\n        },\n      ]}\n      onSelect={item => onSelect(item?.VersionId ?? '')}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}