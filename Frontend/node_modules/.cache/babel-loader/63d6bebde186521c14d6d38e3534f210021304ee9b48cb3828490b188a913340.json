{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { warnOnce } from '../internal/logging';\nimport styles from './styles.css.js';\nimport icons from './icons';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nfunction iconSizeMap(height) {\n  if (height === null) {\n    // This is the best guess for the contextual height while server rendering.\n    return 'normal';\n  }\n  if (height >= 50) {\n    return 'large';\n  } else if (height >= 36) {\n    return 'big';\n  } else if (height >= 24) {\n    return 'medium';\n  } else if (height <= 16) {\n    return 'small';\n  } else {\n    return 'normal';\n  }\n}\nvar InternalIcon = function (_a) {\n  var name = _a.name,\n    _b = _a.size,\n    size = _b === void 0 ? 'normal' : _b,\n    _c = _a.variant,\n    variant = _c === void 0 ? 'normal' : _c,\n    url = _a.url,\n    alt = _a.alt,\n    svg = _a.svg,\n    badge = _a.badge,\n    _d = _a.__internalRootRef,\n    __internalRootRef = _d === void 0 ? null : _d,\n    props = __rest(_a, [\"name\", \"size\", \"variant\", \"url\", \"alt\", \"svg\", \"badge\", \"__internalRootRef\"]);\n  var iconRef = useRef(null);\n  // To ensure a re-render is triggered on visual mode changes\n  useVisualRefresh();\n  var _e = useState(null),\n    parentHeight = _e[0],\n    setParentHeight = _e[1];\n  var contextualSize = size === 'inherit';\n  var iconSize = contextualSize ? iconSizeMap(parentHeight) : size;\n  var inlineStyles = contextualSize && parentHeight !== null ? {\n    height: \"\".concat(parentHeight, \"px\")\n  } : {};\n  var baseProps = getBaseProps(props);\n  baseProps.className = clsx(baseProps.className, styles.icon, contextualSize && styles['icon-flex-height'], badge && styles.badge, !contextualSize && styles[\"size-\".concat(iconSize, \"-mapped-height\")], styles[\"size-\".concat(iconSize)], styles[\"variant-\".concat(variant)]);\n  // Possible infinite loop is not a concern here because line\n  // height should not change without an external state update.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(function () {\n    if (!contextualSize || !iconRef.current) {\n      return;\n    }\n    var lineHeight = getComputedStyle(iconRef.current).lineHeight;\n    var newParentHeight = parseInt(lineHeight, 10);\n    setParentHeight(newParentHeight);\n  });\n  var mergedRef = useMergeRefs(iconRef, __internalRootRef);\n  if (svg) {\n    if (url) {\n      warnOnce('Icon', 'You have specified both `url` and `svg`. `svg` will take precedence and `url` will be ignored.');\n    }\n    return React.createElement(\"span\", __assign({}, baseProps, {\n      ref: mergedRef,\n      \"aria-hidden\": \"true\",\n      style: inlineStyles\n    }), svg);\n  }\n  if (url) {\n    return React.createElement(\"span\", __assign({}, baseProps, {\n      ref: mergedRef,\n      style: inlineStyles\n    }), React.createElement(\"img\", {\n      src: url,\n      alt: alt\n    }));\n  }\n  var validIcon = name && Object.prototype.hasOwnProperty.call(icons, name);\n  return React.createElement(\"span\", __assign({}, baseProps, {\n    // dangerouslySetInnerHTML is safe here, as we control the content coming from `icons`\n    // eslint-disable-next-line react/no-danger\n    dangerouslySetInnerHTML: validIcon ? {\n      __html: icons[name]\n    } : undefined,\n    ref: mergedRef,\n    style: inlineStyles\n  }));\n};\nexport default InternalIcon;","map":{"version":3,"mappings":"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","names":["clsx","React","useLayoutEffect","useRef","useState","getBaseProps","warnOnce","styles","icons","useMergeRefs","useVisualRefresh","iconSizeMap","height","InternalIcon","_a","_b","size","_c","variant","url","alt","svg","badge","_d","__internalRootRef","props","iconRef","parentHeight","setParentHeight","contextualSize","iconSize","inlineStyles","baseProps","className","icon","current","getComputedStyle","newParentHeight","parseInt","lineHeight","mergedRef","ref","style","src","validIcon","name","Object","prototype","hasOwnProperty","call","dangerouslySetInnerHTML","__html","undefined"],"sources":["/Users/dcastro/node_modules/src/icon/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { warnOnce } from '../internal/logging';\nimport styles from './styles.css.js';\nimport icons from './icons';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { IconProps } from './interfaces';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\ntype InternalIconProps = IconProps &\n  InternalBaseComponentProps & {\n    badge?: boolean;\n  };\n\nfunction iconSizeMap(height: number | null) {\n  if (height === null) {\n    // This is the best guess for the contextual height while server rendering.\n    return 'normal';\n  }\n\n  if (height >= 50) {\n    return 'large';\n  } else if (height >= 36) {\n    return 'big';\n  } else if (height >= 24) {\n    return 'medium';\n  } else if (height <= 16) {\n    return 'small';\n  } else {\n    return 'normal';\n  }\n}\n\nconst InternalIcon = ({\n  name,\n  size = 'normal',\n  variant = 'normal',\n  url,\n  alt,\n  svg,\n  badge,\n  __internalRootRef = null,\n  ...props\n}: InternalIconProps) => {\n  const iconRef = useRef<HTMLElement>(null);\n  // To ensure a re-render is triggered on visual mode changes\n  useVisualRefresh();\n  const [parentHeight, setParentHeight] = useState<number | null>(null);\n  const contextualSize = size === 'inherit';\n  const iconSize = contextualSize ? iconSizeMap(parentHeight) : size;\n  const inlineStyles = contextualSize && parentHeight !== null ? { height: `${parentHeight}px` } : {};\n  const baseProps = getBaseProps(props);\n\n  baseProps.className = clsx(\n    baseProps.className,\n    styles.icon,\n    contextualSize && styles['icon-flex-height'],\n    badge && styles.badge,\n    !contextualSize && styles[`size-${iconSize}-mapped-height`],\n    styles[`size-${iconSize}`],\n    styles[`variant-${variant}`]\n  );\n\n  // Possible infinite loop is not a concern here because line\n  // height should not change without an external state update.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(() => {\n    if (!contextualSize || !iconRef.current) {\n      return;\n    }\n    const { lineHeight } = getComputedStyle(iconRef.current);\n    const newParentHeight = parseInt(lineHeight, 10);\n    setParentHeight(newParentHeight);\n  });\n\n  const mergedRef = useMergeRefs(iconRef, __internalRootRef);\n\n  if (svg) {\n    if (url) {\n      warnOnce(\n        'Icon',\n        'You have specified both `url` and `svg`. `svg` will take precedence and `url` will be ignored.'\n      );\n    }\n    return (\n      <span {...baseProps} ref={mergedRef} aria-hidden=\"true\" style={inlineStyles}>\n        {svg}\n      </span>\n    );\n  }\n\n  if (url) {\n    return (\n      <span {...baseProps} ref={mergedRef} style={inlineStyles}>\n        <img src={url} alt={alt} />\n      </span>\n    );\n  }\n\n  const validIcon = name && Object.prototype.hasOwnProperty.call(icons, name);\n\n  return (\n    <span\n      {...baseProps}\n      // dangerouslySetInnerHTML is safe here, as we control the content coming from `icons`\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={validIcon ? { __html: icons[name] } : undefined}\n      ref={mergedRef}\n      style={inlineStyles}\n    />\n  );\n};\n\nexport { InternalIconProps };\nexport default InternalIcon;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}