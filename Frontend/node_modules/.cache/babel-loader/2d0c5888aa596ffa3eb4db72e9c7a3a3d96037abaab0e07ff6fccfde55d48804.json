{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __rest, __spreadArray } from \"tslib\";\nimport { useMemo, useState } from 'react';\nimport { filterOptions } from './utils/utils';\nimport { generateTestIndexes } from '../internal/components/options-list/utils/test-indexes';\nimport { useHighlightedOption } from '../internal/components/options-list/utils/use-highlight-option';\nvar isHighlightable = function (option) {\n  return !!option && option.type !== 'parent';\n};\nvar parentMap = new WeakMap();\nexport var getParentGroup = function (item) {\n  return parentMap.get(item);\n};\nvar isInteractive = function (option) {\n  return !!option && !option.disabled && option.type !== 'parent';\n};\nexport var useAutosuggestItems = function (_a) {\n  var options = _a.options,\n    filterValue = _a.filterValue,\n    filterText = _a.filterText,\n    filteringType = _a.filteringType,\n    hideEnteredTextLabel = _a.hideEnteredTextLabel,\n    onSelectItem = _a.onSelectItem;\n  var _b = useState(false),\n    showAll = _b[0],\n    setShowAll = _b[1];\n  var items = useMemo(function () {\n    return createItems(options);\n  }, [options]);\n  var filteredItems = useMemo(function () {\n    var filteredItems = filteringType === 'auto' && !showAll ? filterOptions(items, filterText) : __spreadArray([], items, true);\n    if (filterValue && !hideEnteredTextLabel) {\n      filteredItems.unshift({\n        value: filterValue,\n        type: 'use-entered',\n        option: {\n          value: filterValue\n        }\n      });\n    }\n    generateTestIndexes(filteredItems, getParentGroup);\n    return filteredItems;\n  }, [items, filterValue, filterText, filteringType, showAll, hideEnteredTextLabel]);\n  var _c = useHighlightedOption({\n      options: filteredItems,\n      isHighlightable: isHighlightable\n    }),\n    highlightedOptionState = _c[0],\n    highlightedOptionHandlers = _c[1];\n  var selectHighlightedOptionWithKeyboard = function () {\n    if (highlightedOptionState.highlightedOption && isInteractive(highlightedOptionState.highlightedOption)) {\n      onSelectItem(highlightedOptionState.highlightedOption);\n      return true;\n    }\n    return false;\n  };\n  var highlightVisibleOptionWithMouse = function (index) {\n    if (filteredItems[index] && isHighlightable(filteredItems[index])) {\n      highlightedOptionHandlers.setHighlightedIndexWithMouse(index);\n    }\n  };\n  var selectVisibleOptionWithMouse = function (index) {\n    if (filteredItems[index] && isInteractive(filteredItems[index])) {\n      onSelectItem(filteredItems[index]);\n    }\n  };\n  return [__assign(__assign({}, highlightedOptionState), {\n    items: filteredItems,\n    showAll: showAll\n  }), __assign(__assign({}, highlightedOptionHandlers), {\n    setShowAll: setShowAll,\n    selectHighlightedOptionWithKeyboard: selectHighlightedOptionWithKeyboard,\n    highlightVisibleOptionWithMouse: highlightVisibleOptionWithMouse,\n    selectVisibleOptionWithMouse: selectVisibleOptionWithMouse\n  })];\n};\nfunction createItems(options) {\n  var items = [];\n  for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {\n    var option = options_1[_i];\n    if (isGroup(option)) {\n      for (var _a = 0, _b = flattenGroup(option); _a < _b.length; _a++) {\n        var item = _b[_a];\n        items.push(item);\n      }\n    } else {\n      items.push(__assign(__assign({}, option), {\n        option: option\n      }));\n    }\n  }\n  return items;\n}\nfunction isGroup(optionOrGroup) {\n  return 'options' in optionOrGroup;\n}\nfunction flattenGroup(group) {\n  var options = group.options,\n    rest = __rest(group, [\"options\"]);\n  var hasOnlyDisabledChildren = true;\n  var items = [__assign(__assign({}, rest), {\n    type: 'parent',\n    option: group\n  })];\n  for (var _i = 0, options_2 = options; _i < options_2.length; _i++) {\n    var option = options_2[_i];\n    if (!option.disabled) {\n      hasOnlyDisabledChildren = false;\n    }\n    var childOption = __assign(__assign({}, option), {\n      type: 'child',\n      disabled: option.disabled || rest.disabled,\n      option: option\n    });\n    items.push(childOption);\n    // TODO: Refactor parentMap and remove this side effect\n    parentMap.set(childOption, __assign(__assign({}, group), {\n      option: group\n    }));\n  }\n  items[0].disabled = items[0].disabled || hasOnlyDisabledChildren;\n  return items;\n}","map":{"version":3,"mappings":"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","names":["useMemo","useState","filterOptions","generateTestIndexes","useHighlightedOption","isHighlightable","option","type","parentMap","WeakMap","getParentGroup","item","get","isInteractive","disabled","useAutosuggestItems","_a","options","filterValue","filterText","filteringType","hideEnteredTextLabel","onSelectItem","showAll","setShowAll","items","filteredItems","__spreadArray","unshift","value","highlightedOptionState","highlightedOptionHandlers","selectHighlightedOptionWithKeyboard","highlightedOption","highlightVisibleOptionWithMouse","index","setHighlightedIndexWithMouse","selectVisibleOptionWithMouse","createItems","options_1","_i","isGroup","_b","push","optionOrGroup","flattenGroup","group","rest","hasOnlyDisabledChildren","options_2","childOption","set"],"sources":["/Users/dcastro/node_modules/src/autosuggest/options-controller.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useMemo, useState } from 'react';\nimport { filterOptions } from './utils/utils';\nimport { generateTestIndexes } from '../internal/components/options-list/utils/test-indexes';\nimport { AutosuggestItem, AutosuggestProps } from './interfaces';\nimport {\n  HighlightedOptionHandlers,\n  HighlightedOptionState,\n  useHighlightedOption,\n} from '../internal/components/options-list/utils/use-highlight-option';\n\ntype Options = AutosuggestProps.Options;\n\nexport interface UseAutosuggestItemsProps {\n  options: Options;\n  filterValue: string;\n  filterText: string;\n  filteringType: AutosuggestProps.FilteringType;\n  hideEnteredTextLabel?: boolean;\n  onSelectItem: (option: AutosuggestItem) => void;\n}\n\nexport interface AutosuggestItemsState extends HighlightedOptionState<AutosuggestItem> {\n  items: readonly AutosuggestItem[];\n  showAll: boolean;\n}\n\nexport interface AutosuggestItemsHandlers extends HighlightedOptionHandlers<AutosuggestItem> {\n  setShowAll(value: boolean): void;\n  selectHighlightedOptionWithKeyboard(): boolean;\n  highlightVisibleOptionWithMouse(index: number): void;\n  selectVisibleOptionWithMouse(index: number): void;\n}\n\nconst isHighlightable = (option?: AutosuggestItem) => {\n  return !!option && option.type !== 'parent';\n};\n\nconst parentMap = new WeakMap<AutosuggestItem, AutosuggestItem>();\nexport const getParentGroup = (item: AutosuggestItem) => parentMap.get(item);\n\nconst isInteractive = (option?: AutosuggestItem) => !!option && !option.disabled && option.type !== 'parent';\n\nexport const useAutosuggestItems = ({\n  options,\n  filterValue,\n  filterText,\n  filteringType,\n  hideEnteredTextLabel,\n  onSelectItem,\n}: UseAutosuggestItemsProps): [AutosuggestItemsState, AutosuggestItemsHandlers] => {\n  const [showAll, setShowAll] = useState(false);\n\n  const items = useMemo(() => createItems(options), [options]);\n\n  const filteredItems = useMemo(() => {\n    const filteredItems = filteringType === 'auto' && !showAll ? filterOptions(items, filterText) : [...items];\n    if (filterValue && !hideEnteredTextLabel) {\n      filteredItems.unshift({ value: filterValue, type: 'use-entered', option: { value: filterValue } });\n    }\n    generateTestIndexes(filteredItems, getParentGroup);\n    return filteredItems;\n  }, [items, filterValue, filterText, filteringType, showAll, hideEnteredTextLabel]);\n\n  const [highlightedOptionState, highlightedOptionHandlers] = useHighlightedOption({\n    options: filteredItems,\n    isHighlightable,\n  });\n\n  const selectHighlightedOptionWithKeyboard = () => {\n    if (highlightedOptionState.highlightedOption && isInteractive(highlightedOptionState.highlightedOption)) {\n      onSelectItem(highlightedOptionState.highlightedOption);\n      return true;\n    }\n    return false;\n  };\n\n  const highlightVisibleOptionWithMouse = (index: number) => {\n    if (filteredItems[index] && isHighlightable(filteredItems[index])) {\n      highlightedOptionHandlers.setHighlightedIndexWithMouse(index);\n    }\n  };\n\n  const selectVisibleOptionWithMouse = (index: number) => {\n    if (filteredItems[index] && isInteractive(filteredItems[index])) {\n      onSelectItem(filteredItems[index]);\n    }\n  };\n\n  return [\n    { ...highlightedOptionState, items: filteredItems, showAll },\n    {\n      ...highlightedOptionHandlers,\n      setShowAll,\n      selectHighlightedOptionWithKeyboard,\n      highlightVisibleOptionWithMouse,\n      selectVisibleOptionWithMouse,\n    },\n  ];\n};\n\nfunction createItems(options: Options): AutosuggestItem[] {\n  const items: AutosuggestItem[] = [];\n  for (const option of options) {\n    if (isGroup(option)) {\n      for (const item of flattenGroup(option)) {\n        items.push(item);\n      }\n    } else {\n      items.push({ ...option, option });\n    }\n  }\n  return items;\n}\n\nfunction isGroup(optionOrGroup: AutosuggestProps.Option): optionOrGroup is AutosuggestProps.OptionGroup {\n  return 'options' in optionOrGroup;\n}\n\nfunction flattenGroup(group: AutosuggestProps.OptionGroup): AutosuggestItem[] {\n  const { options, ...rest } = group;\n\n  let hasOnlyDisabledChildren = true;\n\n  const items: AutosuggestItem[] = [{ ...rest, type: 'parent', option: group }];\n\n  for (const option of options) {\n    if (!option.disabled) {\n      hasOnlyDisabledChildren = false;\n    }\n\n    const childOption: AutosuggestItem = {\n      ...option,\n      type: 'child',\n      disabled: option.disabled || rest.disabled,\n      option,\n    };\n\n    items.push(childOption);\n\n    // TODO: Refactor parentMap and remove this side effect\n    parentMap.set(childOption, { ...group, option: group });\n  }\n\n  items[0].disabled = items[0].disabled || hasOnlyDisabledChildren;\n\n  return items;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}