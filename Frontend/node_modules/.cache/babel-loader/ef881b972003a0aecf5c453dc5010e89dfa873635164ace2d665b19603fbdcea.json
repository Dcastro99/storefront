{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalMultiselect from './internal';\nvar Multiselect = React.forwardRef(function (_a, ref) {\n  var _b = _a.options,\n    options = _b === void 0 ? [] : _b,\n    _c = _a.filteringType,\n    filteringType = _c === void 0 ? 'none' : _c,\n    _d = _a.statusType,\n    statusType = _d === void 0 ? 'finished' : _d,\n    _e = _a.selectedOptions,\n    selectedOptions = _e === void 0 ? [] : _e,\n    _f = _a.keepOpen,\n    keepOpen = _f === void 0 ? true : _f,\n    _g = _a.hideTokens,\n    hideTokens = _g === void 0 ? false : _g,\n    restProps = __rest(_a, [\"options\", \"filteringType\", \"statusType\", \"selectedOptions\", \"keepOpen\", \"hideTokens\"]);\n  var baseComponentProps = useBaseComponent('Multiselect');\n  return React.createElement(InternalMultiselect, __assign({\n    options: options,\n    filteringType: filteringType,\n    statusType: statusType,\n    selectedOptions: selectedOptions,\n    keepOpen: keepOpen,\n    hideTokens: hideTokens\n  }, restProps, baseComponentProps, {\n    ref: ref\n  }));\n});\napplyDisplayName(Multiselect, 'Multiselect');\nexport default Multiselect;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,OAAOC,mBAAmB,MAAM,YAAY;AAI5C,IAAMC,WAAW,GAAGJ,KAAK,CAACK,UAAU,CAClC,UACEC,EAQmB,EACnBC,GAAoC;EARlC,mBAAY;IAAZC,OAAO,mBAAG,EAAE;IACZC,qBAAsB;IAAtBC,aAAa,mBAAG,MAAM;IACtBC,kBAAuB;IAAvBC,UAAU,mBAAG,UAAU;IACvBC,uBAAoB;IAApBC,eAAe,mBAAG,EAAE;IACpBC,gBAAe;IAAfC,QAAQ,mBAAG,IAAI;IACfC,kBAAkB;IAAlBC,UAAU,mBAAG,KAAK;IACfC,SAAS,cAPd,uFAQC,CADa;EAId,IAAMC,kBAAkB,GAAGnB,gBAAgB,CAAC,aAAa,CAAC;EAC1D,OACED,oBAACG,mBAAmB;IAClBK,OAAO,EAAEA,OAAO;IAChBE,aAAa,EAAEA,aAAa;IAC5BE,UAAU,EAAEA,UAAU;IACtBE,eAAe,EAAEA,eAAe;IAChCE,QAAQ,EAAEA,QAAQ;IAClBE,UAAU,EAAEA;EAAU,GAClBC,SAAS,EACTC,kBAAkB;IACtBb,GAAG,EAAEA;EAAG,GACR;AAEN,CAAC,CACF;AAEDL,gBAAgB,CAACE,WAAW,EAAE,aAAa,CAAC;AAC5C,eAAeA,WAAW","names":["React","useBaseComponent","applyDisplayName","InternalMultiselect","Multiselect","forwardRef","_a","ref","options","_c","filteringType","_d","statusType","_e","selectedOptions","_f","keepOpen","_g","hideTokens","restProps","baseComponentProps"],"sources":["/Users/dcastro/node_modules/src/multiselect/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { MultiselectProps } from './interfaces';\nimport InternalMultiselect from './internal';\n\nexport { MultiselectProps };\n\nconst Multiselect = React.forwardRef(\n  (\n    {\n      options = [],\n      filteringType = 'none',\n      statusType = 'finished',\n      selectedOptions = [],\n      keepOpen = true,\n      hideTokens = false,\n      ...restProps\n    }: MultiselectProps,\n    ref: React.Ref<MultiselectProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Multiselect');\n    return (\n      <InternalMultiselect\n        options={options}\n        filteringType={filteringType}\n        statusType={statusType}\n        selectedOptions={selectedOptions}\n        keepOpen={keepOpen}\n        hideTokens={hideTokens}\n        {...restProps}\n        {...baseComponentProps}\n        ref={ref}\n      />\n    );\n  }\n);\n\napplyDisplayName(Multiselect, 'Multiselect');\nexport default Multiselect;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}