{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useState } from 'react';\nexport function useHighlightedOption(_a) {\n  var options = _a.options,\n    isHighlightable = _a.isHighlightable;\n  var _b = useState(-1),\n    highlightedIndex = _b[0],\n    setHighlightedIndexState = _b[1];\n  var _c = useState('keyboard'),\n    highlightType = _c[0],\n    setHighlightType = _c[1];\n  var setHighlightedIndex = useCallback(function (index, highlightType) {\n    setHighlightedIndexState(index);\n    setHighlightType(highlightType);\n  }, []);\n  var highlightedOption = options[highlightedIndex] && isHighlightable(options[highlightedIndex]) ? options[highlightedIndex] : undefined;\n  var moveHighlightFrom = function (direction, startIndex, highlightType) {\n    if (startIndex === void 0) {\n      startIndex = highlightedIndex;\n    }\n    var newIndex = startIndex;\n    do {\n      newIndex += direction;\n    } while (options[newIndex] && !isHighlightable(options[newIndex]));\n    if (options[newIndex]) {\n      setHighlightedIndex(newIndex, highlightType);\n    }\n  };\n  var moveHighlight = function (direction, highlightType) {\n    return moveHighlightFrom(direction, highlightedIndex, highlightType);\n  };\n  var highlightOption = useCallback(function (option, highlightType) {\n    var index = options.indexOf(option);\n    setHighlightedIndex(index, highlightType);\n  }, [options, setHighlightedIndex]);\n  return [{\n    highlightType: highlightType,\n    highlightedIndex: highlightedIndex,\n    highlightedOption: highlightedOption\n  }, {\n    setHighlightedIndexWithMouse: function (index) {\n      return setHighlightedIndex(index, 'mouse');\n    },\n    moveHighlightWithKeyboard: function (direction) {\n      return moveHighlight(direction, 'keyboard');\n    },\n    highlightOptionWithKeyboard: function (option) {\n      return highlightOption(option, 'keyboard');\n    },\n    resetHighlightWithKeyboard: function () {\n      return setHighlightedIndex(-1, 'keyboard');\n    },\n    goHomeWithKeyboard: function () {\n      return moveHighlightFrom(1, -1, 'keyboard');\n    },\n    goEndWithKeyboard: function () {\n      return moveHighlightFrom(-1, options.length, 'keyboard');\n    }\n  }];\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AA0B7C,OAAM,SAAUC,oBAAoB,CAAaC,EAGZ;MAFnCC,OAAO;IACPC,eAAe;EAET,SAA+CJ,QAAQ,CAAC,CAAC,CAAC,CAAC;IAA1DK,gBAAgB;IAAEC,wBAAwB,QAAgB;EAC3D,SAAoCN,QAAQ,CAAgB,UAAU,CAAC;IAAtEO,aAAa;IAAEC,gBAAgB,QAAuC;EAC7E,IAAMC,mBAAmB,GAAGV,WAAW,CAAC,UAACW,KAAa,EAAEH,aAA4B;IAClFD,wBAAwB,CAACI,KAAK,CAAC;IAC/BF,gBAAgB,CAACD,aAAa,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMI,iBAAiB,GACrBR,OAAO,CAACE,gBAAgB,CAAC,IAAID,eAAe,CAACD,OAAO,CAACE,gBAAgB,CAAC,CAAC,GAAGF,OAAO,CAACE,gBAAgB,CAAC,GAAGO,SAAS;EAEjH,IAAMC,iBAAiB,GAAG,UAACC,SAAiB,EAAEC,UAA6B,EAAER,aAA4B;IAA3D;MAAAQ,6BAA6B;IAAA;IACzE,IAAIC,QAAQ,GAAGD,UAAU;IACzB,GAAG;MACDC,QAAQ,IAAIF,SAAS;KACtB,QAAQX,OAAO,CAACa,QAAQ,CAAC,IAAI,CAACZ,eAAe,CAACD,OAAO,CAACa,QAAQ,CAAC,CAAC;IAEjE,IAAIb,OAAO,CAACa,QAAQ,CAAC,EAAE;MACrBP,mBAAmB,CAACO,QAAQ,EAAET,aAAa,CAAC;;EAEhD,CAAC;EAED,IAAMU,aAAa,GAAG,UAACH,SAAiB,EAAEP,aAA4B;IACpE,wBAAiB,CAACO,SAAS,EAAET,gBAAgB,EAAEE,aAAa,CAAC;EAA7D,CAA6D;EAE/D,IAAMW,eAAe,GAAGnB,WAAW,CACjC,UAACoB,MAAkB,EAAEZ,aAA4B;IAC/C,IAAMG,KAAK,GAAGP,OAAO,CAACiB,OAAO,CAACD,MAAM,CAAC;IACrCV,mBAAmB,CAACC,KAAK,EAAEH,aAAa,CAAC;EAC3C,CAAC,EACD,CAACJ,OAAO,EAAEM,mBAAmB,CAAC,CAC/B;EAED,OAAO,CACL;IAAEF,aAAa;IAAEF,gBAAgB;IAAEM,iBAAiB;EAAA,CAAE,EACtD;IACEU,4BAA4B,EAAE,UAACX,KAAa;MAAK,0BAAmB,CAACA,KAAK,EAAE,OAAO,CAAC;IAAnC,CAAmC;IACpFY,yBAAyB,EAAE,UAACR,SAAiB;MAAK,oBAAa,CAACA,SAAS,EAAE,UAAU,CAAC;IAApC,CAAoC;IACtFS,2BAA2B,EAAE,UAACJ,MAAkB;MAAK,sBAAe,CAACA,MAAM,EAAE,UAAU,CAAC;IAAnC,CAAmC;IACxFK,0BAA0B,EAAE;MAAM,0BAAmB,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC;IAAnC,CAAmC;IACrEC,kBAAkB,EAAE;MAAM,wBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC;IAApC,CAAoC;IAC9DC,iBAAiB,EAAE;MAAM,wBAAiB,CAAC,CAAC,CAAC,EAAEvB,OAAO,CAACwB,MAAM,EAAE,UAAU,CAAC;IAAjD;GAC1B,CACF;AACH","names":["useCallback","useState","useHighlightedOption","_a","options","isHighlightable","highlightedIndex","setHighlightedIndexState","highlightType","setHighlightType","setHighlightedIndex","index","highlightedOption","undefined","moveHighlightFrom","direction","startIndex","newIndex","moveHighlight","highlightOption","option","indexOf","setHighlightedIndexWithMouse","moveHighlightWithKeyboard","highlightOptionWithKeyboard","resetHighlightWithKeyboard","goHomeWithKeyboard","goEndWithKeyboard","length"],"sources":["/Users/dcastro/node_modules/src/internal/components/options-list/utils/use-highlight-option.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useState } from 'react';\n\nexport type HighlightType = 'keyboard' | 'mouse';\n\nexport interface HighlightedOptionProps<OptionType> {\n  options: readonly OptionType[];\n  isHighlightable: (option: OptionType) => boolean;\n}\n\nexport interface HighlightedOptionState<OptionType> {\n  highlightType: HighlightType;\n  highlightedIndex: number;\n  highlightedOption?: OptionType;\n}\n\nexport interface HighlightedOptionHandlers<OptionType> {\n  // Mouse handlers\n  setHighlightedIndexWithMouse(index: number): void;\n  // Keyboard handlers\n  moveHighlightWithKeyboard(direction: -1 | 1): void;\n  highlightOptionWithKeyboard(option: OptionType): void;\n  resetHighlightWithKeyboard(): void;\n  goHomeWithKeyboard(): void;\n  goEndWithKeyboard(): void;\n}\n\nexport function useHighlightedOption<OptionType>({\n  options,\n  isHighlightable,\n}: HighlightedOptionProps<OptionType>): [HighlightedOptionState<OptionType>, HighlightedOptionHandlers<OptionType>] {\n  const [highlightedIndex, setHighlightedIndexState] = useState(-1);\n  const [highlightType, setHighlightType] = useState<HighlightType>('keyboard');\n  const setHighlightedIndex = useCallback((index: number, highlightType: HighlightType) => {\n    setHighlightedIndexState(index);\n    setHighlightType(highlightType);\n  }, []);\n\n  const highlightedOption =\n    options[highlightedIndex] && isHighlightable(options[highlightedIndex]) ? options[highlightedIndex] : undefined;\n\n  const moveHighlightFrom = (direction: -1 | 1, startIndex = highlightedIndex, highlightType: HighlightType) => {\n    let newIndex = startIndex;\n    do {\n      newIndex += direction;\n    } while (options[newIndex] && !isHighlightable(options[newIndex]));\n\n    if (options[newIndex]) {\n      setHighlightedIndex(newIndex, highlightType);\n    }\n  };\n\n  const moveHighlight = (direction: -1 | 1, highlightType: HighlightType) =>\n    moveHighlightFrom(direction, highlightedIndex, highlightType);\n\n  const highlightOption = useCallback(\n    (option: OptionType, highlightType: HighlightType) => {\n      const index = options.indexOf(option);\n      setHighlightedIndex(index, highlightType);\n    },\n    [options, setHighlightedIndex]\n  );\n\n  return [\n    { highlightType, highlightedIndex, highlightedOption },\n    {\n      setHighlightedIndexWithMouse: (index: number) => setHighlightedIndex(index, 'mouse'),\n      moveHighlightWithKeyboard: (direction: -1 | 1) => moveHighlight(direction, 'keyboard'),\n      highlightOptionWithKeyboard: (option: OptionType) => highlightOption(option, 'keyboard'),\n      resetHighlightWithKeyboard: () => setHighlightedIndex(-1, 'keyboard'),\n      goHomeWithKeyboard: () => moveHighlightFrom(1, -1, 'keyboard'),\n      goEndWithKeyboard: () => moveHighlightFrom(-1, options.length, 'keyboard'),\n    },\n  ];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}