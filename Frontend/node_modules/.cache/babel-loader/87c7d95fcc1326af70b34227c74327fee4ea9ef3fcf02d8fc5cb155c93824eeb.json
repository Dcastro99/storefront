{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport default function RadioButton(_a) {\n  var _b, _c;\n  var name = _a.name,\n    label = _a.label,\n    value = _a.value,\n    checked = _a.checked,\n    withoutLabel = _a.withoutLabel,\n    description = _a.description,\n    disabled = _a.disabled,\n    controlId = _a.controlId,\n    onChange = _a.onChange;\n  var isVisualRefresh = useVisualRefresh();\n  return React.createElement(AbstractSwitch, {\n    className: clsx(styles.radio, description && styles['radio--has-description']),\n    controlClassName: styles['radio-control'],\n    outlineClassName: styles.outline,\n    label: label,\n    description: description,\n    disabled: disabled,\n    controlId: controlId,\n    nativeControl: function (nativeControlProps) {\n      return React.createElement(\"input\", __assign({}, nativeControlProps, {\n        type: \"radio\",\n        name: name,\n        value: value,\n        checked: checked,\n        onChange: onChange && function () {\n          return fireNonCancelableEvent(onChange, {\n            value: value\n          });\n        }\n      }));\n    },\n    styledControl: React.createElement(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      focusable: \"false\",\n      \"aria-hidden\": \"true\"\n    }, React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-border'], (_b = {}, _b[styles['styled-circle-disabled']] = disabled, _b)),\n      strokeWidth: isVisualRefresh ? 12 : 8,\n      cx: 50,\n      cy: 50,\n      r: isVisualRefresh ? 44 : 46\n    }), React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-fill'], (_c = {}, _c[styles['styled-circle-disabled']] = disabled, _c[styles['styled-circle-checked']] = checked, _c)),\n      strokeWidth: 30,\n      cx: 50,\n      cy: 50,\n      r: 35\n    })),\n    withoutLabel: withoutLabel\n  });\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,wCAAwC;AACnE,SAASC,sBAAsB,QAAmC,oBAAoB;AACtF,SAASC,gBAAgB,QAAQ,mCAAmC;AAEpE,OAAOC,MAAM,MAAM,iBAAiB;AASpC,eAAc,SAAUC,WAAW,CAACC,EAUjB;;MATjBC,IAAI;IACJC,KAAK;IACLC,KAAK;IACLC,OAAO;IACPC,YAAY;IACZC,WAAW;IACXC,QAAQ;IACRC,SAAS;IACTC,QAAQ;EAER,IAAMC,eAAe,GAAGb,gBAAgB,EAAE;EAC1C,OACEH,oBAACC,cAAc;IACbgB,SAAS,EAAElB,IAAI,CAACK,MAAM,CAACc,KAAK,EAAEN,WAAW,IAAIR,MAAM,CAAC,wBAAwB,CAAC,CAAC;IAC9Ee,gBAAgB,EAAEf,MAAM,CAAC,eAAe,CAAC;IACzCgB,gBAAgB,EAAEhB,MAAM,CAACiB,OAAO;IAChCb,KAAK,EAAEA,KAAK;IACZI,WAAW,EAAEA,WAAW;IACxBC,QAAQ,EAAEA,QAAQ;IAClBC,SAAS,EAAEA,SAAS;IACpBQ,aAAa,EAAE,4BAAkB;MAAI,OACnCtB,0CACMuB,kBAAkB;QACtBC,IAAI,EAAC,OAAO;QACZjB,IAAI,EAAEA,IAAI;QACVE,KAAK,EAAEA,KAAK;QACZC,OAAO,EAAEA,OAAO;QAChBK,QAAQ,EAAEA,QAAQ,IAAK;UAAM,6BAAsB,CAACA,QAAQ,EAAE;YAAEN,KAAK;UAAA,CAAE,CAAC;QAA3C;MAA4C,GACzE;IARiC,CASpC;IACDgB,aAAa,EACXzB;MAAK0B,OAAO,EAAC,aAAa;MAACC,SAAS,EAAC,OAAO;MAAA,eAAa;IAAM,GAC7D3B;MACEiB,SAAS,EAAElB,IAAI,CAACK,MAAM,CAAC,sBAAsB,CAAC,YAAIwB,GAACxB,MAAM,CAAC,wBAAwB,CAAC,IAAGS,QAAQ,MAAG;MACjGgB,WAAW,EAAEb,eAAe,GAAG,EAAE,GAAG,CAAC;MACrCc,EAAE,EAAE,EAAE;MACNC,EAAE,EAAE,EAAE;MACNC,CAAC,EAAEhB,eAAe,GAAG,EAAE,GAAG;IAAE,EAC5B,EACFhB;MACEiB,SAAS,EAAElB,IAAI,CAACK,MAAM,CAAC,oBAAoB,CAAC,YAC1C6B,GAAC7B,MAAM,CAAC,wBAAwB,CAAC,IAAGS,QAAQ,EAC5CoB,GAAC7B,MAAM,CAAC,uBAAuB,CAAC,IAAGM,OAAO,MAC1C;MACFmB,WAAW,EAAE,EAAE;MACfC,EAAE,EAAE,EAAE;MACNC,EAAE,EAAE,EAAE;MACNC,CAAC,EAAE;IAAE,EACL,CACE;IAERrB,YAAY,EAAEA;EAAY,EAC1B;AAEN","names":["clsx","React","AbstractSwitch","fireNonCancelableEvent","useVisualRefresh","styles","RadioButton","_a","name","label","value","checked","withoutLabel","description","disabled","controlId","onChange","isVisualRefresh","className","radio","controlClassName","outlineClassName","outline","nativeControl","nativeControlProps","type","styledControl","viewBox","focusable","_b","strokeWidth","cx","cy","r","_c"],"sources":["/Users/dcastro/node_modules/src/radio-group/radio-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { RadioGroupProps } from './interfaces';\nimport styles from './styles.css.js';\n\ninterface RadioButtonProps extends RadioGroupProps.RadioButtonDefinition {\n  name: string;\n  checked: boolean;\n  withoutLabel?: boolean;\n  onChange?: NonCancelableEventHandler<RadioGroupProps.ChangeDetail>;\n}\n\nexport default function RadioButton({\n  name,\n  label,\n  value,\n  checked,\n  withoutLabel,\n  description,\n  disabled,\n  controlId,\n  onChange,\n}: RadioButtonProps) {\n  const isVisualRefresh = useVisualRefresh();\n  return (\n    <AbstractSwitch\n      className={clsx(styles.radio, description && styles['radio--has-description'])}\n      controlClassName={styles['radio-control']}\n      outlineClassName={styles.outline}\n      label={label}\n      description={description}\n      disabled={disabled}\n      controlId={controlId}\n      nativeControl={nativeControlProps => (\n        <input\n          {...nativeControlProps}\n          type=\"radio\"\n          name={name}\n          value={value}\n          checked={checked}\n          onChange={onChange && (() => fireNonCancelableEvent(onChange, { value }))}\n        />\n      )}\n      styledControl={\n        <svg viewBox=\"0 0 100 100\" focusable=\"false\" aria-hidden=\"true\">\n          <circle\n            className={clsx(styles['styled-circle-border'], { [styles['styled-circle-disabled']]: disabled })}\n            strokeWidth={isVisualRefresh ? 12 : 8}\n            cx={50}\n            cy={50}\n            r={isVisualRefresh ? 44 : 46}\n          />\n          <circle\n            className={clsx(styles['styled-circle-fill'], {\n              [styles['styled-circle-disabled']]: disabled,\n              [styles['styled-circle-checked']]: checked,\n            })}\n            strokeWidth={30}\n            cx={50}\n            cy={50}\n            r={35}\n          />\n        </svg>\n      }\n      withoutLabel={withoutLabel}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}