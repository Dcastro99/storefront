{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalRadioGroup from '../radio-group/internal';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport styles from './styles.css.js';\nexport var copyPreferences = function (_a) {\n  var pageSize = _a.pageSize,\n    wrapLines = _a.wrapLines,\n    visibleContent = _a.visibleContent,\n    custom = _a.custom;\n  return {\n    pageSize: pageSize,\n    wrapLines: wrapLines,\n    visibleContent: visibleContent,\n    custom: custom\n  };\n};\nexport var mergePreferences = function (newPref, oldPref) {\n  return {\n    pageSize: newPref.pageSize !== undefined ? newPref.pageSize : oldPref.pageSize,\n    wrapLines: newPref.wrapLines !== undefined ? newPref.wrapLines : oldPref.wrapLines,\n    visibleContent: newPref.visibleContent !== undefined ? newPref.visibleContent : oldPref.visibleContent,\n    custom: newPref.custom !== undefined ? newPref.custom : oldPref.custom\n  };\n};\nexport var ModalContentLayout = function (_a) {\n  var left = _a.left,\n    right = _a.right;\n  var _b = useContainerBreakpoints(['xs']),\n    breakpoint = _b[0],\n    ref = _b[1];\n  var smallContainer = breakpoint === 'default';\n  if (smallContainer) {\n    return React.createElement(\"div\", {\n      ref: ref\n    }, React.createElement(\"div\", null, left), right && React.createElement(\"div\", {\n      className: styles['second-column-small']\n    }, right));\n  }\n  var columns = right ? 2 : 1;\n  return React.createElement(\"div\", {\n    ref: ref\n  }, React.createElement(InternalColumnLayout, {\n    columns: columns,\n    variant: \"text-grid\"\n  }, React.createElement(\"div\", null, left), right && React.createElement(\"div\", null, right)));\n};\nexport var PageSizePreference = function (_a) {\n  var title = _a.title,\n    options = _a.options,\n    value = _a.value,\n    onChange = _a.onChange;\n  return React.createElement(\"div\", {\n    className: styles['page-size']\n  }, React.createElement(InternalFormField, {\n    label: title,\n    stretch: true,\n    className: styles['page-size-form-field']\n  }, React.createElement(InternalRadioGroup, {\n    className: styles['page-size-radio-group'],\n    value: \"\".concat(value),\n    items: options.map(function (_a) {\n      var label = _a.label,\n        value = _a.value;\n      return {\n        label: label,\n        value: \"\".concat(value)\n      };\n    }),\n    onChange: function (_a) {\n      var detail = _a.detail;\n      return onChange(parseInt(detail.value, 10));\n    }\n  })));\n};\nexport var WrapLinesPreference = function (_a) {\n  var label = _a.label,\n    description = _a.description,\n    value = _a.value,\n    onChange = _a.onChange;\n  return React.createElement(InternalCheckbox, {\n    checked: !!value,\n    description: description,\n    onChange: function (_a) {\n      var detail = _a.detail;\n      return onChange(detail.checked);\n    },\n    className: styles['wrap-lines']\n  }, label);\n};\nexport var CustomPreference = function (_a) {\n  var value = _a.value,\n    customPreference = _a.customPreference,\n    onChange = _a.onChange;\n  var _b = useState(value),\n    customState = _b[0],\n    setCustomState = _b[1];\n  if (customPreference) {\n    return React.createElement(\"div\", {\n      className: styles.custom\n    }, customPreference(customState, function (value) {\n      // prevent value to be treated as a functional callback\n      setCustomState(function () {\n        return value;\n      });\n      onChange(value);\n    }));\n  }\n  return null;\n};","map":{"version":3,"mappings":"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","names":["React","useState","InternalCheckbox","InternalColumnLayout","InternalFormField","InternalRadioGroup","useContainerBreakpoints","styles","copyPreferences","_a","pageSize","wrapLines","visibleContent","custom","mergePreferences","newPref","oldPref","undefined","ModalContentLayout","left","right","breakpoint","ref","smallContainer","className","columns","variant","PageSizePreference","title","options","value","onChange","label","stretch","items","map","detail","parseInt","WrapLinesPreference","description","checked","CustomPreference","customPreference","customState","setCustomState"],"sources":["/Users/dcastro/node_modules/src/collection-preferences/utils.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalRadioGroup from '../radio-group/internal';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { CollectionPreferencesProps } from './interfaces';\nimport styles from './styles.css.js';\n\nexport const copyPreferences = ({\n  pageSize,\n  wrapLines,\n  visibleContent,\n  custom,\n}: CollectionPreferencesProps.Preferences): CollectionPreferencesProps.Preferences => ({\n  pageSize,\n  wrapLines,\n  visibleContent,\n  custom,\n});\n\nexport const mergePreferences = (\n  newPref: CollectionPreferencesProps.Preferences,\n  oldPref: CollectionPreferencesProps.Preferences\n): CollectionPreferencesProps.Preferences => ({\n  pageSize: newPref.pageSize !== undefined ? newPref.pageSize : oldPref.pageSize,\n  wrapLines: newPref.wrapLines !== undefined ? newPref.wrapLines : oldPref.wrapLines,\n  visibleContent: newPref.visibleContent !== undefined ? newPref.visibleContent : oldPref.visibleContent,\n  custom: newPref.custom !== undefined ? newPref.custom : oldPref.custom,\n});\n\ninterface ModalContentLayoutProps {\n  left: React.ReactNode;\n  right: React.ReactNode;\n}\n\nexport const ModalContentLayout = ({ left, right }: ModalContentLayoutProps) => {\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const smallContainer = breakpoint === 'default';\n\n  if (smallContainer) {\n    return (\n      <div ref={ref}>\n        <div>{left}</div>\n        {right && <div className={styles['second-column-small']}>{right}</div>}\n      </div>\n    );\n  }\n\n  const columns = right ? 2 : 1;\n  return (\n    <div ref={ref}>\n      <InternalColumnLayout columns={columns} variant=\"text-grid\">\n        <div>{left}</div>\n        {right && <div>{right}</div>}\n      </InternalColumnLayout>\n    </div>\n  );\n};\n\ninterface PageSizePreferenceProps extends CollectionPreferencesProps.PageSizePreference {\n  onChange: (value: number) => void;\n  value?: number;\n}\n\nexport const PageSizePreference = ({ title, options, value, onChange }: PageSizePreferenceProps) => (\n  <div className={styles['page-size']}>\n    <InternalFormField label={title} stretch={true} className={styles['page-size-form-field']}>\n      <InternalRadioGroup\n        className={styles['page-size-radio-group']}\n        value={`${value}`}\n        items={options.map(({ label, value }) => ({ label, value: `${value}` }))}\n        onChange={({ detail }) => onChange(parseInt(detail.value, 10))}\n      />\n    </InternalFormField>\n  </div>\n);\n\ninterface WrapLinesPreferenceProps extends CollectionPreferencesProps.WrapLinesPreference {\n  onChange: (value: boolean) => void;\n  value?: boolean;\n}\n\nexport const WrapLinesPreference = ({ label, description, value, onChange }: WrapLinesPreferenceProps) => (\n  <InternalCheckbox\n    checked={!!value}\n    description={description}\n    onChange={({ detail }) => onChange(detail.checked)}\n    className={styles['wrap-lines']}\n  >\n    {label}\n  </InternalCheckbox>\n);\n\ninterface CustomPreferenceProps<T = any> extends Pick<CollectionPreferencesProps<T>, 'customPreference'> {\n  onChange: (value: T) => void;\n  value: T;\n}\nexport const CustomPreference = ({ value, customPreference, onChange }: CustomPreferenceProps) => {\n  const [customState, setCustomState] = useState(value);\n  if (customPreference) {\n    return (\n      <div className={styles.custom}>\n        {customPreference(customState, value => {\n          // prevent value to be treated as a functional callback\n          setCustomState(() => value);\n          onChange(value);\n        })}\n      </div>\n    );\n  }\n  return null;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}