{"ast":null,"code":"import { __spreadArray } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { fireNonCancelableEvent } from '../../events';\nimport { calculatePosition } from './dropdown-fit-handler';\nimport { Transition } from '../transition';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport { usePortalModeClasses } from '../../hooks/use-portal-mode-classes';\nimport { DropdownContextProvider } from './context';\nimport { useMobile } from '../../hooks/use-mobile';\nimport TabTrap from '../tab-trap/index.js';\nimport { getFirstFocusable, getLastFocusable } from '../focus-lock/utils.js';\nvar DropdownContainer = function (_a) {\n  var children = _a.children,\n    _b = _a.renderWithPortal,\n    renderWithPortal = _b === void 0 ? false : _b,\n    id = _a.id,\n    open = _a.open;\n  if (renderWithPortal) {\n    if (open) {\n      return createPortal(React.createElement(\"div\", {\n        id: id\n      }, children), document.body);\n    } else {\n      return null;\n    }\n  } else {\n    return React.createElement(React.Fragment, null, children);\n  }\n};\nvar TransitionContent = function (_a) {\n  var _b;\n  var state = _a.state,\n    transitionRef = _a.transitionRef,\n    dropdownClasses = _a.dropdownClasses,\n    stretchWidth = _a.stretchWidth,\n    interior = _a.interior,\n    isRefresh = _a.isRefresh,\n    dropdownRef = _a.dropdownRef,\n    verticalContainerRef = _a.verticalContainerRef,\n    expandToViewport = _a.expandToViewport,\n    header = _a.header,\n    children = _a.children,\n    footer = _a.footer,\n    position = _a.position,\n    open = _a.open,\n    onMouseDown = _a.onMouseDown;\n  var contentRef = useMergeRefs(dropdownRef, transitionRef);\n  return React.createElement(\"div\", {\n    className: clsx(styles.dropdown, dropdownClasses, (_b = {}, _b[styles.open] = open, _b[styles['with-limited-width']] = !stretchWidth, _b[styles['hide-upper-border']] = stretchWidth, _b[styles.interior] = interior, _b[styles['is-empty']] = !header && !children, _b[styles.refresh] = isRefresh, _b[styles['use-portal']] = expandToViewport && !interior, _b)),\n    ref: contentRef,\n    \"data-open\": open,\n    \"data-animating\": state !== 'exited',\n    \"aria-hidden\": !open,\n    onMouseDown: onMouseDown\n  }, React.createElement(\"div\", {\n    className: clsx(styles['dropdown-content-wrapper'], isRefresh && styles.refresh)\n  }, React.createElement(\"div\", {\n    className: styles['ie11-wrapper']\n  }, React.createElement(\"div\", {\n    ref: verticalContainerRef,\n    className: styles['dropdown-content']\n  }, React.createElement(DropdownContextProvider, {\n    position: position\n  }, header, children, footer)))));\n};\nvar Dropdown = function (_a) {\n  var children = _a.children,\n    trigger = _a.trigger,\n    open = _a.open,\n    onDropdownClose = _a.onDropdownClose,\n    onMouseDown = _a.onMouseDown,\n    header = _a.header,\n    footer = _a.footer,\n    dropdownId = _a.dropdownId,\n    _b = _a.stretchTriggerHeight,\n    stretchTriggerHeight = _b === void 0 ? false : _b,\n    _c = _a.stretchWidth,\n    stretchWidth = _c === void 0 ? true : _c,\n    _d = _a.stretchHeight,\n    stretchHeight = _d === void 0 ? false : _d,\n    _e = _a.stretchToTriggerWidth,\n    stretchToTriggerWidth = _e === void 0 ? true : _e,\n    _f = _a.expandToViewport,\n    expandToViewport = _f === void 0 ? false : _f,\n    _g = _a.preferCenter,\n    preferCenter = _g === void 0 ? false : _g,\n    _h = _a.interior,\n    interior = _h === void 0 ? false : _h,\n    minWidth = _a.minWidth,\n    _j = _a.scrollable,\n    scrollable = _j === void 0 ? true : _j,\n    _k = _a.trapFocus,\n    trapFocus = _k === void 0 ? false : _k,\n    contentKey = _a.contentKey;\n  var triggerRef = useRef(null);\n  var dropdownRef = useRef(null);\n  // This container is only needed to apply max-height to. We can't move max-height to it's parent\n  // because of an IE11 issue with flexbox. https://github.com/philipwalton/flexbugs/issues/216\n  var verticalContainerRef = useRef(null);\n  // To keep track of the initial position (drop up/down) which is kept the same during fixed repositioning\n  var fixedPosition = useRef(null);\n  var isRefresh = useVisualRefresh();\n  var dropdownClasses = usePortalModeClasses(triggerRef);\n  var _l = useState('bottom-right'),\n    position = _l[0],\n    setPosition = _l[1];\n  var isMobile = useMobile();\n  var setDropdownPosition = function (position, triggerBox, target, verticalContainer) {\n    var entireWidth = !interior && stretchWidth;\n    if (!stretchWidth) {\n      // 1px offset for dropdowns where the dropdown itself needs a border, rather than on the items\n      verticalContainer.style.maxHeight = \"\".concat(parseInt(position.height) + 1, \"px\");\n    } else {\n      verticalContainer.style.maxHeight = position.height;\n    }\n    if (entireWidth && !expandToViewport) {\n      if (stretchToTriggerWidth) {\n        target.classList.add(styles['occupy-entire-width']);\n      }\n    } else {\n      target.style.width = position.width;\n    }\n    // Using styles for main dropdown to adjust its position as preferred alternative\n    if (position.dropUp && !interior) {\n      target.classList.add(styles['dropdown-drop-up']);\n      if (!expandToViewport) {\n        target.style.bottom = '100%';\n      }\n    } else {\n      target.classList.remove(styles['dropdown-drop-up']);\n    }\n    target.classList.add(position.dropLeft ? styles['dropdown-drop-left'] : styles['dropdown-drop-right']);\n    if (position.left && position.left !== 'auto') {\n      target.style.left = position.left;\n    }\n    // Position normal overflow dropdowns with fixed positioning relative to viewport\n    if (expandToViewport && !interior) {\n      target.style.position = 'fixed';\n      if (position.dropUp) {\n        target.style.bottom = \"calc(100% - \".concat(triggerBox.top, \"px)\");\n      } else {\n        target.style.top = \"\".concat(triggerBox.bottom, \"px\");\n      }\n      if (position.dropLeft) {\n        target.style.left = \"calc(\".concat(triggerBox.right, \"px - \").concat(position.width, \")\");\n      } else {\n        target.style.left = \"\".concat(triggerBox.left, \"px\");\n      }\n      // Keep track of the initial dropdown position and direction.\n      // Dropdown direction doesn't need to change as the user scrolls, just needs to stay attached to the trigger.\n      fixedPosition.current = position;\n      return;\n    }\n    // For an interior dropdown (the fly out) we need exact values for positioning\n    // and classes are not enough\n    // usage of relative position is impossible due to overwrite of overflow-x\n    if (interior && isInteriorPosition(position)) {\n      if (position.dropUp) {\n        target.style.bottom = position.bottom;\n      } else {\n        target.style.top = position.top;\n      }\n      target.style.left = position.left;\n    }\n    if (position.dropUp && position.dropLeft) {\n      setPosition('top-left');\n    } else if (position.dropUp) {\n      setPosition('top-right');\n    } else if (position.dropLeft) {\n      setPosition('bottom-left');\n    } else {\n      setPosition('bottom-right');\n    }\n  };\n  useLayoutEffect(function () {\n    var onDropdownOpen = function () {\n      if (open && dropdownRef.current && triggerRef.current && verticalContainerRef.current) {\n        // calculate scroll width only for dropdowns that has a scrollbar and ignore it for date picker components\n        if (scrollable) {\n          dropdownRef.current.classList.add(styles.nowrap);\n        }\n        setDropdownPosition.apply(void 0, __spreadArray(__spreadArray([], calculatePosition(dropdownRef.current, triggerRef.current, verticalContainerRef.current, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth), false), [dropdownRef.current, verticalContainerRef.current], false));\n        if (scrollable) {\n          dropdownRef.current.classList.remove(styles.nowrap);\n        }\n      }\n    };\n    onDropdownOpen();\n    if (open) {\n      // window may scroll when dropdown opens, for example when soft keyboard shows up\n      window.addEventListener('scroll', onDropdownOpen);\n      // only listen to window scroll within very short time after the dropdown opens\n      // do not want to interfere dropdown position on scroll afterwards\n      var timeoutId_1 = setTimeout(function () {\n        window.removeEventListener('scroll', onDropdownOpen);\n      }, 500);\n      return function () {\n        clearTimeout(timeoutId_1);\n        window.removeEventListener('scroll', onDropdownOpen);\n      };\n    }\n    // See AWSUI-13040\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, dropdownRef, triggerRef, verticalContainerRef, interior, stretchWidth, isMobile, contentKey]);\n  // subscribe to outside click\n  useEffect(function () {\n    if (!open) {\n      return;\n    }\n    var clickListener = function (e) {\n      var _a;\n      if (!((_a = dropdownRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target))) {\n        fireNonCancelableEvent(onDropdownClose);\n      }\n    };\n    /*\n     * This small delay allows the event that opened the dropdown to\n     * finish bubbling, so that it is not immediately captured here.\n     */\n    var timeout = setTimeout(function () {\n      window.addEventListener('click', clickListener);\n    }, 0);\n    return function () {\n      clearTimeout(timeout);\n      window.removeEventListener('click', clickListener);\n    };\n  }, [open, onDropdownClose]);\n  // sync dropdown position on scroll and resize\n  useLayoutEffect(function () {\n    if (!expandToViewport || !open) {\n      return;\n    }\n    var updateDropdownPosition = function () {\n      if (triggerRef.current && dropdownRef.current && verticalContainerRef.current) {\n        var triggerRect = triggerRef.current.getBoundingClientRect();\n        var target = dropdownRef.current;\n        if (fixedPosition.current) {\n          if (fixedPosition.current.dropUp) {\n            dropdownRef.current.style.bottom = \"calc(100% - \".concat(triggerRect.top, \"px)\");\n          } else {\n            target.style.top = \"\".concat(triggerRect.bottom, \"px\");\n          }\n          if (fixedPosition.current.dropLeft) {\n            target.style.left = \"calc(\".concat(triggerRect.right, \"px - \").concat(fixedPosition.current.width, \")\");\n          } else {\n            target.style.left = \"\".concat(triggerRect.left, \"px\");\n          }\n        }\n      }\n    };\n    updateDropdownPosition();\n    window.addEventListener('scroll', updateDropdownPosition, true);\n    window.addEventListener('resize', updateDropdownPosition, true);\n    return function () {\n      window.removeEventListener('scroll', updateDropdownPosition, true);\n      window.removeEventListener('resize', updateDropdownPosition, true);\n    };\n  }, [open, expandToViewport]);\n  return React.createElement(\"div\", {\n    className: clsx(styles.root, interior && styles.interior, stretchTriggerHeight && styles['stretch-trigger-height'])\n  }, React.createElement(\"div\", {\n    className: clsx(stretchTriggerHeight && styles['stretch-trigger-height']),\n    ref: triggerRef\n  }, trigger), React.createElement(TabTrap, {\n    focusNextCallback: function () {\n      var _a;\n      return dropdownRef.current && ((_a = getFirstFocusable(dropdownRef.current)) === null || _a === void 0 ? void 0 : _a.focus());\n    },\n    disabled: !open || !trapFocus\n  }), React.createElement(DropdownContainer, {\n    renderWithPortal: expandToViewport && !interior,\n    id: dropdownId,\n    open: open\n  }, React.createElement(Transition, {\n    \"in\": open !== null && open !== void 0 ? open : false,\n    exit: false\n  }, function (state, ref) {\n    return React.createElement(\"div\", {\n      onBlur: function (event) {\n        return trapFocus && event.stopPropagation();\n      }\n    }, React.createElement(TabTrap, {\n      focusNextCallback: function () {\n        var _a;\n        return triggerRef.current && ((_a = getLastFocusable(triggerRef.current)) === null || _a === void 0 ? void 0 : _a.focus());\n      },\n      disabled: !open || !trapFocus\n    }), React.createElement(TransitionContent, {\n      state: state,\n      transitionRef: ref,\n      dropdownClasses: dropdownClasses,\n      open: open,\n      stretchWidth: stretchWidth,\n      interior: interior,\n      header: header,\n      expandToViewport: expandToViewport,\n      footer: footer,\n      onMouseDown: onMouseDown,\n      isRefresh: isRefresh,\n      dropdownRef: dropdownRef,\n      verticalContainerRef: verticalContainerRef,\n      position: position\n    }, children), React.createElement(TabTrap, {\n      focusNextCallback: function () {\n        var _a;\n        return triggerRef.current && ((_a = getFirstFocusable(triggerRef.current)) === null || _a === void 0 ? void 0 : _a.focus());\n      },\n      disabled: !open || !trapFocus\n    }));\n  })));\n};\nvar isInteriorPosition = function (position) {\n  return position.bottom !== undefined;\n};\nexport default Dropdown;","map":{"version":3,"mappings":"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","names":["styles","clsx","useMergeRefs","React","useEffect","useLayoutEffect","useRef","useState","createPortal","fireNonCancelableEvent","calculatePosition","Transition","useVisualRefresh","usePortalModeClasses","DropdownContextProvider","useMobile","TabTrap","getFirstFocusable","getLastFocusable","DropdownContainer","_a","children","_b","renderWithPortal","id","open","document","body","TransitionContent","state","transitionRef","dropdownClasses","stretchWidth","interior","isRefresh","dropdownRef","verticalContainerRef","expandToViewport","header","footer","position","onMouseDown","contentRef","className","dropdown","refresh","ref","Dropdown","trigger","onDropdownClose","dropdownId","stretchTriggerHeight","_c","_d","stretchHeight","_e","stretchToTriggerWidth","_f","_g","preferCenter","_h","minWidth","_j","scrollable","_k","trapFocus","contentKey","triggerRef","fixedPosition","setPosition","isMobile","setDropdownPosition","triggerBox","target","verticalContainer","entireWidth","style","maxHeight","parseInt","height","classList","add","width","dropUp","bottom","remove","dropLeft","left","top","right","current","isInteriorPosition","onDropdownOpen","nowrap","window","addEventListener","timeoutId_1","setTimeout","removeEventListener","clearTimeout","clickListener","e","contains","timeout","updateDropdownPosition","triggerRect","getBoundingClientRect","root","focusNextCallback","focus","disabled","exit","onBlur","event","stopPropagation","undefined"],"sources":["/Users/dcastro/node_modules/src/internal/components/dropdown/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { fireNonCancelableEvent } from '../../events';\nimport { DropdownProps } from './interfaces';\nimport { DropdownPosition, InteriorDropdownPosition, calculatePosition } from './dropdown-fit-handler';\nimport { Transition, TransitionStatus } from '../transition';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport { usePortalModeClasses } from '../../hooks/use-portal-mode-classes';\nimport { DropdownContextProvider, DropdownContextProviderProps } from './context';\nimport { useMobile } from '../../hooks/use-mobile';\nimport TabTrap from '../tab-trap/index.js';\nimport { getFirstFocusable, getLastFocusable } from '../focus-lock/utils.js';\n\ninterface DropdownContainerProps {\n  children?: React.ReactNode;\n  renderWithPortal?: boolean;\n  id?: string;\n  open?: boolean;\n}\n\nconst DropdownContainer = ({ children, renderWithPortal = false, id, open }: DropdownContainerProps) => {\n  if (renderWithPortal) {\n    if (open) {\n      return createPortal(<div id={id}>{children}</div>, document.body);\n    } else {\n      return null;\n    }\n  } else {\n    return <>{children}</>;\n  }\n};\n\ninterface TransitionContentProps {\n  state: TransitionStatus;\n  transitionRef: React.MutableRefObject<any>;\n  dropdownClasses: string;\n  stretchWidth: boolean;\n  interior: boolean;\n  isRefresh: boolean;\n  dropdownRef: React.RefObject<HTMLDivElement>;\n  verticalContainerRef: React.RefObject<HTMLDivElement>;\n  expandToViewport?: boolean;\n  header?: React.ReactNode;\n  children?: React.ReactNode;\n  footer?: React.ReactNode;\n  position?: DropdownContextProviderProps['position'];\n  open?: boolean;\n  onMouseDown?: React.MouseEventHandler<Element>;\n}\n\nconst TransitionContent = ({\n  state,\n  transitionRef,\n  dropdownClasses,\n  stretchWidth,\n  interior,\n  isRefresh,\n  dropdownRef,\n  verticalContainerRef,\n  expandToViewport,\n  header,\n  children,\n  footer,\n  position,\n  open,\n  onMouseDown,\n}: TransitionContentProps) => {\n  const contentRef = useMergeRefs(dropdownRef, transitionRef);\n  return (\n    <div\n      className={clsx(styles.dropdown, dropdownClasses, {\n        [styles.open]: open,\n        [styles['with-limited-width']]: !stretchWidth,\n        [styles['hide-upper-border']]: stretchWidth,\n        [styles.interior]: interior,\n        [styles['is-empty']]: !header && !children,\n        [styles.refresh]: isRefresh,\n        [styles['use-portal']]: expandToViewport && !interior,\n      })}\n      ref={contentRef}\n      data-open={open}\n      data-animating={state !== 'exited'}\n      aria-hidden={!open}\n      onMouseDown={onMouseDown}\n    >\n      <div className={clsx(styles['dropdown-content-wrapper'], isRefresh && styles.refresh)}>\n        <div className={styles['ie11-wrapper']}>\n          <div ref={verticalContainerRef} className={styles['dropdown-content']}>\n            <DropdownContextProvider position={position}>\n              {header}\n              {children}\n              {footer}\n            </DropdownContextProvider>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Dropdown = ({\n  children,\n  trigger,\n  open,\n  onDropdownClose,\n  onMouseDown,\n  header,\n  footer,\n  dropdownId,\n  stretchTriggerHeight = false,\n  stretchWidth = true,\n  stretchHeight = false,\n  stretchToTriggerWidth = true,\n  expandToViewport = false,\n  preferCenter = false,\n  interior = false,\n  minWidth,\n  scrollable = true,\n  trapFocus = false,\n  contentKey,\n}: DropdownProps) => {\n  const triggerRef = useRef<HTMLDivElement>(null);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  // This container is only needed to apply max-height to. We can't move max-height to it's parent\n  // because of an IE11 issue with flexbox. https://github.com/philipwalton/flexbugs/issues/216\n  const verticalContainerRef = useRef<HTMLDivElement>(null);\n  // To keep track of the initial position (drop up/down) which is kept the same during fixed repositioning\n  const fixedPosition = useRef<DropdownPosition | null>(null);\n\n  const isRefresh = useVisualRefresh();\n\n  const dropdownClasses = usePortalModeClasses(triggerRef);\n  const [position, setPosition] = useState<DropdownContextProviderProps['position']>('bottom-right');\n\n  const isMobile = useMobile();\n\n  const setDropdownPosition = (\n    position: DropdownPosition | InteriorDropdownPosition,\n    triggerBox: DOMRect,\n    target: HTMLDivElement,\n    verticalContainer: HTMLDivElement\n  ) => {\n    const entireWidth = !interior && stretchWidth;\n    if (!stretchWidth) {\n      // 1px offset for dropdowns where the dropdown itself needs a border, rather than on the items\n      verticalContainer.style.maxHeight = `${parseInt(position.height) + 1}px`;\n    } else {\n      verticalContainer.style.maxHeight = position.height;\n    }\n\n    if (entireWidth && !expandToViewport) {\n      if (stretchToTriggerWidth) {\n        target.classList.add(styles['occupy-entire-width']);\n      }\n    } else {\n      target.style.width = position.width;\n    }\n    // Using styles for main dropdown to adjust its position as preferred alternative\n    if (position.dropUp && !interior) {\n      target.classList.add(styles['dropdown-drop-up']);\n      if (!expandToViewport) {\n        target.style.bottom = '100%';\n      }\n    } else {\n      target.classList.remove(styles['dropdown-drop-up']);\n    }\n    target.classList.add(position.dropLeft ? styles['dropdown-drop-left'] : styles['dropdown-drop-right']);\n\n    if (position.left && position.left !== 'auto') {\n      target.style.left = position.left;\n    }\n\n    // Position normal overflow dropdowns with fixed positioning relative to viewport\n    if (expandToViewport && !interior) {\n      target.style.position = 'fixed';\n      if (position.dropUp) {\n        target.style.bottom = `calc(100% - ${triggerBox.top}px)`;\n      } else {\n        target.style.top = `${triggerBox.bottom}px`;\n      }\n      if (position.dropLeft) {\n        target.style.left = `calc(${triggerBox.right}px - ${position.width})`;\n      } else {\n        target.style.left = `${triggerBox.left}px`;\n      }\n      // Keep track of the initial dropdown position and direction.\n      // Dropdown direction doesn't need to change as the user scrolls, just needs to stay attached to the trigger.\n      fixedPosition.current = position;\n      return;\n    }\n\n    // For an interior dropdown (the fly out) we need exact values for positioning\n    // and classes are not enough\n    // usage of relative position is impossible due to overwrite of overflow-x\n    if (interior && isInteriorPosition(position)) {\n      if (position.dropUp) {\n        target.style.bottom = position.bottom;\n      } else {\n        target.style.top = position.top;\n      }\n      target.style.left = position.left;\n    }\n\n    if (position.dropUp && position.dropLeft) {\n      setPosition('top-left');\n    } else if (position.dropUp) {\n      setPosition('top-right');\n    } else if (position.dropLeft) {\n      setPosition('bottom-left');\n    } else {\n      setPosition('bottom-right');\n    }\n  };\n\n  useLayoutEffect(() => {\n    const onDropdownOpen = () => {\n      if (open && dropdownRef.current && triggerRef.current && verticalContainerRef.current) {\n        // calculate scroll width only for dropdowns that has a scrollbar and ignore it for date picker components\n        if (scrollable) {\n          dropdownRef.current.classList.add(styles.nowrap);\n        }\n        setDropdownPosition(\n          ...calculatePosition(\n            dropdownRef.current,\n            triggerRef.current,\n            verticalContainerRef.current,\n            interior,\n            expandToViewport,\n            preferCenter,\n            stretchWidth,\n            stretchHeight,\n            isMobile,\n            minWidth\n          ),\n          dropdownRef.current,\n          verticalContainerRef.current\n        );\n        if (scrollable) {\n          dropdownRef.current.classList.remove(styles.nowrap);\n        }\n      }\n    };\n    onDropdownOpen();\n\n    if (open) {\n      // window may scroll when dropdown opens, for example when soft keyboard shows up\n      window.addEventListener('scroll', onDropdownOpen);\n      // only listen to window scroll within very short time after the dropdown opens\n      // do not want to interfere dropdown position on scroll afterwards\n      const timeoutId = setTimeout(() => {\n        window.removeEventListener('scroll', onDropdownOpen);\n      }, 500);\n\n      return () => {\n        clearTimeout(timeoutId);\n        window.removeEventListener('scroll', onDropdownOpen);\n      };\n    }\n    // See AWSUI-13040\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, dropdownRef, triggerRef, verticalContainerRef, interior, stretchWidth, isMobile, contentKey]);\n\n  // subscribe to outside click\n  useEffect(() => {\n    if (!open) {\n      return;\n    }\n    const clickListener = (e: MouseEvent) => {\n      if (!dropdownRef.current?.contains(e.target as Node)) {\n        fireNonCancelableEvent(onDropdownClose);\n      }\n    };\n\n    /*\n     * This small delay allows the event that opened the dropdown to\n     * finish bubbling, so that it is not immediately captured here.\n     */\n    const timeout = setTimeout(() => {\n      window.addEventListener('click', clickListener);\n    }, 0);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('click', clickListener);\n    };\n  }, [open, onDropdownClose]);\n\n  // sync dropdown position on scroll and resize\n  useLayoutEffect(() => {\n    if (!expandToViewport || !open) {\n      return;\n    }\n    const updateDropdownPosition = () => {\n      if (triggerRef.current && dropdownRef.current && verticalContainerRef.current) {\n        const triggerRect = triggerRef.current.getBoundingClientRect();\n        const target = dropdownRef.current;\n        if (fixedPosition.current) {\n          if (fixedPosition.current.dropUp) {\n            dropdownRef.current.style.bottom = `calc(100% - ${triggerRect.top}px)`;\n          } else {\n            target.style.top = `${triggerRect.bottom}px`;\n          }\n          if (fixedPosition.current.dropLeft) {\n            target.style.left = `calc(${triggerRect.right}px - ${fixedPosition.current.width})`;\n          } else {\n            target.style.left = `${triggerRect.left}px`;\n          }\n        }\n      }\n    };\n\n    updateDropdownPosition();\n\n    window.addEventListener('scroll', updateDropdownPosition, true);\n    window.addEventListener('resize', updateDropdownPosition, true);\n    return () => {\n      window.removeEventListener('scroll', updateDropdownPosition, true);\n      window.removeEventListener('resize', updateDropdownPosition, true);\n    };\n  }, [open, expandToViewport]);\n\n  return (\n    <div\n      className={clsx(\n        styles.root,\n        interior && styles.interior,\n        stretchTriggerHeight && styles['stretch-trigger-height']\n      )}\n    >\n      <div className={clsx(stretchTriggerHeight && styles['stretch-trigger-height'])} ref={triggerRef}>\n        {trigger}\n      </div>\n\n      <TabTrap\n        focusNextCallback={() => dropdownRef.current && getFirstFocusable(dropdownRef.current)?.focus()}\n        disabled={!open || !trapFocus}\n      />\n\n      <DropdownContainer renderWithPortal={expandToViewport && !interior} id={dropdownId} open={open}>\n        <Transition in={open ?? false} exit={false}>\n          {(state, ref) => (\n            <div onBlur={event => trapFocus && event.stopPropagation()}>\n              <TabTrap\n                focusNextCallback={() => triggerRef.current && getLastFocusable(triggerRef.current)?.focus()}\n                disabled={!open || !trapFocus}\n              />\n\n              <TransitionContent\n                state={state}\n                transitionRef={ref}\n                dropdownClasses={dropdownClasses}\n                open={open}\n                stretchWidth={stretchWidth}\n                interior={interior}\n                header={header}\n                expandToViewport={expandToViewport}\n                footer={footer}\n                onMouseDown={onMouseDown}\n                isRefresh={isRefresh}\n                dropdownRef={dropdownRef}\n                verticalContainerRef={verticalContainerRef}\n                position={position}\n              >\n                {children}\n              </TransitionContent>\n\n              <TabTrap\n                focusNextCallback={() => triggerRef.current && getFirstFocusable(triggerRef.current)?.focus()}\n                disabled={!open || !trapFocus}\n              />\n            </div>\n          )}\n        </Transition>\n      </DropdownContainer>\n    </div>\n  );\n};\n\nconst isInteriorPosition = (\n  position: DropdownPosition | InteriorDropdownPosition\n): position is InteriorDropdownPosition => (position as InteriorDropdownPosition).bottom !== undefined;\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}