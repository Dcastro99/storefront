{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport InternalInput from '../input/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nvar InternalTextFilter = React.forwardRef(function (_a, ref) {\n  var filteringText = _a.filteringText,\n    filteringAriaLabel = _a.filteringAriaLabel,\n    filteringPlaceholder = _a.filteringPlaceholder,\n    disabled = _a.disabled,\n    countText = _a.countText,\n    onChange = _a.onChange,\n    onDelayedChange = _a.onDelayedChange,\n    __internalRootRef = _a.__internalRootRef,\n    rest = __rest(_a, [\"filteringText\", \"filteringAriaLabel\", \"filteringPlaceholder\", \"disabled\", \"countText\", \"onChange\", \"onDelayedChange\", \"__internalRootRef\"]);\n  var inputRef = useRef(null);\n  var baseProps = getBaseProps(rest);\n  useForwardFocus(ref, inputRef);\n  var showResults = filteringText && countText && !disabled;\n  return React.createElement(\"span\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), React.createElement(InternalInput, {\n    ref: inputRef,\n    className: styles.input,\n    type: \"search\",\n    ariaLabel: filteringAriaLabel,\n    placeholder: filteringPlaceholder,\n    value: filteringText,\n    disabled: disabled,\n    autoComplete: false,\n    onChange: function (event) {\n      return fireNonCancelableEvent(onChange, {\n        filteringText: event.detail.value\n      });\n    },\n    __onDelayedInput: function (event) {\n      return fireNonCancelableEvent(onDelayedChange, {\n        filteringText: event.detail.value\n      });\n    }\n  }), React.createElement(\"span\", {\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\",\n    className: clsx(styles.results, showResults && styles['results-visible'])\n  }, showResults ? countText : ''));\n});\nexport default InternalTextFilter;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAASC,sBAAsB,QAAQ,oBAAoB;AAC3D,OAAOC,MAAM,MAAM,iBAAiB;AAMpC,IAAMC,kBAAkB,GAAGP,KAAK,CAACQ,UAAU,CACzC,UACEC,EAU0B,EAC1BC,GAAmC;EAVjC,iBAAa;IACbC,kBAAkB;IAClBC,oBAAoB;IACpBC,QAAQ;IACRC,SAAS;IACTC,QAAQ;IACRC,eAAe;IACfC,iBAAiB;IACdC,IAAI,cATT,4IAUC,CADQ;EAIT,IAAMC,QAAQ,GAAGlB,MAAM,CAAmB,IAAI,CAAC;EAC/C,IAAMmB,SAAS,GAAGjB,YAAY,CAACe,IAAI,CAAC;EACpCd,eAAe,CAACM,GAAG,EAAES,QAAQ,CAAC;EAC9B,IAAME,WAAW,GAAGC,aAAa,IAAIR,SAAS,IAAI,CAACD,QAAQ;EAE3D,OACEb,yCAAUoB,SAAS;IAAEG,SAAS,EAAExB,IAAI,CAACqB,SAAS,CAACG,SAAS,EAAEjB,MAAM,CAACkB,IAAI,CAAC;IAAEd,GAAG,EAAEO;EAAiB,IAC5FjB,oBAACE,aAAa;IACZQ,GAAG,EAAES,QAAQ;IACbI,SAAS,EAAEjB,MAAM,CAACmB,KAAK;IACvBC,IAAI,EAAC,QAAQ;IACbC,SAAS,EAAEhB,kBAAkB;IAC7BiB,WAAW,EAAEhB,oBAAoB;IACjCiB,KAAK,EAAEP,aAAa;IACpBT,QAAQ,EAAEA,QAAQ;IAClBiB,YAAY,EAAE,KAAK;IACnBf,QAAQ,EAAE,eAAK;MAAI,6BAAsB,CAACA,QAAQ,EAAE;QAAEO,aAAa,EAAES,KAAK,CAACC,MAAM,CAACH;MAAK,CAAE,CAAC;IAAvE,CAAuE;IAC1FI,gBAAgB,EAAE,eAAK;MAAI,6BAAsB,CAACjB,eAAe,EAAE;QAAEM,aAAa,EAAES,KAAK,CAACC,MAAM,CAACH;MAAK,CAAE,CAAC;IAA9E;EAA8E,EACzG,EACF7B;IAAA,aACY,QAAQ;IAAA,eACN,MAAM;IAClBuB,SAAS,EAAExB,IAAI,CAACO,MAAM,CAAC4B,OAAO,EAAEb,WAAW,IAAIf,MAAM,CAAC,iBAAiB,CAAC;EAAC,GAExEe,WAAW,GAAGP,SAAS,GAAG,EAAE,CACxB,CACF;AAEX,CAAC,CACF;AAED,eAAeP,kBAAkB","names":["clsx","React","useRef","InternalInput","getBaseProps","useForwardFocus","fireNonCancelableEvent","styles","InternalTextFilter","forwardRef","_a","ref","filteringAriaLabel","filteringPlaceholder","disabled","countText","onChange","onDelayedChange","__internalRootRef","rest","inputRef","baseProps","showResults","filteringText","className","root","input","type","ariaLabel","placeholder","value","autoComplete","event","detail","__onDelayedInput","results"],"sources":["/Users/dcastro/node_modules/src/text-filter/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport InternalInput from '../input/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { TextFilterProps } from './interfaces';\n\ntype InternalTextFilterProps = TextFilterProps & InternalBaseComponentProps;\n\nconst InternalTextFilter = React.forwardRef(\n  (\n    {\n      filteringText,\n      filteringAriaLabel,\n      filteringPlaceholder,\n      disabled,\n      countText,\n      onChange,\n      onDelayedChange,\n      __internalRootRef,\n      ...rest\n    }: InternalTextFilterProps,\n    ref: React.Ref<TextFilterProps.Ref>\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const baseProps = getBaseProps(rest);\n    useForwardFocus(ref, inputRef);\n    const showResults = filteringText && countText && !disabled;\n\n    return (\n      <span {...baseProps} className={clsx(baseProps.className, styles.root)} ref={__internalRootRef}>\n        <InternalInput\n          ref={inputRef}\n          className={styles.input}\n          type=\"search\"\n          ariaLabel={filteringAriaLabel}\n          placeholder={filteringPlaceholder}\n          value={filteringText}\n          disabled={disabled}\n          autoComplete={false}\n          onChange={event => fireNonCancelableEvent(onChange, { filteringText: event.detail.value })}\n          __onDelayedInput={event => fireNonCancelableEvent(onDelayedChange, { filteringText: event.detail.value })}\n        />\n        <span\n          aria-live=\"polite\"\n          aria-atomic=\"true\"\n          className={clsx(styles.results, showResults && styles['results-visible'])}\n        >\n          {showResults ? countText : ''}\n        </span>\n      </span>\n    );\n  }\n);\n\nexport default InternalTextFilter;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}