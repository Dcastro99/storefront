{"ast":null,"code":"export function setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus) {\n  ace.config.loadModule('ace/ext/language_tools', function () {\n    editor.setOptions({\n      displayIndentGuides: false,\n      enableSnippets: true,\n      enableBasicAutocompletion: true\n    });\n  });\n  editor.setAutoScrollEditorIntoView(true);\n  // To display cursor position in status bar\n  editor.session.selection.on('changeCursor', function () {\n    setCursorPosition(editor.getCursorPosition());\n  });\n  editor.session.on('changeAnnotation', function () {\n    var editorAnnotations = editor.session.getAnnotations();\n    var newAnnotations = editorAnnotations.filter(function (a) {\n      return a.type !== 'info';\n    });\n    if (editorAnnotations.length !== newAnnotations.length) {\n      editor.session.setAnnotations(newAnnotations);\n    }\n    setAnnotations(newAnnotations);\n  });\n  editor.commands.addCommand({\n    name: 'exitCodeEditor',\n    bindKey: 'Esc',\n    exec: function () {\n      editor.container.focus();\n    }\n  });\n  editor.on('focus', function () {\n    editor.textInput.getElement().setAttribute('tabindex', 0);\n  });\n  editor.on('blur', function () {\n    editor.textInput.getElement().setAttribute('tabindex', -1);\n  });\n  // prevent users to step into editor directly by keyboard\n  editor.textInput.getElement().setAttribute('tabindex', -1);\n  editor.commands.removeCommand('showSettingsMenu', false);\n  // Prevent default behavior on error/warning icon click\n  editor.on('guttermousedown', function (e) {\n    e.stop();\n  });\n  var moveCursorToAnnotation = function (a) {\n    if (typeof a.row === 'number') {\n      editor.gotoLine(a.row + 1, a.column || 0, false);\n    }\n  };\n  // open error/warning pane when user clicks on gutter icon\n  editor.on('gutterclick', function (e) {\n    var row = e.getDocumentPosition().row;\n    var currentAnnotations = editor.session.getAnnotations().filter(function (a) {\n      return a.row === row && a.type !== 'info';\n    });\n    var errors = currentAnnotations.filter(function (a) {\n      return a.type === 'error';\n    });\n    if (errors.length > 0) {\n      setHighlightedAnnotation(errors[0]);\n      setPaneStatus('error');\n      moveCursorToAnnotation(errors[0]);\n    } else if (currentAnnotations.length > 0) {\n      setHighlightedAnnotation(currentAnnotations[0]);\n      setPaneStatus('warning');\n      moveCursorToAnnotation(currentAnnotations[0]);\n    } else {\n      setHighlightedAnnotation(undefined);\n      setPaneStatus('hidden');\n      editor.gotoLine(row + 1, 0, false);\n    }\n  });\n  // HACK: Wrapped lines are highlighted individually. This is seriously the recommended fix.\n  // See: https://github.com/ajaxorg/ace/issues/3067\n  editor.setHighlightActiveLine(false);\n  editor.$updateHighlightActiveLine = function () {\n    var session = this.getSession();\n    var highlight;\n    if (this.$highlightActiveLine) {\n      if (this.$selectionStyle !== 'line' || !this.selection.isMultiLine()) {\n        highlight = this.getCursorPosition();\n      }\n      if (this.renderer.$maxLines && this.session.getLength() === 1 && !(this.renderer.$minLines > 1)) {\n        highlight = false;\n      }\n    }\n    if (session.$highlightLineMarker && !highlight) {\n      session.removeMarker(session.$highlightLineMarker.id);\n      session.$highlightLineMarker = null;\n    } else if (!session.$highlightLineMarker && highlight) {\n      var range = new ace.Range(highlight.row, 0, highlight.row, Infinity);\n      range.id = session.addMarker(range, 'ace_active-line', 'fullLine');\n      session.$highlightLineMarker = range;\n    } else if (highlight) {\n      session.$highlightLineMarker.start.row = highlight.row;\n      session.$highlightLineMarker.end.row = highlight.row;\n      session.$highlightLineMarker.start.column = 0;\n      session._signal('changeBackMarker');\n    }\n  };\n  editor.setHighlightActiveLine(true);\n  // HACK: Annotations aren't cleared when editor is empty.\n  editor.on('change', function () {\n    if (editor.getValue().length === 0) {\n      editor.session.clearAnnotations();\n    }\n  });\n  // HACK: \"disable\" error tooltips by hiding them as soon as they appear.\n  // See https://github.com/ajaxorg/ace/issues/4004\n  editor.on('showGutterTooltip', function (tooltip) {\n    tooltip.hide();\n  });\n}","map":{"version":3,"mappings":"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","names":["setupEditor","ace","editor","setAnnotations","setCursorPosition","setHighlightedAnnotation","setPaneStatus","config","loadModule","setOptions","displayIndentGuides","enableSnippets","enableBasicAutocompletion","setAutoScrollEditorIntoView","session","selection","on","getCursorPosition","editorAnnotations","getAnnotations","newAnnotations","filter","type","length","commands","addCommand","name","bindKey","exec","container","focus","textInput","getElement","setAttribute","removeCommand","e","stop","moveCursorToAnnotation","a","row","gotoLine","column","getDocumentPosition","currentAnnotations","errors","undefined","setHighlightActiveLine","$updateHighlightActiveLine","getSession","highlight","$highlightActiveLine","$selectionStyle","isMultiLine","renderer","$maxLines","getLength","$minLines","$highlightLineMarker","removeMarker","id","range","Range","Infinity","addMarker","start","end","_signal","getValue","clearAnnotations","tooltip","hide"],"sources":["/Users/dcastro/node_modules/src/code-editor/setup-editor.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { Ace } from 'ace-builds';\nimport { PaneStatus } from './util';\n\nexport function setupEditor(\n  ace: any,\n  editor: Ace.Editor,\n  setAnnotations: React.Dispatch<React.SetStateAction<Ace.Annotation[]>>,\n  setCursorPosition: React.Dispatch<React.SetStateAction<Ace.Point>>,\n  setHighlightedAnnotation: React.Dispatch<React.SetStateAction<Ace.Annotation | undefined>>,\n  setPaneStatus: React.Dispatch<React.SetStateAction<PaneStatus>>\n) {\n  ace.config.loadModule('ace/ext/language_tools', function () {\n    editor.setOptions({\n      displayIndentGuides: false,\n      enableSnippets: true,\n      enableBasicAutocompletion: true,\n    });\n  });\n\n  editor.setAutoScrollEditorIntoView(true);\n\n  // To display cursor position in status bar\n  editor.session.selection.on('changeCursor', () => {\n    setCursorPosition(editor.getCursorPosition());\n  });\n\n  editor.session.on('changeAnnotation' as any, () => {\n    const editorAnnotations = editor.session.getAnnotations();\n    const newAnnotations = editorAnnotations.filter(a => a.type !== 'info');\n    if (editorAnnotations.length !== newAnnotations.length) {\n      editor.session.setAnnotations(newAnnotations);\n    }\n    setAnnotations(newAnnotations);\n  });\n\n  editor.commands.addCommand({\n    name: 'exitCodeEditor',\n    bindKey: 'Esc',\n    exec: () => {\n      editor.container.focus();\n    },\n  });\n\n  editor.on('focus', () => {\n    (editor as any).textInput.getElement().setAttribute('tabindex', 0);\n  });\n\n  editor.on('blur', () => {\n    (editor as any).textInput.getElement().setAttribute('tabindex', -1);\n  });\n\n  // prevent users to step into editor directly by keyboard\n  (editor as any).textInput.getElement().setAttribute('tabindex', -1);\n\n  editor.commands.removeCommand('showSettingsMenu', false);\n\n  // Prevent default behavior on error/warning icon click\n  editor.on('guttermousedown' as any, (e: any) => {\n    e.stop();\n  });\n\n  const moveCursorToAnnotation = (a: Ace.Annotation) => {\n    if (typeof a.row === 'number') {\n      editor.gotoLine(a.row + 1, a.column || 0, false);\n    }\n  };\n\n  // open error/warning pane when user clicks on gutter icon\n  editor.on('gutterclick' as any, (e: any) => {\n    const { row }: Ace.Point = e.getDocumentPosition();\n    const currentAnnotations = editor.session.getAnnotations().filter(a => a.row === row && a.type !== 'info');\n    const errors = currentAnnotations.filter(a => a.type === 'error');\n    if (errors.length > 0) {\n      setHighlightedAnnotation(errors[0]);\n      setPaneStatus('error');\n      moveCursorToAnnotation(errors[0]);\n    } else if (currentAnnotations.length > 0) {\n      setHighlightedAnnotation(currentAnnotations[0]);\n      setPaneStatus('warning');\n      moveCursorToAnnotation(currentAnnotations[0]);\n    } else {\n      setHighlightedAnnotation(undefined);\n      setPaneStatus('hidden');\n      editor.gotoLine(row + 1, 0, false);\n    }\n  });\n\n  // HACK: Wrapped lines are highlighted individually. This is seriously the recommended fix.\n  // See: https://github.com/ajaxorg/ace/issues/3067\n  editor.setHighlightActiveLine(false);\n  (editor as any).$updateHighlightActiveLine = function () {\n    const session = this.getSession();\n\n    let highlight;\n    if (this.$highlightActiveLine) {\n      if (this.$selectionStyle !== 'line' || !this.selection.isMultiLine()) {\n        highlight = this.getCursorPosition();\n      }\n      if (this.renderer.$maxLines && this.session.getLength() === 1 && !(this.renderer.$minLines > 1)) {\n        highlight = false;\n      }\n    }\n\n    if (session.$highlightLineMarker && !highlight) {\n      session.removeMarker(session.$highlightLineMarker.id);\n      session.$highlightLineMarker = null;\n    } else if (!session.$highlightLineMarker && highlight) {\n      const range = new ace.Range(highlight.row, 0, highlight.row, Infinity);\n      (range as any).id = session.addMarker(range, 'ace_active-line', 'fullLine');\n      session.$highlightLineMarker = range;\n    } else if (highlight) {\n      session.$highlightLineMarker.start.row = highlight.row;\n      session.$highlightLineMarker.end.row = highlight.row;\n      session.$highlightLineMarker.start.column = 0;\n      session._signal('changeBackMarker');\n    }\n  };\n\n  editor.setHighlightActiveLine(true);\n\n  // HACK: Annotations aren't cleared when editor is empty.\n  editor.on('change', () => {\n    if (editor.getValue().length === 0) {\n      editor.session.clearAnnotations();\n    }\n  });\n\n  // HACK: \"disable\" error tooltips by hiding them as soon as they appear.\n  // See https://github.com/ajaxorg/ace/issues/4004\n  editor.on('showGutterTooltip' as any, (tooltip: any) => {\n    tooltip.hide();\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}