{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport InternalBox from '../../../box/internal';\nimport { InternalButton } from '../../../button/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport styles from './styles.css.js';\nimport { fireNonCancelableEvent } from '../../../internal/events/index';\nimport { CongratulationScreen } from './congratulation-screen';\nimport { TaskList } from './task-list';\nimport { useVisualRefresh } from '../../../internal/hooks/use-visual-mode';\nexport default function TutorialDetailView(_a) {\n  var tutorial = _a.tutorial,\n    onExitTutorialHandler = _a.onExitTutorial,\n    _b = _a.currentStepIndex,\n    currentStepIndex = _b === void 0 ? 0 : _b,\n    onFeedbackClickHandler = _a.onFeedbackClick,\n    i18nStrings = _a.i18nStrings;\n  var isRefresh = useVisualRefresh();\n  var onExitTutorial = useCallback(function () {\n    fireNonCancelableEvent(onExitTutorialHandler, {\n      tutorial: tutorial\n    });\n  }, [onExitTutorialHandler, tutorial]);\n  var onFeedbackClick = useCallback(function () {\n    fireNonCancelableEvent(onFeedbackClickHandler, {\n      tutorial: tutorial\n    });\n  }, [onFeedbackClickHandler, tutorial]);\n  return React.createElement(React.Fragment, null, React.createElement(InternalSpaceBetween, {\n    size: \"xl\"\n  }, React.createElement(\"div\", {\n    className: styles['tutorial-title']\n  }, React.createElement(InternalButton, {\n    variant: \"icon\",\n    onClick: onExitTutorial,\n    ariaLabel: i18nStrings.labelExitTutorial,\n    formAction: \"none\",\n    iconName: \"arrow-left\"\n  }), React.createElement(InternalBox, {\n    variant: \"h2\",\n    fontSize: isRefresh ? 'heading-m' : 'heading-l',\n    padding: {\n      top: 'xxs'\n    },\n    margin: {\n      left: 's'\n    }\n  }, tutorial.title)), tutorial.completed ? React.createElement(CongratulationScreen, {\n    onFeedbackClick: onFeedbackClick,\n    i18nStrings: i18nStrings\n  }, tutorial.completedScreenDescription) : React.createElement(TaskList, {\n    tasks: tutorial.tasks,\n    onExitTutorial: onExitTutorial,\n    currentGlobalStepIndex: currentStepIndex,\n    i18nStrings: i18nStrings\n  })));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAE1C,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,SAASC,cAAc,QAAQ,0BAA0B;AACzD,OAAOC,oBAAoB,MAAM,iCAAiC;AAClE,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,sBAAsB,QAAQ,gCAAgC;AAEvE,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,gBAAgB,QAAQ,yCAAyC;AAE1E,eAAc,SAAUC,kBAAkB,CAACC,EAY1C;MAXCC,QAAQ;IACQC,qBAAqB;IACrCC,wBAAoB;IAApBC,gBAAgB,mBAAG,CAAC;IACHC,sBAAsB;IACvCC,WAAW;EAQX,IAAMC,SAAS,GAAGT,gBAAgB,EAAE;EAEpC,IAAMU,cAAc,GAAGlB,WAAW,CAAC;IACjCK,sBAAsB,CAACO,qBAAqB,EAAE;MAAED,QAAQ;IAAA,CAAE,CAAC;EAC7D,CAAC,EAAE,CAACC,qBAAqB,EAAED,QAAQ,CAAC,CAAC;EAErC,IAAMQ,eAAe,GAAGnB,WAAW,CAAC;IAClCK,sBAAsB,CAACU,sBAAsB,EAAE;MAAEJ,QAAQ;IAAA,CAAE,CAAC;EAC9D,CAAC,EAAE,CAACI,sBAAsB,EAAEJ,QAAQ,CAAC,CAAC;EAEtC,OACEZ,0CACEA,oBAACI,oBAAoB;IAACiB,IAAI,EAAC;EAAI,GAC7BrB;IAAKsB,SAAS,EAAEjB,MAAM,CAAC,gBAAgB;EAAC,GACtCL,oBAACG,cAAc;IACboB,OAAO,EAAC,MAAM;IACdC,OAAO,EAAEL,cAAc;IACvBM,SAAS,EAAER,WAAW,CAACS,iBAAiB;IACxCC,UAAU,EAAC,MAAM;IACjBC,QAAQ,EAAC;EAAY,EACrB,EAEF5B,oBAACE,WAAW;IACVqB,OAAO,EAAC,IAAI;IACZM,QAAQ,EAAEX,SAAS,GAAG,WAAW,GAAG,WAAW;IAC/CY,OAAO,EAAE;MAAEC,GAAG,EAAE;IAAK,CAAE;IACvBC,MAAM,EAAE;MAAEC,IAAI,EAAE;IAAG;EAAE,GAEpBrB,QAAQ,CAACsB,KAAK,CACH,CACV,EACLtB,QAAQ,CAACuB,SAAS,GACjBnC,oBAACO,oBAAoB;IAACa,eAAe,EAAEA,eAAe;IAAEH,WAAW,EAAEA;EAAW,GAC7EL,QAAQ,CAACwB,0BAA0B,CACf,GAEvBpC,oBAACQ,QAAQ;IACP6B,KAAK,EAAEzB,QAAQ,CAACyB,KAAK;IACrBlB,cAAc,EAAEA,cAAc;IAC9BmB,sBAAsB,EAAEvB,gBAAgB;IACxCE,WAAW,EAAEA;EAAW,EAE3B,CACoB,CACtB;AAEP","names":["React","useCallback","InternalBox","InternalButton","InternalSpaceBetween","styles","fireNonCancelableEvent","CongratulationScreen","TaskList","useVisualRefresh","TutorialDetailView","_a","tutorial","onExitTutorialHandler","_b","currentStepIndex","onFeedbackClickHandler","i18nStrings","isRefresh","onExitTutorial","onFeedbackClick","size","className","variant","onClick","ariaLabel","labelExitTutorial","formAction","iconName","fontSize","padding","top","margin","left","title","completed","completedScreenDescription","tasks","currentGlobalStepIndex"],"sources":["/Users/dcastro/node_modules/src/tutorial-panel/components/tutorial-detail-view/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport { TutorialPanelProps } from '../../interfaces';\nimport InternalBox from '../../../box/internal';\nimport { InternalButton } from '../../../button/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport styles from './styles.css.js';\nimport { fireNonCancelableEvent } from '../../../internal/events/index';\nimport { HotspotContext } from '../../../annotation-context/context';\nimport { CongratulationScreen } from './congratulation-screen';\nimport { TaskList } from './task-list';\nimport { useVisualRefresh } from '../../../internal/hooks/use-visual-mode';\n\nexport default function TutorialDetailView({\n  tutorial,\n  onExitTutorial: onExitTutorialHandler,\n  currentStepIndex = 0,\n  onFeedbackClick: onFeedbackClickHandler,\n  i18nStrings,\n}: {\n  tutorial: TutorialPanelProps.Tutorial;\n  onExitTutorial: HotspotContext['onExitTutorial'];\n  currentStepIndex: HotspotContext['currentStepIndex'];\n  onFeedbackClick: TutorialPanelProps['onFeedbackClick'];\n  i18nStrings: TutorialPanelProps['i18nStrings'];\n}) {\n  const isRefresh = useVisualRefresh();\n\n  const onExitTutorial = useCallback(() => {\n    fireNonCancelableEvent(onExitTutorialHandler, { tutorial });\n  }, [onExitTutorialHandler, tutorial]);\n\n  const onFeedbackClick = useCallback(() => {\n    fireNonCancelableEvent(onFeedbackClickHandler, { tutorial });\n  }, [onFeedbackClickHandler, tutorial]);\n\n  return (\n    <>\n      <InternalSpaceBetween size=\"xl\">\n        <div className={styles['tutorial-title']}>\n          <InternalButton\n            variant=\"icon\"\n            onClick={onExitTutorial}\n            ariaLabel={i18nStrings.labelExitTutorial}\n            formAction=\"none\"\n            iconName=\"arrow-left\"\n          />\n\n          <InternalBox\n            variant=\"h2\"\n            fontSize={isRefresh ? 'heading-m' : 'heading-l'}\n            padding={{ top: 'xxs' }}\n            margin={{ left: 's' }}\n          >\n            {tutorial.title}\n          </InternalBox>\n        </div>\n        {tutorial.completed ? (\n          <CongratulationScreen onFeedbackClick={onFeedbackClick} i18nStrings={i18nStrings}>\n            {tutorial.completedScreenDescription}\n          </CongratulationScreen>\n        ) : (\n          <TaskList\n            tasks={tutorial.tasks}\n            onExitTutorial={onExitTutorial}\n            currentGlobalStepIndex={currentStepIndex}\n            i18nStrings={i18nStrings}\n          />\n        )}\n      </InternalSpaceBetween>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}