{"ast":null,"code":"import { KeyCode } from '../../internal/keycode';\nvar KEYBOARD_SINGLE_STEP_SIZE = 10;\nvar KEYBOARD_MULTIPLE_STEPS_SIZE = 60;\nvar getCurrentSize = function (splitPanelRef) {\n  if (!splitPanelRef || !splitPanelRef.current) {\n    return {\n      splitPanelHeight: 0,\n      splitPanelWidth: 0\n    };\n  }\n  var safeParseFloat = function (size) {\n    if (size === void 0) {\n      size = '';\n    }\n    return parseFloat(size) || 0;\n  };\n  return {\n    splitPanelHeight: safeParseFloat(splitPanelRef.current.style.height),\n    splitPanelWidth: safeParseFloat(splitPanelRef.current.style.width)\n  };\n};\nexport var useKeyboardEvents = function (_a) {\n  var position = _a.position,\n    setSidePanelWidth = _a.setSidePanelWidth,\n    setBottomPanelHeight = _a.setBottomPanelHeight,\n    splitPanelRef = _a.splitPanelRef;\n  return function (event) {\n    var setSizeFunction;\n    var currentSize;\n    var maxSize;\n    var _a = getCurrentSize(splitPanelRef),\n      splitPanelHeight = _a.splitPanelHeight,\n      splitPanelWidth = _a.splitPanelWidth;\n    if (position === 'side') {\n      setSizeFunction = setSidePanelWidth;\n      currentSize = splitPanelWidth;\n      // don't need the exact max size as it's constrained in the set size function\n      maxSize = window.innerWidth;\n    } else {\n      setSizeFunction = setBottomPanelHeight;\n      currentSize = splitPanelHeight;\n      // don't need the exact max size as it's constrained in the set size function\n      maxSize = window.innerHeight;\n    }\n    var isEventHandled = true;\n    switch (event.keyCode) {\n      case KeyCode.left:\n      case KeyCode.up:\n        setSizeFunction(currentSize + KEYBOARD_SINGLE_STEP_SIZE);\n        break;\n      case KeyCode.right:\n      case KeyCode.down:\n        setSizeFunction(currentSize - KEYBOARD_SINGLE_STEP_SIZE);\n        break;\n      case KeyCode.pageUp:\n        setSizeFunction(currentSize + KEYBOARD_MULTIPLE_STEPS_SIZE);\n        break;\n      case KeyCode.pageDown:\n        setSizeFunction(currentSize - KEYBOARD_MULTIPLE_STEPS_SIZE);\n        break;\n      case KeyCode.home:\n        setSizeFunction(maxSize);\n        break;\n      case KeyCode.end:\n        setSizeFunction(0);\n        break;\n      default:\n        isEventHandled = false;\n    }\n    if (isEventHandled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n};","map":{"version":3,"mappings":"AAGA,SAASA,OAAO,QAAQ,wBAAwB;AAGhD,IAAMC,yBAAyB,GAAG,EAAE;AACpC,IAAMC,4BAA4B,GAAG,EAAE;AAEvC,IAAMC,cAAc,GAAG,UAACC,aAA+C;EACrE,IAAI,CAACA,aAAa,IAAI,CAACA,aAAa,CAACC,OAAO,EAAE;IAC5C,OAAO;MACLC,gBAAgB,EAAE,CAAC;MACnBC,eAAe,EAAE;KAClB;;EAGH,IAAMC,cAAc,GAAG,UAACC,IAAS;IAAT;MAAAA,SAAS;IAAA;IAAK,iBAAU,CAACA,IAAI,CAAC,IAAI,CAAC;EAArB,CAAqB;EAE3D,OAAO;IACLH,gBAAgB,EAAEE,cAAc,CAACJ,aAAa,CAACC,OAAO,CAACK,KAAK,CAACC,MAAM,CAAC;IACpEJ,eAAe,EAAEC,cAAc,CAACJ,aAAa,CAACC,OAAO,CAACK,KAAK,CAACE,KAAK;GAClE;AACH,CAAC;AAED,OAAO,IAAMC,iBAAiB,GAAG,UAACC,EAKf;MAJjBC,QAAQ;IACRC,iBAAiB;IACjBC,oBAAoB;IACpBb,aAAa;EAEb,OAAO,UAACc,KAA0B;IAChC,IAAIC,eAAe;IACnB,IAAIC,WAAW;IACf,IAAIC,OAAO;IAEL,SAAwClB,cAAc,CAACC,aAAa,CAAC;MAAnEE,gBAAgB;MAAEC,eAAe,qBAAkC;IAE3E,IAAIQ,QAAQ,KAAK,MAAM,EAAE;MACvBI,eAAe,GAAGH,iBAAiB;MACnCI,WAAW,GAAGb,eAAe;MAC7B;MACAc,OAAO,GAAGC,MAAM,CAACC,UAAU;KAC5B,MAAM;MACLJ,eAAe,GAAGF,oBAAoB;MACtCG,WAAW,GAAGd,gBAAgB;MAC9B;MACAe,OAAO,GAAGC,MAAM,CAACE,WAAW;;IAG9B,IAAIC,cAAc,GAAG,IAAI;IACzB,QAAQP,KAAK,CAACQ,OAAO;MACnB,KAAK1B,OAAO,CAAC2B,IAAI;MACjB,KAAK3B,OAAO,CAAC4B,EAAE;QACbT,eAAe,CAACC,WAAW,GAAGnB,yBAAyB,CAAC;QACxD;MACF,KAAKD,OAAO,CAAC6B,KAAK;MAClB,KAAK7B,OAAO,CAAC8B,IAAI;QACfX,eAAe,CAACC,WAAW,GAAGnB,yBAAyB,CAAC;QACxD;MACF,KAAKD,OAAO,CAAC+B,MAAM;QACjBZ,eAAe,CAACC,WAAW,GAAGlB,4BAA4B,CAAC;QAC3D;MACF,KAAKF,OAAO,CAACgC,QAAQ;QACnBb,eAAe,CAACC,WAAW,GAAGlB,4BAA4B,CAAC;QAC3D;MACF,KAAKF,OAAO,CAACiC,IAAI;QACfd,eAAe,CAACE,OAAO,CAAC;QACxB;MACF,KAAKrB,OAAO,CAACkC,GAAG;QACdf,eAAe,CAAC,CAAC,CAAC;QAClB;MACF;QACEM,cAAc,GAAG,KAAK;IAAC;IAG3B,IAAIA,cAAc,EAAE;MAClBP,KAAK,CAACiB,cAAc,EAAE;MACtBjB,KAAK,CAACkB,eAAe,EAAE;;EAE3B,CAAC;AACH,CAAC","names":["KeyCode","KEYBOARD_SINGLE_STEP_SIZE","KEYBOARD_MULTIPLE_STEPS_SIZE","getCurrentSize","splitPanelRef","current","splitPanelHeight","splitPanelWidth","safeParseFloat","size","style","height","width","useKeyboardEvents","_a","position","setSidePanelWidth","setBottomPanelHeight","event","setSizeFunction","currentSize","maxSize","window","innerWidth","innerHeight","isEventHandled","keyCode","left","up","right","down","pageUp","pageDown","home","end","preventDefault","stopPropagation"],"sources":["/Users/dcastro/node_modules/src/split-panel/utils/use-keyboard-events.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { KeyCode } from '../../internal/keycode';\nimport { SizeControlProps } from '../interfaces';\n\nconst KEYBOARD_SINGLE_STEP_SIZE = 10;\nconst KEYBOARD_MULTIPLE_STEPS_SIZE = 60;\n\nconst getCurrentSize = (splitPanelRef?: React.RefObject<HTMLDivElement>) => {\n  if (!splitPanelRef || !splitPanelRef.current) {\n    return {\n      splitPanelHeight: 0,\n      splitPanelWidth: 0,\n    };\n  }\n\n  const safeParseFloat = (size = '') => parseFloat(size) || 0;\n\n  return {\n    splitPanelHeight: safeParseFloat(splitPanelRef.current.style.height),\n    splitPanelWidth: safeParseFloat(splitPanelRef.current.style.width),\n  };\n};\n\nexport const useKeyboardEvents = ({\n  position,\n  setSidePanelWidth,\n  setBottomPanelHeight,\n  splitPanelRef,\n}: SizeControlProps) => {\n  return (event: React.KeyboardEvent) => {\n    let setSizeFunction;\n    let currentSize;\n    let maxSize;\n\n    const { splitPanelHeight, splitPanelWidth } = getCurrentSize(splitPanelRef);\n\n    if (position === 'side') {\n      setSizeFunction = setSidePanelWidth;\n      currentSize = splitPanelWidth;\n      // don't need the exact max size as it's constrained in the set size function\n      maxSize = window.innerWidth;\n    } else {\n      setSizeFunction = setBottomPanelHeight;\n      currentSize = splitPanelHeight;\n      // don't need the exact max size as it's constrained in the set size function\n      maxSize = window.innerHeight;\n    }\n\n    let isEventHandled = true;\n    switch (event.keyCode) {\n      case KeyCode.left:\n      case KeyCode.up:\n        setSizeFunction(currentSize + KEYBOARD_SINGLE_STEP_SIZE);\n        break;\n      case KeyCode.right:\n      case KeyCode.down:\n        setSizeFunction(currentSize - KEYBOARD_SINGLE_STEP_SIZE);\n        break;\n      case KeyCode.pageUp:\n        setSizeFunction(currentSize + KEYBOARD_MULTIPLE_STEPS_SIZE);\n        break;\n      case KeyCode.pageDown:\n        setSizeFunction(currentSize - KEYBOARD_MULTIPLE_STEPS_SIZE);\n        break;\n      case KeyCode.home:\n        setSizeFunction(maxSize);\n        break;\n      case KeyCode.end:\n        setSizeFunction(0);\n        break;\n      default:\n        isEventHandled = false;\n    }\n\n    if (isEventHandled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}