{"ast":null,"code":"import { AceModes } from './ace-modes';\nimport { findUpUntil } from '../internal/utils/dom';\nexport var DEFAULT_LIGHT_THEME = 'dawn';\nexport var DEFAULT_DARK_THEME = 'tomorrow_night_bright';\nexport function getDefaultConfig() {\n  return {\n    behavioursEnabled: true\n  };\n}\nexport function getDefaultTheme(element) {\n  var isDarkMode = !!findUpUntil(element, function (node) {\n    return node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode');\n  });\n  return isDarkMode ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n}\nexport function getAceTheme(theme) {\n  return \"ace/theme/\".concat(theme);\n}\nexport function getLanguageLabel(language) {\n  var _a;\n  return ((_a = AceModes.filter(function (mode) {\n    return mode.value === language;\n  })[0]) === null || _a === void 0 ? void 0 : _a.label) || '';\n}","map":{"version":3,"mappings":"AAIA,SAASA,QAAQ,QAAQ,aAAa;AAGtC,SAASC,WAAW,QAAQ,uBAAuB;AAInD,OAAO,IAAMC,mBAAmB,GAAwC,MAAM;AAC9E,OAAO,IAAMC,kBAAkB,GAAuC,uBAAuB;AAE7F,OAAM,SAAUC,gBAAgB;EAC9B,OAAO;IACLC,iBAAiB,EAAE;GACpB;AACH;AAEA,OAAM,SAAUC,eAAe,CAACC,OAAoB;EAClD,IAAMC,UAAU,GAAG,CAAC,CAACP,WAAW,CAC9BM,OAAO,EACP,cAAI;IAAI,WAAI,CAACE,SAAS,CAACC,QAAQ,CAAC,yBAAyB,CAAC,IAAIC,IAAI,CAACF,SAAS,CAACC,QAAQ,CAAC,iBAAiB,CAAC;EAAhG,CAAgG,CACzG;EACD,OAAOF,UAAU,GAAGL,kBAAkB,GAAGD,mBAAmB;AAC9D;AAEA,OAAM,SAAUU,WAAW,CAACC,KAA4B;EACtD,OAAO,oBAAaA,KAAK,CAAE;AAC7B;AAEA,OAAM,SAAUC,gBAAgB,CAACC,QAAkC;;EACjE,OAAO,eAAQ,CAACC,MAAM,CAAC,UAACC,IAAuB;IAAK,WAAI,CAACC,KAAK,KAAKH,QAAQ;EAAvB,CAAuB,CAAC,CAAC,CAAC,CAAC,0CAAEI,KAAK,KAAI,EAAE;AAC9F","names":["AceModes","findUpUntil","DEFAULT_LIGHT_THEME","DEFAULT_DARK_THEME","getDefaultConfig","behavioursEnabled","getDefaultTheme","element","isDarkMode","classList","contains","node","getAceTheme","theme","getLanguageLabel","language","filter","mode","value","label"],"sources":["/Users/dcastro/node_modules/src/code-editor/util.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Ace } from 'ace-builds';\n\nimport { AceModes } from './ace-modes';\nimport { LightThemes, DarkThemes } from './ace-themes';\nimport { CodeEditorProps } from './interfaces';\nimport { findUpUntil } from '../internal/utils/dom';\n\nexport type PaneStatus = 'error' | 'warning' | 'hidden';\n\nexport const DEFAULT_LIGHT_THEME: typeof LightThemes[number]['value'] = 'dawn';\nexport const DEFAULT_DARK_THEME: typeof DarkThemes[number]['value'] = 'tomorrow_night_bright';\n\nexport function getDefaultConfig(): Partial<Ace.EditorOptions> {\n  return {\n    behavioursEnabled: true,\n  };\n}\n\nexport function getDefaultTheme(element: HTMLElement): CodeEditorProps.Theme {\n  const isDarkMode = !!findUpUntil(\n    element,\n    node => node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode')\n  );\n  return isDarkMode ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n}\n\nexport function getAceTheme(theme: CodeEditorProps.Theme) {\n  return `ace/theme/${theme}`;\n}\n\nexport function getLanguageLabel(language: CodeEditorProps.Language): string {\n  return AceModes.filter((mode: { value: string }) => mode.value === language)[0]?.label || '';\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}