{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getOverflowParents, getOverflowParentDimensions } from '../../utils/scrollable-containers';\nimport styles from './styles.css.js';\nvar AVAILABLE_SPACE_RESERVE_DEFAULT = 50;\nvar AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL = 19; // 50 - 31\nvar AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL = 20;\nvar getClosestParentDimensions = function (element) {\n  var parents = getOverflowParents(element).map(function (el) {\n    var _a = el.getBoundingClientRect(),\n      height = _a.height,\n      width = _a.width,\n      top = _a.top,\n      left = _a.left;\n    return {\n      height: height,\n      width: width,\n      top: top,\n      left: left\n    };\n  });\n  return parents.shift();\n};\nexport var getAvailableSpace = function (trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile) {\n  if (stretchWidth === void 0) {\n    stretchWidth = false;\n  }\n  if (stretchHeight === void 0) {\n    stretchHeight = false;\n  }\n  var availableSpaceReserveVertical = stretchHeight ? 0 : isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  var availableSpaceReserveHorizontal = stretchWidth ? 0 : isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  var _a = trigger.getBoundingClientRect(),\n    triggerBottom = _a.bottom,\n    triggerLeft = _a.left,\n    triggerRight = _a.right;\n  return overflowParents.reduce(function (_a, overflowParent) {\n    var above = _a.above,\n      below = _a.below,\n      left = _a.left,\n      right = _a.right;\n    var offsetTop = triggerBottom - overflowParent.top;\n    var currentAbove = offsetTop - trigger.offsetHeight - availableSpaceReserveVertical;\n    var currentBelow = overflowParent.height - offsetTop - availableSpaceReserveVertical;\n    var currentLeft = triggerRight - overflowParent.left - availableSpaceReserveHorizontal;\n    var currentRight = overflowParent.left + overflowParent.width - triggerLeft - availableSpaceReserveHorizontal;\n    return {\n      above: Math.min(above, currentAbove),\n      below: Math.min(below, currentBelow),\n      left: Math.min(left, currentLeft),\n      right: Math.min(right, currentRight)\n    };\n  }, {\n    above: Number.MAX_VALUE,\n    below: Number.MAX_VALUE,\n    left: Number.MAX_VALUE,\n    right: Number.MAX_VALUE\n  });\n};\nexport var getInteriorAvailableSpace = function (trigger, dropdown, overflowParents, isMobile) {\n  var AVAILABLE_SPACE_RESERVE_VERTICAL = isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  var AVAILABLE_SPACE_RESERVE_HORIZONTAL = isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  var _a = trigger.getBoundingClientRect(),\n    triggerBottom = _a.bottom,\n    triggerTop = _a.top,\n    triggerLeft = _a.left,\n    triggerRight = _a.right;\n  return overflowParents.reduce(function (_a, overflowParent) {\n    var above = _a.above,\n      below = _a.below,\n      left = _a.left,\n      right = _a.right;\n    var currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n    var currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n    var currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n    var currentRight = overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n    return {\n      above: Math.min(above, currentAbove),\n      below: Math.min(below, currentBelow),\n      left: Math.min(left, currentLeft),\n      right: Math.min(right, currentRight)\n    };\n  }, {\n    above: Number.MAX_VALUE,\n    below: Number.MAX_VALUE,\n    left: Number.MAX_VALUE,\n    right: Number.MAX_VALUE\n  });\n};\nexport var getDropdownPosition = function (trigger, dropdown, overflowParents, minWidth, preferCenter, stretchWidth, stretchHeight, isMobile) {\n  if (preferCenter === void 0) {\n    preferCenter = false;\n  }\n  if (stretchWidth === void 0) {\n    stretchWidth = false;\n  }\n  if (stretchHeight === void 0) {\n    stretchHeight = false;\n  }\n  var availableSpace = getAvailableSpace(trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile);\n  var triggerWidth = trigger.getBoundingClientRect().width;\n  minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;\n  var requiredWidth = dropdown.getBoundingClientRect().width;\n  // dropdown should not be smaller than the trigger\n  var idealWidth = Math.max(requiredWidth, minWidth);\n  var dropLeft;\n  var left = null;\n  var width = idealWidth;\n  //1. Can it be positioned with ideal width to the right?\n  if (idealWidth <= availableSpace.right) {\n    dropLeft = false;\n    //2. Can it be positioned with ideal width to the left?\n  } else if (idealWidth <= availableSpace.left) {\n    dropLeft = true;\n    //3. Fit into biggest available space either on left or right\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right, minWidth);\n  }\n  if (preferCenter) {\n    var spillOver = (idealWidth - triggerWidth) / 2;\n    // availableSpace always includes the trigger width, but we want to exclude that\n    var availableOutsideLeft = availableSpace.left - triggerWidth;\n    var availableOutsideRight = availableSpace.right - triggerWidth;\n    var fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;\n    if (fitsInCenter) {\n      left = -spillOver;\n    }\n  }\n  var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  var availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  var croppedHeight = stretchHeight ? availableHeight : Math.floor(availableHeight / 31) * 31 + 16;\n  return {\n    dropUp: dropUp,\n    dropLeft: dropLeft,\n    left: left === null ? 'auto' : \"\".concat(left, \"px\"),\n    height: \"\".concat(croppedHeight, \"px\"),\n    width: \"\".concat(width, \"px\")\n  };\n};\nexport var getInteriorDropdownPosition = function (trigger, dropdown, overflowParents, isMobile) {\n  var availableSpace = getInteriorAvailableSpace(trigger, dropdown, overflowParents, isMobile);\n  var _a = trigger.getBoundingClientRect(),\n    triggerBottom = _a.bottom,\n    triggerTop = _a.top,\n    triggerWidth = _a.width;\n  var _b = getClosestParentDimensions(trigger),\n    parentDropdownTop = _b.top,\n    parentDropdownHeight = _b.height;\n  var dropLeft;\n  var width = dropdown.getBoundingClientRect().width;\n  var top = triggerTop - parentDropdownTop;\n  if (width <= availableSpace.right) {\n    dropLeft = false;\n  } else if (width <= availableSpace.left) {\n    dropLeft = true;\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right);\n  }\n  var left = dropLeft ? 0 - width : triggerWidth;\n  var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  var bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;\n  var availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  var croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n  return {\n    dropUp: dropUp,\n    dropLeft: dropLeft,\n    height: \"\".concat(croppedHeight, \"px\"),\n    width: \"\".concat(width, \"px\"),\n    top: \"\".concat(top, \"px\"),\n    bottom: \"\".concat(bottom, \"px\"),\n    left: \"\".concat(left, \"px\")\n  };\n};\nexport var calculatePosition = function (dropdownElement, triggerElement, verticalContainerElement, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth) {\n  // cleaning previously assigned values,\n  // so that they are not reused in case of screen resize and similar events\n  verticalContainerElement.style.maxHeight = '';\n  dropdownElement.style.width = '';\n  dropdownElement.style.top = '';\n  dropdownElement.style.bottom = '';\n  dropdownElement.style.left = '';\n  dropdownElement.classList.remove(styles['dropdown-drop-left']);\n  dropdownElement.classList.remove(styles['dropdown-drop-right']);\n  dropdownElement.classList.remove(styles['dropdown-drop-up']);\n  var overflowParents = getOverflowParentDimensions(dropdownElement, interior, expandToViewport, stretchHeight);\n  var position = interior ? getInteriorDropdownPosition(triggerElement, dropdownElement, overflowParents, isMobile) : getDropdownPosition(triggerElement, dropdownElement, overflowParents, minWidth, preferCenter, stretchWidth, stretchHeight, isMobile);\n  var triggerBox = triggerElement.getBoundingClientRect();\n  return [position, triggerBox];\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAqBA,kBAAkB,EAAEC,2BAA2B,QAAQ,mCAAmC;AAC/G,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,IAAMC,+BAA+B,GAAG,EAAE;AAC1C,IAAMC,uCAAuC,GAAG,EAAE,CAAC,CAAC;AACpD,IAAMC,yCAAyC,GAAG,EAAE;AAoBpD,IAAMC,0BAA0B,GAAG,UAACC,OAAoB;EACtD,IAAMC,OAAO,GAAGR,kBAAkB,CAACO,OAAO,CAAC,CAACE,GAAG,CAAC,YAAE;IAC1C,SAA+BC,EAAE,CAACC,qBAAqB,EAAE;MAAvDC,MAAM;MAAEC,KAAK;MAAEC,GAAG;MAAEC,IAAI,UAA+B;IAC/D,OAAO;MACLH,MAAM;MACNC,KAAK;MACLC,GAAG;MACHC,IAAI;KACL;EACH,CAAC,CAAC;EAEF,OAAOP,OAAO,CAACQ,KAAK,EAAE;AACxB,CAAC;AAED,OAAO,IAAMC,iBAAiB,GAAG,UAC/BC,OAAoB,EACpBC,QAAqB,EACrBC,eAA0C,EAC1CC,YAAoB,EACpBC,aAAqB,EACrBC,QAAkB;EAFlB;IAAAF,oBAAoB;EAAA;EACpB;IAAAC,qBAAqB;EAAA;EAGrB,IAAME,6BAA6B,GAAGF,aAAa,GAC/C,CAAC,GACDC,QAAQ,GACRnB,uCAAuC,GACvCD,+BAA+B;EACnC,IAAMsB,+BAA+B,GAAGJ,YAAY,GAChD,CAAC,GACDE,QAAQ,GACRlB,yCAAyC,GACzCF,+BAA+B;EAC7B,SAAoEe,OAAO,CAACP,qBAAqB,EAAE;IAAzFe,aAAa;IAAQC,WAAW;IAASC,YAAY,WAAoC;EAEzG,OAAOR,eAAe,CAACS,MAAM,CAC3B,UAACC,EAA6B,EAAEC,cAAc;QAA3CC,KAAK;MAAEC,KAAK;MAAElB,IAAI;MAAEmB,KAAK;IAC1B,IAAMC,SAAS,GAAGT,aAAa,GAAGK,cAAc,CAACjB,GAAG;IACpD,IAAMsB,YAAY,GAAGD,SAAS,GAAGjB,OAAO,CAACmB,YAAY,GAAGb,6BAA6B;IACrF,IAAMc,YAAY,GAAGP,cAAc,CAACnB,MAAM,GAAGuB,SAAS,GAAGX,6BAA6B;IACtF,IAAMe,WAAW,GAAGX,YAAY,GAAGG,cAAc,CAAChB,IAAI,GAAGU,+BAA+B;IACxF,IAAMe,YAAY,GAAGT,cAAc,CAAChB,IAAI,GAAGgB,cAAc,CAAClB,KAAK,GAAGc,WAAW,GAAGF,+BAA+B;IAE/G,OAAO;MACLO,KAAK,EAAES,IAAI,CAACC,GAAG,CAACV,KAAK,EAAEI,YAAY,CAAC;MACpCH,KAAK,EAAEQ,IAAI,CAACC,GAAG,CAACT,KAAK,EAAEK,YAAY,CAAC;MACpCvB,IAAI,EAAE0B,IAAI,CAACC,GAAG,CAAC3B,IAAI,EAAEwB,WAAW,CAAC;MACjCL,KAAK,EAAEO,IAAI,CAACC,GAAG,CAACR,KAAK,EAAEM,YAAY;KACpC;EACH,CAAC,EACD;IAAER,KAAK,EAAEW,MAAM,CAACC,SAAS;IAAEX,KAAK,EAAEU,MAAM,CAACC,SAAS;IAAE7B,IAAI,EAAE4B,MAAM,CAACC,SAAS;IAAEV,KAAK,EAAES,MAAM,CAACC;EAAS,CAAE,CACtG;AACH,CAAC;AAED,OAAO,IAAMC,yBAAyB,GAAG,UACvC3B,OAAoB,EACpBC,QAAqB,EACrBC,eAA0C,EAC1CG,QAAkB;EAElB,IAAMuB,gCAAgC,GAAGvB,QAAQ,GAC7CnB,uCAAuC,GACvCD,+BAA+B;EACnC,IAAM4C,kCAAkC,GAAGxB,QAAQ,GAC/ClB,yCAAyC,GACzCF,+BAA+B;EAC7B,SAKFe,OAAO,CAACP,qBAAqB,EAAE;IAJzBe,aAAa;IAChBsB,UAAU;IACTrB,WAAW;IACVC,YAAY,WACc;EAEnC,OAAOR,eAAe,CAACS,MAAM,CAC3B,UAACC,EAA6B,EAAEC,cAAc;QAA3CC,KAAK;MAAEC,KAAK;MAAElB,IAAI;MAAEmB,KAAK;IAC1B,IAAME,YAAY,GAAGV,aAAa,GAAGK,cAAc,CAACjB,GAAG,GAAGgC,gCAAgC;IAC1F,IAAMR,YAAY,GAAGP,cAAc,CAACnB,MAAM,GAAGoC,UAAU,GAAGjB,cAAc,CAACjB,GAAG,GAAGgC,gCAAgC;IAC/G,IAAMP,WAAW,GAAGZ,WAAW,GAAGI,cAAc,CAAChB,IAAI,GAAGgC,kCAAkC;IAC1F,IAAMP,YAAY,GAChBT,cAAc,CAAChB,IAAI,GAAGgB,cAAc,CAAClB,KAAK,GAAGe,YAAY,GAAGmB,kCAAkC;IAEhG,OAAO;MACLf,KAAK,EAAES,IAAI,CAACC,GAAG,CAACV,KAAK,EAAEI,YAAY,CAAC;MACpCH,KAAK,EAAEQ,IAAI,CAACC,GAAG,CAACT,KAAK,EAAEK,YAAY,CAAC;MACpCvB,IAAI,EAAE0B,IAAI,CAACC,GAAG,CAAC3B,IAAI,EAAEwB,WAAW,CAAC;MACjCL,KAAK,EAAEO,IAAI,CAACC,GAAG,CAACR,KAAK,EAAEM,YAAY;KACpC;EACH,CAAC,EACD;IAAER,KAAK,EAAEW,MAAM,CAACC,SAAS;IAAEX,KAAK,EAAEU,MAAM,CAACC,SAAS;IAAE7B,IAAI,EAAE4B,MAAM,CAACC,SAAS;IAAEV,KAAK,EAAES,MAAM,CAACC;EAAS,CAAE,CACtG;AACH,CAAC;AAED,OAAO,IAAMK,mBAAmB,GAAG,UACjC/B,OAAoB,EACpBC,QAAqB,EACrBC,eAA0C,EAC1C8B,QAAiB,EACjBC,YAAoB,EACpB9B,YAAoB,EACpBC,aAAqB,EACrBC,QAAkB;EAHlB;IAAA4B,oBAAoB;EAAA;EACpB;IAAA9B,oBAAoB;EAAA;EACpB;IAAAC,qBAAqB;EAAA;EAGrB,IAAM8B,cAAc,GAAGnC,iBAAiB,CAACC,OAAO,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,YAAY,EAAEC,aAAa,EAAEC,QAAQ,CAAC;EACnH,IAAM8B,YAAY,GAAGnC,OAAO,CAACP,qBAAqB,EAAE,CAACE,KAAK;EAC1DqC,QAAQ,GAAGA,QAAQ,GAAGT,IAAI,CAACC,GAAG,CAACW,YAAY,EAAEH,QAAQ,CAAC,GAAGG,YAAY;EACrE,IAAMC,aAAa,GAAGnC,QAAQ,CAACR,qBAAqB,EAAE,CAACE,KAAK;EAC5D;EACA,IAAM0C,UAAU,GAAGd,IAAI,CAACe,GAAG,CAACF,aAAa,EAAEJ,QAAQ,CAAC;EAEpD,IAAIO,QAAiB;EACrB,IAAI1C,IAAI,GAAkB,IAAI;EAC9B,IAAIF,KAAK,GAAG0C,UAAU;EAEtB;EACA,IAAIA,UAAU,IAAIH,cAAc,CAAClB,KAAK,EAAE;IACtCuB,QAAQ,GAAG,KAAK;IAChB;GACD,MAAM,IAAIF,UAAU,IAAIH,cAAc,CAACrC,IAAI,EAAE;IAC5C0C,QAAQ,GAAG,IAAI;IACf;GACD,MAAM;IACLA,QAAQ,GAAGL,cAAc,CAACrC,IAAI,GAAGqC,cAAc,CAAClB,KAAK;IACrDrB,KAAK,GAAG4B,IAAI,CAACe,GAAG,CAACJ,cAAc,CAACrC,IAAI,EAAEqC,cAAc,CAAClB,KAAK,EAAEgB,QAAQ,CAAC;;EAGvE,IAAIC,YAAY,EAAE;IAChB,IAAMO,SAAS,GAAG,CAACH,UAAU,GAAGF,YAAY,IAAI,CAAC;IAEjD;IACA,IAAMM,oBAAoB,GAAGP,cAAc,CAACrC,IAAI,GAAGsC,YAAY;IAC/D,IAAMO,qBAAqB,GAAGR,cAAc,CAAClB,KAAK,GAAGmB,YAAY;IAEjE,IAAMQ,YAAY,GAAGF,oBAAoB,IAAID,SAAS,IAAIE,qBAAqB,IAAIF,SAAS;IAC5F,IAAIG,YAAY,EAAE;MAChB9C,IAAI,GAAG,CAAC2C,SAAS;;;EAIrB,IAAMI,MAAM,GAAGV,cAAc,CAACnB,KAAK,GAAGd,QAAQ,CAACkB,YAAY,IAAIe,cAAc,CAACpB,KAAK,GAAGoB,cAAc,CAACnB,KAAK;EAC1G,IAAM8B,eAAe,GAAGD,MAAM,GAAGV,cAAc,CAACpB,KAAK,GAAGoB,cAAc,CAACnB,KAAK;EAC5E;EACA,IAAM+B,aAAa,GAAG1C,aAAa,GAAGyC,eAAe,GAAGtB,IAAI,CAACwB,KAAK,CAACF,eAAe,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE;EAElG,OAAO;IACLD,MAAM;IACNL,QAAQ;IACR1C,IAAI,EAAEA,IAAI,KAAK,IAAI,GAAG,MAAM,GAAG,UAAGA,IAAI,OAAI;IAC1CH,MAAM,EAAE,UAAGoD,aAAa,OAAI;IAC5BnD,KAAK,EAAE,UAAGA,KAAK;GAChB;AACH,CAAC;AAED,OAAO,IAAMqD,2BAA2B,GAAG,UACzChD,OAAoB,EACpBC,QAAqB,EACrBC,eAA0C,EAC1CG,QAAkB;EAElB,IAAM6B,cAAc,GAAGP,yBAAyB,CAAC3B,OAAO,EAAEC,QAAQ,EAAEC,eAAe,EAAEG,QAAQ,CAAC;EACxF,SAAkEL,OAAO,CAACP,qBAAqB,EAAE;IAAvFe,aAAa;IAAOsB,UAAU;IAASK,YAAY,WAAoC;EACjG,SAA2D/C,0BAA0B,CAACY,OAAO,CAAC;IAAvFiD,iBAAiB;IAAUC,oBAAoB,YAAwC;EAEpG,IAAIX,QAAQ;EAEZ,IAAI5C,KAAK,GAAGM,QAAQ,CAACR,qBAAqB,EAAE,CAACE,KAAK;EAClD,IAAMC,GAAG,GAAGkC,UAAU,GAAGmB,iBAAiB;EAC1C,IAAItD,KAAK,IAAIuC,cAAc,CAAClB,KAAK,EAAE;IACjCuB,QAAQ,GAAG,KAAK;GACjB,MAAM,IAAI5C,KAAK,IAAIuC,cAAc,CAACrC,IAAI,EAAE;IACvC0C,QAAQ,GAAG,IAAI;GAChB,MAAM;IACLA,QAAQ,GAAGL,cAAc,CAACrC,IAAI,GAAGqC,cAAc,CAAClB,KAAK;IACrDrB,KAAK,GAAG4B,IAAI,CAACe,GAAG,CAACJ,cAAc,CAACrC,IAAI,EAAEqC,cAAc,CAAClB,KAAK,CAAC;;EAG7D,IAAMnB,IAAI,GAAG0C,QAAQ,GAAG,CAAC,GAAG5C,KAAK,GAAGwC,YAAY;EAEhD,IAAMS,MAAM,GAAGV,cAAc,CAACnB,KAAK,GAAGd,QAAQ,CAACkB,YAAY,IAAIe,cAAc,CAACpB,KAAK,GAAGoB,cAAc,CAACnB,KAAK;EAC1G,IAAMoC,MAAM,GAAGP,MAAM,GAAGK,iBAAiB,GAAGC,oBAAoB,GAAG1C,aAAa,GAAG,CAAC;EACpF,IAAMqC,eAAe,GAAGD,MAAM,GAAGV,cAAc,CAACpB,KAAK,GAAGoB,cAAc,CAACnB,KAAK;EAC5E;EACA,IAAM+B,aAAa,GAAGvB,IAAI,CAACwB,KAAK,CAACF,eAAe,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE;EAEhE,OAAO;IACLD,MAAM;IACNL,QAAQ;IACR7C,MAAM,EAAE,UAAGoD,aAAa,OAAI;IAC5BnD,KAAK,EAAE,UAAGA,KAAK,OAAI;IACnBC,GAAG,EAAE,UAAGA,GAAG,OAAI;IACfuD,MAAM,EAAE,UAAGA,MAAM,OAAI;IACrBtD,IAAI,EAAE,UAAGA,IAAI;GACd;AACH,CAAC;AAED,OAAO,IAAMuD,iBAAiB,GAAG,UAC/BC,eAA+B,EAC/BC,cAA8B,EAC9BC,wBAAwC,EACxCC,QAAiB,EACjBC,gBAAyB,EACzBxB,YAAqB,EACrB9B,YAAqB,EACrBC,aAAsB,EACtBC,QAAiB,EACjB2B,QAAiB;EAEjB;EACA;EACAuB,wBAAwB,CAACG,KAAK,CAACC,SAAS,GAAG,EAAE;EAC7CN,eAAe,CAACK,KAAK,CAAC/D,KAAK,GAAG,EAAE;EAChC0D,eAAe,CAACK,KAAK,CAAC9D,GAAG,GAAG,EAAE;EAC9ByD,eAAe,CAACK,KAAK,CAACP,MAAM,GAAG,EAAE;EACjCE,eAAe,CAACK,KAAK,CAAC7D,IAAI,GAAG,EAAE;EAE/BwD,eAAe,CAACO,SAAS,CAACC,MAAM,CAAC7E,MAAM,CAAC,oBAAoB,CAAC,CAAC;EAC9DqE,eAAe,CAACO,SAAS,CAACC,MAAM,CAAC7E,MAAM,CAAC,qBAAqB,CAAC,CAAC;EAC/DqE,eAAe,CAACO,SAAS,CAACC,MAAM,CAAC7E,MAAM,CAAC,kBAAkB,CAAC,CAAC;EAE5D,IAAMkB,eAAe,GAAGnB,2BAA2B,CAACsE,eAAe,EAAEG,QAAQ,EAAEC,gBAAgB,EAAErD,aAAa,CAAC;EAC/G,IAAM0D,QAAQ,GAAGN,QAAQ,GACrBR,2BAA2B,CAACM,cAAc,EAAED,eAAe,EAAEnD,eAAe,EAAEG,QAAQ,CAAC,GACvF0B,mBAAmB,CACjBuB,cAAc,EACdD,eAAe,EACfnD,eAAe,EACf8B,QAAQ,EACRC,YAAY,EACZ9B,YAAY,EACZC,aAAa,EACbC,QAAQ,CACT;EACL,IAAM0D,UAAU,GAAGT,cAAc,CAAC7D,qBAAqB,EAAE;EACzD,OAAO,CAACqE,QAAQ,EAAEC,UAAU,CAAC;AAC/B,CAAC","names":["getOverflowParents","getOverflowParentDimensions","styles","AVAILABLE_SPACE_RESERVE_DEFAULT","AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL","AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL","getClosestParentDimensions","element","parents","map","el","getBoundingClientRect","height","width","top","left","shift","getAvailableSpace","trigger","dropdown","overflowParents","stretchWidth","stretchHeight","isMobile","availableSpaceReserveVertical","availableSpaceReserveHorizontal","triggerBottom","triggerLeft","triggerRight","reduce","_a","overflowParent","above","below","right","offsetTop","currentAbove","offsetHeight","currentBelow","currentLeft","currentRight","Math","min","Number","MAX_VALUE","getInteriorAvailableSpace","AVAILABLE_SPACE_RESERVE_VERTICAL","AVAILABLE_SPACE_RESERVE_HORIZONTAL","triggerTop","getDropdownPosition","minWidth","preferCenter","availableSpace","triggerWidth","requiredWidth","idealWidth","max","dropLeft","spillOver","availableOutsideLeft","availableOutsideRight","fitsInCenter","dropUp","availableHeight","croppedHeight","floor","getInteriorDropdownPosition","parentDropdownTop","parentDropdownHeight","bottom","calculatePosition","dropdownElement","triggerElement","verticalContainerElement","interior","expandToViewport","style","maxHeight","classList","remove","position","triggerBox"],"sources":["/Users/dcastro/node_modules/src/internal/components/dropdown/dropdown-fit-handler.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Dimensions, getOverflowParents, getOverflowParentDimensions } from '../../utils/scrollable-containers';\nimport styles from './styles.css.js';\n\nconst AVAILABLE_SPACE_RESERVE_DEFAULT = 50;\nconst AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL = 19; // 50 - 31\nconst AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL = 20;\n\ninterface AvailableSpace {\n  above: number;\n  below: number;\n  left: number;\n  right: number;\n}\nexport interface DropdownPosition {\n  height: string;\n  width: string;\n  dropUp: boolean;\n  dropLeft: boolean;\n  left: string;\n}\nexport interface InteriorDropdownPosition extends DropdownPosition {\n  bottom: string;\n  top: string;\n}\n\nconst getClosestParentDimensions = (element: HTMLElement): any => {\n  const parents = getOverflowParents(element).map(el => {\n    const { height, width, top, left } = el.getBoundingClientRect();\n    return {\n      height,\n      width,\n      top,\n      left,\n    };\n  });\n\n  return parents.shift();\n};\n\nexport const getAvailableSpace = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  stretchWidth = false,\n  stretchHeight = false,\n  isMobile?: boolean\n): AvailableSpace => {\n  const availableSpaceReserveVertical = stretchHeight\n    ? 0\n    : isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const availableSpaceReserveHorizontal = stretchWidth\n    ? 0\n    : isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const { bottom: triggerBottom, left: triggerLeft, right: triggerRight } = trigger.getBoundingClientRect();\n\n  return overflowParents.reduce(\n    ({ above, below, left, right }, overflowParent) => {\n      const offsetTop = triggerBottom - overflowParent.top;\n      const currentAbove = offsetTop - trigger.offsetHeight - availableSpaceReserveVertical;\n      const currentBelow = overflowParent.height - offsetTop - availableSpaceReserveVertical;\n      const currentLeft = triggerRight - overflowParent.left - availableSpaceReserveHorizontal;\n      const currentRight = overflowParent.left + overflowParent.width - triggerLeft - availableSpaceReserveHorizontal;\n\n      return {\n        above: Math.min(above, currentAbove),\n        below: Math.min(below, currentBelow),\n        left: Math.min(left, currentLeft),\n        right: Math.min(right, currentRight),\n      };\n    },\n    { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE }\n  );\n};\n\nexport const getInteriorAvailableSpace = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  isMobile?: boolean\n): AvailableSpace => {\n  const AVAILABLE_SPACE_RESERVE_VERTICAL = isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const AVAILABLE_SPACE_RESERVE_HORIZONTAL = isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const {\n    bottom: triggerBottom,\n    top: triggerTop,\n    left: triggerLeft,\n    right: triggerRight,\n  } = trigger.getBoundingClientRect();\n\n  return overflowParents.reduce(\n    ({ above, below, left, right }, overflowParent) => {\n      const currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n      const currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n      const currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n      const currentRight =\n        overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n\n      return {\n        above: Math.min(above, currentAbove),\n        below: Math.min(below, currentBelow),\n        left: Math.min(left, currentLeft),\n        right: Math.min(right, currentRight),\n      };\n    },\n    { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE }\n  );\n};\n\nexport const getDropdownPosition = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  minWidth?: number,\n  preferCenter = false,\n  stretchWidth = false,\n  stretchHeight = false,\n  isMobile?: boolean\n): DropdownPosition => {\n  const availableSpace = getAvailableSpace(trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile);\n  const triggerWidth = trigger.getBoundingClientRect().width;\n  minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;\n  const requiredWidth = dropdown.getBoundingClientRect().width;\n  // dropdown should not be smaller than the trigger\n  const idealWidth = Math.max(requiredWidth, minWidth);\n\n  let dropLeft: boolean;\n  let left: number | null = null;\n  let width = idealWidth;\n\n  //1. Can it be positioned with ideal width to the right?\n  if (idealWidth <= availableSpace.right) {\n    dropLeft = false;\n    //2. Can it be positioned with ideal width to the left?\n  } else if (idealWidth <= availableSpace.left) {\n    dropLeft = true;\n    //3. Fit into biggest available space either on left or right\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right, minWidth);\n  }\n\n  if (preferCenter) {\n    const spillOver = (idealWidth - triggerWidth) / 2;\n\n    // availableSpace always includes the trigger width, but we want to exclude that\n    const availableOutsideLeft = availableSpace.left - triggerWidth;\n    const availableOutsideRight = availableSpace.right - triggerWidth;\n\n    const fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;\n    if (fitsInCenter) {\n      left = -spillOver;\n    }\n  }\n\n  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  const croppedHeight = stretchHeight ? availableHeight : Math.floor(availableHeight / 31) * 31 + 16;\n\n  return {\n    dropUp,\n    dropLeft,\n    left: left === null ? 'auto' : `${left}px`,\n    height: `${croppedHeight}px`,\n    width: `${width}px`,\n  };\n};\n\nexport const getInteriorDropdownPosition = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  isMobile?: boolean\n): InteriorDropdownPosition => {\n  const availableSpace = getInteriorAvailableSpace(trigger, dropdown, overflowParents, isMobile);\n  const { bottom: triggerBottom, top: triggerTop, width: triggerWidth } = trigger.getBoundingClientRect();\n  const { top: parentDropdownTop, height: parentDropdownHeight } = getClosestParentDimensions(trigger);\n\n  let dropLeft;\n\n  let width = dropdown.getBoundingClientRect().width;\n  const top = triggerTop - parentDropdownTop;\n  if (width <= availableSpace.right) {\n    dropLeft = false;\n  } else if (width <= availableSpace.left) {\n    dropLeft = true;\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right);\n  }\n\n  const left = dropLeft ? 0 - width : triggerWidth;\n\n  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  const bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;\n  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  const croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n\n  return {\n    dropUp,\n    dropLeft,\n    height: `${croppedHeight}px`,\n    width: `${width}px`,\n    top: `${top}px`,\n    bottom: `${bottom}px`,\n    left: `${left}px`,\n  };\n};\n\nexport const calculatePosition = (\n  dropdownElement: HTMLDivElement,\n  triggerElement: HTMLDivElement,\n  verticalContainerElement: HTMLDivElement,\n  interior: boolean,\n  expandToViewport: boolean,\n  preferCenter: boolean,\n  stretchWidth: boolean,\n  stretchHeight: boolean,\n  isMobile: boolean,\n  minWidth?: number\n): [DropdownPosition, DOMRect] => {\n  // cleaning previously assigned values,\n  // so that they are not reused in case of screen resize and similar events\n  verticalContainerElement.style.maxHeight = '';\n  dropdownElement.style.width = '';\n  dropdownElement.style.top = '';\n  dropdownElement.style.bottom = '';\n  dropdownElement.style.left = '';\n\n  dropdownElement.classList.remove(styles['dropdown-drop-left']);\n  dropdownElement.classList.remove(styles['dropdown-drop-right']);\n  dropdownElement.classList.remove(styles['dropdown-drop-up']);\n\n  const overflowParents = getOverflowParentDimensions(dropdownElement, interior, expandToViewport, stretchHeight);\n  const position = interior\n    ? getInteriorDropdownPosition(triggerElement, dropdownElement, overflowParents, isMobile)\n    : getDropdownPosition(\n        triggerElement,\n        dropdownElement,\n        overflowParents,\n        minWidth,\n        preferCenter,\n        stretchWidth,\n        stretchHeight,\n        isMobile\n      );\n  const triggerBox = triggerElement.getBoundingClientRect();\n  return [position, triggerBox];\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}