{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef, memo, useState } from 'react';\nimport LiveRegion from '../live-region';\nimport InternalBox from '../../../box/internal';\nimport { KeyCode } from '../../keycode';\nimport SeriesMarker from '../chart-series-marker';\nimport styles from './styles.css.js';\nexport default memo(ChartLegend);\nfunction ChartLegend(_a) {\n  var series = _a.series,\n    onHighlightChange = _a.onHighlightChange,\n    highlightedSeries = _a.highlightedSeries,\n    legendTitle = _a.legendTitle,\n    ariaLabel = _a.ariaLabel,\n    plotContainerRef = _a.plotContainerRef;\n  var _b = useState(false),\n    isFocused = _b[0],\n    setIsFocused = _b[1];\n  var containerRef = useRef(null);\n  var highlightLeft = function () {\n    var currentIndex = findSeriesIndex(series, highlightedSeries) || 0;\n    var nextIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : series.length - 1;\n    onHighlightChange(series[nextIndex].datum);\n  };\n  var highlightRight = function () {\n    var currentIndex = findSeriesIndex(series, highlightedSeries) || 0;\n    var nextIndex = currentIndex + 1 < series.length ? currentIndex + 1 : 0;\n    onHighlightChange(series[nextIndex].datum);\n  };\n  var handleKeyPress = function (event) {\n    if (event.keyCode === KeyCode.right || event.keyCode === KeyCode.left) {\n      // Preventing default fixes an issue in Safari+VO when VO additionally interprets arrow keys as its commands.\n      event.preventDefault();\n      switch (event.keyCode) {\n        case KeyCode.left:\n          return highlightLeft();\n        case KeyCode.right:\n          return highlightRight();\n        default:\n          return;\n      }\n    }\n  };\n  var handleFocus = function () {\n    setIsFocused(true);\n    onHighlightChange(highlightedSeries || series[0].datum);\n  };\n  var handleBlur = function (event) {\n    var _a;\n    setIsFocused(false);\n    // We need to check if the next element to be focused inside the plot container or not\n    // so we don't clear the selected legend in case we are still focusing elements ( legend elements )\n    // inside the plot container\n    if (event.relatedTarget === null || !(event.relatedTarget instanceof Element) || containerRef.current && !containerRef.current.contains(event.relatedTarget) && !((_a = plotContainerRef === null || plotContainerRef === void 0 ? void 0 : plotContainerRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget))) {\n      onHighlightChange(null);\n    }\n  };\n  var handleMouseOver = function (s) {\n    if (s !== highlightedSeries) {\n      onHighlightChange(s);\n    }\n  };\n  var handleMouseLeave = function () {\n    onHighlightChange(null);\n  };\n  var highlightedSeriesLabel = findSeriesLabel(series, highlightedSeries);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    tabIndex: 0,\n    className: styles.root,\n    ref: containerRef,\n    role: \"application\",\n    \"aria-label\": legendTitle || ariaLabel,\n    onKeyDown: handleKeyPress,\n    onFocus: handleFocus,\n    onBlur: handleBlur\n  }, legendTitle && React.createElement(InternalBox, {\n    fontWeight: \"bold\",\n    className: styles.title\n  }, legendTitle), React.createElement(\"ul\", {\n    className: styles.list\n  }, series.map(function (s, index) {\n    var _a;\n    var someHighlighted = highlightedSeries !== null;\n    var isHighlighted = highlightedSeries === s.datum;\n    var isDimmed = someHighlighted && !isHighlighted;\n    return React.createElement(\"li\", {\n      key: index,\n      onMouseOver: handleMouseOver.bind(null, s.datum),\n      onMouseLeave: handleMouseLeave,\n      className: clsx(styles.marker, (_a = {}, _a[styles['marker--dimmed']] = isDimmed, _a[styles['marker--highlighted']] = isHighlighted, _a[styles['marker--focused']] = isHighlighted && isFocused, _a)),\n      \"aria-disabled\": isDimmed ? true : undefined\n    }, React.createElement(SeriesMarker, {\n      color: s.color,\n      type: s.type\n    }), \" \", s.label);\n  }))), React.createElement(LiveRegion, null, isFocused ? highlightedSeriesLabel : null));\n}\nfunction findSeriesIndex(series, targetSeries) {\n  for (var index = 0; index < series.length; index++) {\n    if (series[index].datum === targetSeries) {\n      return index;\n    }\n  }\n  return undefined;\n}\nfunction findSeriesLabel(series, targetSeries) {\n  for (var _i = 0, series_1 = series; _i < series_1.length; _i++) {\n    var s = series_1[_i];\n    if (s.datum === targetSeries) {\n      return s.label;\n    }\n  }\n  return null;\n}","map":{"version":3,"mappings":"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","names":["clsx","React","useRef","memo","useState","LiveRegion","InternalBox","KeyCode","SeriesMarker","styles","ChartLegend","_a","series","onHighlightChange","highlightedSeries","legendTitle","ariaLabel","plotContainerRef","isFocused","setIsFocused","containerRef","highlightLeft","currentIndex","findSeriesIndex","nextIndex","length","datum","highlightRight","handleKeyPress","event","keyCode","right","left","preventDefault","handleFocus","handleBlur","relatedTarget","Element","current","contains","handleMouseOver","s","handleMouseLeave","highlightedSeriesLabel","findSeriesLabel","tabIndex","className","root","ref","role","onKeyDown","onFocus","onBlur","fontWeight","title","list","map","index","someHighlighted","isHighlighted","isDimmed","key","onMouseOver","bind","onMouseLeave","marker","undefined","color","type","label","targetSeries","series_1","_i"],"sources":["/Users/dcastro/node_modules/src/internal/components/chart-legend/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef, memo, useState } from 'react';\n\nimport LiveRegion from '../live-region';\nimport InternalBox from '../../../box/internal';\nimport { KeyCode } from '../../keycode';\nimport SeriesMarker, { ChartSeriesMarkerType } from '../chart-series-marker';\nimport styles from './styles.css.js';\n\nexport interface ChartLegendItem<T> {\n  label: string;\n  color: string;\n  type: ChartSeriesMarkerType;\n  datum: T;\n}\n\nexport interface ChartLegendProps<T> {\n  series: ReadonlyArray<ChartLegendItem<T>>;\n  highlightedSeries: T | null;\n  legendTitle?: string;\n  ariaLabel?: string;\n  plotContainerRef?: React.RefObject<HTMLDivElement>;\n  onHighlightChange: (series: T | null) => void;\n}\n\nexport default memo(ChartLegend) as typeof ChartLegend;\n\nfunction ChartLegend<T>({\n  series,\n  onHighlightChange,\n  highlightedSeries,\n  legendTitle,\n  ariaLabel,\n  plotContainerRef,\n}: ChartLegendProps<T>) {\n  const [isFocused, setIsFocused] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const highlightLeft = () => {\n    const currentIndex = findSeriesIndex(series, highlightedSeries) || 0;\n    const nextIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : series.length - 1;\n    onHighlightChange(series[nextIndex].datum);\n  };\n\n  const highlightRight = () => {\n    const currentIndex = findSeriesIndex(series, highlightedSeries) || 0;\n    const nextIndex = currentIndex + 1 < series.length ? currentIndex + 1 : 0;\n    onHighlightChange(series[nextIndex].datum);\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.keyCode === KeyCode.right || event.keyCode === KeyCode.left) {\n      // Preventing default fixes an issue in Safari+VO when VO additionally interprets arrow keys as its commands.\n      event.preventDefault();\n\n      switch (event.keyCode) {\n        case KeyCode.left:\n          return highlightLeft();\n\n        case KeyCode.right:\n          return highlightRight();\n\n        default:\n          return;\n      }\n    }\n  };\n\n  const handleFocus = () => {\n    setIsFocused(true);\n    onHighlightChange(highlightedSeries || series[0].datum);\n  };\n\n  const handleBlur = (event: React.FocusEvent<Element>) => {\n    setIsFocused(false);\n\n    // We need to check if the next element to be focused inside the plot container or not\n    // so we don't clear the selected legend in case we are still focusing elements ( legend elements )\n    // inside the plot container\n    if (\n      event.relatedTarget === null ||\n      !(event.relatedTarget instanceof Element) ||\n      (containerRef.current &&\n        !containerRef.current.contains(event.relatedTarget) &&\n        !plotContainerRef?.current?.contains(event.relatedTarget))\n    ) {\n      onHighlightChange(null);\n    }\n  };\n\n  const handleMouseOver = (s: T) => {\n    if (s !== highlightedSeries) {\n      onHighlightChange(s);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    onHighlightChange(null);\n  };\n\n  const highlightedSeriesLabel = findSeriesLabel(series, highlightedSeries);\n\n  return (\n    <>\n      <div\n        tabIndex={0}\n        className={styles.root}\n        ref={containerRef}\n        role=\"application\"\n        aria-label={legendTitle || ariaLabel}\n        onKeyDown={handleKeyPress}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      >\n        {legendTitle && (\n          <InternalBox fontWeight=\"bold\" className={styles.title}>\n            {legendTitle}\n          </InternalBox>\n        )}\n\n        <ul className={styles.list}>\n          {series.map((s, index) => {\n            const someHighlighted = highlightedSeries !== null;\n            const isHighlighted = highlightedSeries === s.datum;\n            const isDimmed = someHighlighted && !isHighlighted;\n            return (\n              <li\n                key={index}\n                onMouseOver={handleMouseOver.bind(null, s.datum)}\n                onMouseLeave={handleMouseLeave}\n                className={clsx(styles.marker, {\n                  [styles['marker--dimmed']]: isDimmed,\n                  [styles['marker--highlighted']]: isHighlighted,\n                  [styles['marker--focused']]: isHighlighted && isFocused,\n                })}\n                aria-disabled={isDimmed ? true : undefined}\n              >\n                <SeriesMarker color={s.color} type={s.type} /> {s.label}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <LiveRegion>{isFocused ? highlightedSeriesLabel : null}</LiveRegion>\n    </>\n  );\n}\n\nfunction findSeriesIndex<T>(series: ReadonlyArray<ChartLegendItem<T>>, targetSeries: null | T): undefined | number {\n  for (let index = 0; index < series.length; index++) {\n    if (series[index].datum === targetSeries) {\n      return index;\n    }\n  }\n  return undefined;\n}\n\nfunction findSeriesLabel<T>(series: ReadonlyArray<ChartLegendItem<T>>, targetSeries: null | T): null | string {\n  for (const s of series) {\n    if (s.datum === targetSeries) {\n      return s.label;\n    }\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}