{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useContext } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport TutorialList from './components/tutorial-list';\nimport TutorialDetailView from './components/tutorial-detail-view';\nimport { hotspotContext } from '../annotation-context/context';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar defaultFilteringFunction = function (tutorial, searchTerm) {\n  var _a;\n  if (searchTerm === '') {\n    return true;\n  }\n  return ((_a = tutorial.title) === null || _a === void 0 ? void 0 : _a.toLowerCase().indexOf(searchTerm.toLowerCase())) !== -1;\n};\nexport default function TutorialPanel(_a) {\n  var i18nStrings = _a.i18nStrings,\n    loading = _a.loading,\n    tutorials = _a.tutorials,\n    onFeedbackClick = _a.onFeedbackClick,\n    downloadUrl = _a.downloadUrl,\n    // Filtering is not available in the Beta release.\n    //filteringFunction: customFilteringFunction,\n    restProps = __rest(_a, [\"i18nStrings\", \"loading\", \"tutorials\", \"onFeedbackClick\", \"downloadUrl\"]);\n  var __internalRootRef = useBaseComponent('TutorialPanel').__internalRootRef;\n  var baseProps = getBaseProps(restProps);\n  var context = useContext(hotspotContext);\n  //const filteringFunction = customFilteringFunction ?? defaultFilteringFunction;\n  var filteringFunction = defaultFilteringFunction;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles['tutorial-panel']),\n    ref: __internalRootRef\n  }), context.currentTutorial ? React.createElement(TutorialDetailView, {\n    i18nStrings: i18nStrings,\n    tutorial: context.currentTutorial,\n    onExitTutorial: context.onExitTutorial,\n    currentStepIndex: context.currentStepIndex,\n    onFeedbackClick: onFeedbackClick\n  }) : React.createElement(TutorialList, {\n    i18nStrings: i18nStrings,\n    tutorials: tutorials,\n    loading: loading,\n    onStartTutorial: context.onStartTutorial,\n    filteringFunction: filteringFunction,\n    downloadUrl: downloadUrl\n  })));\n}\napplyDisplayName(TutorialPanel, 'TutorialPanel');","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,MAAM,MAAM,iBAAiB;AAGpC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,kBAAkB,MAAM,mCAAmC;AAClE,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,gBAAgB,MAAM,sCAAsC;AAInE,IAAMC,wBAAwB,GAAG,UAACC,QAAqC,EAAEC,UAAkB;;EACzF,IAAIA,UAAU,KAAK,EAAE,EAAE;IACrB,OAAO,IAAI;;EAEb,OAAO,eAAQ,CAACC,KAAK,0CAAEC,WAAW,GAAGC,OAAO,CAACH,UAAU,CAACE,WAAW,EAAE,CAAC,MAAK,CAAC,CAAC;AAC/E,CAAC;AAED,eAAc,SAAUE,aAAa,CAACC,EASjB;EARnB,eAAW;IACXC,OAAO;IACPC,SAAS;IACTC,eAAe;IACfC,WAAW;IACX;IACA;IACGC,SAAS,cARwB,yEASrC,CADa;EAEJ,qBAAiB,GAAKb,gBAAgB,CAAC,eAAe,CAAC,kBAAtC;EAEzB,IAAMc,SAAS,GAAGpB,YAAY,CAACmB,SAAS,CAAC;EACzC,IAAME,OAAO,GAAGtB,UAAU,CAACK,cAAc,CAAC;EAE1C;EACA,IAAMkB,iBAAiB,GAAGf,wBAAwB;EAElD,OACET,0CACEA,wCAASsB,SAAS;IAAEG,SAAS,EAAE1B,IAAI,CAACuB,SAAS,CAACG,SAAS,EAAEtB,MAAM,CAAC,gBAAgB,CAAC,CAAC;IAAEuB,GAAG,EAAEC;EAAiB,IACvGJ,OAAO,CAACK,eAAe,GACtB5B,oBAACK,kBAAkB;IACjBwB,WAAW,EAAEA,WAAW;IACxBnB,QAAQ,EAAEa,OAAO,CAACK,eAAe;IACjCE,cAAc,EAAEP,OAAO,CAACO,cAAc;IACtCC,gBAAgB,EAAER,OAAO,CAACQ,gBAAgB;IAC1CZ,eAAe,EAAEA;EAAe,EAChC,GAEFnB,oBAACI,YAAY;IACXyB,WAAW,EAAEA,WAAW;IACxBX,SAAS,EAAEA,SAAS;IACpBD,OAAO,EAAEA,OAAO;IAChBe,eAAe,EAAET,OAAO,CAACS,eAAe;IACxCR,iBAAiB,EAAEA,iBAAiB;IACpCJ,WAAW,EAAEA;EAAW,EAE3B,CACG,CACL;AAEP;AAEAb,gBAAgB,CAACQ,aAAa,EAAE,eAAe,CAAC","names":["clsx","React","useContext","getBaseProps","styles","TutorialList","TutorialDetailView","hotspotContext","applyDisplayName","useBaseComponent","defaultFilteringFunction","tutorial","searchTerm","title","toLowerCase","indexOf","TutorialPanel","_a","loading","tutorials","onFeedbackClick","downloadUrl","restProps","baseProps","context","filteringFunction","className","ref","__internalRootRef","currentTutorial","i18nStrings","onExitTutorial","currentStepIndex","onStartTutorial"],"sources":["/Users/dcastro/node_modules/src/tutorial-panel/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useContext } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\n\nimport { TutorialPanelProps } from './interfaces';\nimport TutorialList from './components/tutorial-list';\nimport TutorialDetailView from './components/tutorial-detail-view';\nimport { hotspotContext } from '../annotation-context/context';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { TutorialPanelProps };\n\nconst defaultFilteringFunction = (tutorial: TutorialPanelProps.Tutorial, searchTerm: string) => {\n  if (searchTerm === '') {\n    return true;\n  }\n  return tutorial.title?.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1;\n};\n\nexport default function TutorialPanel({\n  i18nStrings,\n  loading,\n  tutorials,\n  onFeedbackClick,\n  downloadUrl,\n  // Filtering is not available in the Beta release.\n  //filteringFunction: customFilteringFunction,\n  ...restProps\n}: TutorialPanelProps) {\n  const { __internalRootRef } = useBaseComponent('TutorialPanel');\n\n  const baseProps = getBaseProps(restProps);\n  const context = useContext(hotspotContext);\n\n  //const filteringFunction = customFilteringFunction ?? defaultFilteringFunction;\n  const filteringFunction = defaultFilteringFunction;\n\n  return (\n    <>\n      <div {...baseProps} className={clsx(baseProps.className, styles['tutorial-panel'])} ref={__internalRootRef}>\n        {context.currentTutorial ? (\n          <TutorialDetailView\n            i18nStrings={i18nStrings}\n            tutorial={context.currentTutorial}\n            onExitTutorial={context.onExitTutorial}\n            currentStepIndex={context.currentStepIndex}\n            onFeedbackClick={onFeedbackClick}\n          />\n        ) : (\n          <TutorialList\n            i18nStrings={i18nStrings}\n            tutorials={tutorials}\n            loading={loading}\n            onStartTutorial={context.onStartTutorial}\n            filteringFunction={filteringFunction}\n            downloadUrl={downloadUrl}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\napplyDisplayName(TutorialPanel, 'TutorialPanel');\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}