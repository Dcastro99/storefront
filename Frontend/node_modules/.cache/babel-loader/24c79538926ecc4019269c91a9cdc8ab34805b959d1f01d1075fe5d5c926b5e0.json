{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __rest } from \"tslib\";\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { useAutosuggestItems } from './options-controller';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport { generateUniqueId, useUniqueId } from '../internal/hooks/use-unique-id';\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nimport { checkOptionValueField } from '../select/utils/check-option-value-field';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport AutosuggestOptionsList from './options-list';\nimport { useAutosuggestLoadMore } from './load-more-controller';\nimport AutosuggestInput from '../internal/components/autosuggest-input';\nimport { useFormFieldContext } from '../contexts/form-field';\nimport clsx from 'clsx';\nvar InternalAutosuggest = React.forwardRef(function (props, ref) {\n  var _a;\n  var value = props.value,\n    onChange = props.onChange,\n    onBlur = props.onBlur,\n    onFocus = props.onFocus,\n    onKeyUp = props.onKeyUp,\n    onLoadItems = props.onLoadItems,\n    options = props.options,\n    _b = props.filteringType,\n    filteringType = _b === void 0 ? 'auto' : _b,\n    _c = props.statusType,\n    statusType = _c === void 0 ? 'finished' : _c,\n    placeholder = props.placeholder,\n    name = props.name,\n    disabled = props.disabled,\n    _d = props.disableBrowserAutocorrect,\n    disableBrowserAutocorrect = _d === void 0 ? false : _d,\n    autoFocus = props.autoFocus,\n    readOnly = props.readOnly,\n    ariaLabel = props.ariaLabel,\n    ariaRequired = props.ariaRequired,\n    enteredTextLabel = props.enteredTextLabel,\n    onKeyDown = props.onKeyDown,\n    virtualScroll = props.virtualScroll,\n    expandToViewport = props.expandToViewport,\n    onSelect = props.onSelect,\n    selectedAriaLabel = props.selectedAriaLabel,\n    renderHighlightedAriaLive = props.renderHighlightedAriaLive,\n    __internalRootRef = props.__internalRootRef,\n    restProps = __rest(props, [\"value\", \"onChange\", \"onBlur\", \"onFocus\", \"onKeyUp\", \"onLoadItems\", \"options\", \"filteringType\", \"statusType\", \"placeholder\", \"name\", \"disabled\", \"disableBrowserAutocorrect\", \"autoFocus\", \"readOnly\", \"ariaLabel\", \"ariaRequired\", \"enteredTextLabel\", \"onKeyDown\", \"virtualScroll\", \"expandToViewport\", \"onSelect\", \"selectedAriaLabel\", \"renderHighlightedAriaLive\", \"__internalRootRef\"]);\n  checkControlled('Autosuggest', 'value', value, 'onChange', onChange);\n  checkOptionValueField('Autosuggest', 'options', options);\n  var autosuggestInputRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function () {\n        var _a;\n        return (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      select: function () {\n        var _a;\n        return (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n      }\n    };\n  }, []);\n  var _e = useAutosuggestItems({\n      options: options || [],\n      filterValue: value,\n      filterText: value,\n      filteringType: filteringType,\n      hideEnteredTextLabel: false,\n      onSelectItem: function (option) {\n        var _a;\n        var value = option.value || '';\n        fireNonCancelableEvent(onChange, {\n          value: value\n        });\n        fireNonCancelableEvent(onSelect, {\n          value: value\n        });\n        (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n      }\n    }),\n    autosuggestItemsState = _e[0],\n    autosuggestItemsHandlers = _e[1];\n  var autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n    options: options,\n    statusType: statusType,\n    onLoadItems: function (detail) {\n      return fireNonCancelableEvent(onLoadItems, detail);\n    }\n  });\n  var handleChange = function (event) {\n    autosuggestItemsHandlers.setShowAll(false);\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    fireNonCancelableEvent(onChange, event.detail);\n  };\n  var handleDelayedInput = function (event) {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n  };\n  var handleBlur = function () {\n    fireNonCancelableEvent(onBlur, null);\n  };\n  var handleFocus = function () {\n    autosuggestItemsHandlers.setShowAll(true);\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n    fireNonCancelableEvent(onFocus, null);\n  };\n  var handleKeyUp = function (e) {\n    fireCancelableEvent(onKeyUp, e.detail);\n  };\n  var handleKeyDown = function (e) {\n    fireCancelableEvent(onKeyDown, e.detail);\n  };\n  var handlePressArrowDown = function () {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n  };\n  var handlePressArrowUp = function () {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n  };\n  var handlePressEnter = function () {\n    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n  };\n  var handleCloseDropdown = function () {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n  };\n  var handleRecoveryClick = function () {\n    var _a;\n    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n    (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  var formFieldContext = useFormFieldContext(restProps);\n  var selfControlId = useUniqueId('input');\n  var controlId = (_a = formFieldContext.controlId) !== null && _a !== void 0 ? _a : selfControlId;\n  var listId = useUniqueId('list');\n  var highlightedOptionId = autosuggestItemsState.highlightedOption ? generateUniqueId() : undefined;\n  var isEmpty = !value && !autosuggestItemsState.items.length;\n  var dropdownStatus = useDropdownStatus(__assign(__assign({}, props), {\n    isEmpty: isEmpty,\n    onRecoveryClick: handleRecoveryClick\n  }));\n  return React.createElement(AutosuggestInput, __assign({}, restProps, {\n    className: clsx(styles.root, restProps.className),\n    ref: autosuggestInputRef,\n    __internalRootRef: __internalRootRef,\n    value: value,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    name: name,\n    controlId: controlId,\n    placeholder: placeholder,\n    disabled: disabled,\n    readOnly: readOnly,\n    autoFocus: autoFocus,\n    ariaLabel: ariaLabel,\n    ariaRequired: ariaRequired,\n    disableBrowserAutocorrect: disableBrowserAutocorrect,\n    expandToViewport: expandToViewport,\n    ariaControls: listId,\n    ariaActivedescendant: highlightedOptionId,\n    dropdownExpanded: autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null,\n    dropdownContent: React.createElement(AutosuggestOptionsList, {\n      autosuggestItemsState: autosuggestItemsState,\n      autosuggestItemsHandlers: autosuggestItemsHandlers,\n      highlightedOptionId: highlightedOptionId,\n      highlightText: value,\n      listId: listId,\n      controlId: controlId,\n      enteredTextLabel: enteredTextLabel,\n      handleLoadMore: autosuggestLoadMoreHandlers.fireLoadMoreOnScroll,\n      hasDropdownStatus: dropdownStatus.content !== null,\n      virtualScroll: virtualScroll,\n      selectedAriaLabel: selectedAriaLabel,\n      renderHighlightedAriaLive: renderHighlightedAriaLive,\n      listBottom: !dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n        content: dropdownStatus.content\n      }) : null\n    }),\n    dropdownFooter: dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n      content: dropdownStatus.content,\n      hasItems: autosuggestItemsState.items.length >= 1\n    }) : null,\n    onCloseDropdown: handleCloseDropdown,\n    onDelayedInput: handleDelayedInput,\n    onPressArrowDown: handlePressArrowDown,\n    onPressArrowUp: handlePressArrowUp,\n    onPressEnter: handlePressEnter\n  }));\n});\nexport default InternalAutosuggest;","map":{"version":3,"mappings":"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","names":["React","useImperativeHandle","useRef","useAutosuggestItems","useDropdownStatus","DropdownFooter","generateUniqueId","useUniqueId","fireCancelableEvent","fireNonCancelableEvent","styles","checkOptionValueField","checkControlled","AutosuggestOptionsList","useAutosuggestLoadMore","AutosuggestInput","useFormFieldContext","clsx","InternalAutosuggest","forwardRef","props","ref","onChange","onBlur","onFocus","onKeyUp","onLoadItems","options","_b","filteringType","_c","statusType","placeholder","name","disabled","_d","disableBrowserAutocorrect","autoFocus","readOnly","ariaLabel","ariaRequired","enteredTextLabel","onKeyDown","virtualScroll","expandToViewport","onSelect","selectedAriaLabel","renderHighlightedAriaLive","__internalRootRef","restProps","value","autosuggestInputRef","focus","current","select","filterValue","filterText","hideEnteredTextLabel","onSelectItem","option","close","autosuggestItemsState","autosuggestItemsHandlers","autosuggestLoadMoreHandlers","detail","handleChange","event","setShowAll","resetHighlightWithKeyboard","handleDelayedInput","fireLoadMoreOnInputChange","handleBlur","handleFocus","fireLoadMoreOnInputFocus","handleKeyUp","e","handleKeyDown","handlePressArrowDown","moveHighlightWithKeyboard","handlePressArrowUp","handlePressEnter","selectHighlightedOptionWithKeyboard","handleCloseDropdown","handleRecoveryClick","fireLoadMoreOnRecoveryClick","formFieldContext","selfControlId","controlId","listId","highlightedOptionId","highlightedOption","undefined","isEmpty","items","length","dropdownStatus","onRecoveryClick","className","root","ariaControls","ariaActivedescendant","dropdownExpanded","content","dropdownContent","highlightText","handleLoadMore","fireLoadMoreOnScroll","hasDropdownStatus","listBottom","isSticky","dropdownFooter","hasItems","onCloseDropdown","onDelayedInput","onPressArrowDown","onPressArrowUp","onPressEnter"],"sources":["/Users/dcastro/node_modules/src/autosuggest/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { Ref, useImperativeHandle, useRef } from 'react';\n\nimport { useAutosuggestItems } from './options-controller';\nimport { AutosuggestItem, AutosuggestProps } from './interfaces';\n\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport DropdownFooter from '../internal/components/dropdown-footer';\n\nimport { generateUniqueId, useUniqueId } from '../internal/hooks/use-unique-id';\nimport {\n  BaseKeyDetail,\n  fireCancelableEvent,\n  fireNonCancelableEvent,\n  NonCancelableCustomEvent,\n} from '../internal/events';\nimport { BaseChangeDetail, InputProps } from '../input/interfaces';\nimport styles from './styles.css.js';\nimport { checkOptionValueField } from '../select/utils/check-option-value-field';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport AutosuggestOptionsList from './options-list';\nimport { useAutosuggestLoadMore } from './load-more-controller';\nimport { OptionsLoadItemsDetail } from '../internal/components/dropdown/interfaces';\nimport AutosuggestInput, { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport { useFormFieldContext } from '../contexts/form-field';\nimport clsx from 'clsx';\n\nexport interface InternalAutosuggestProps extends AutosuggestProps, InternalBaseComponentProps {}\n\nconst InternalAutosuggest = React.forwardRef((props: InternalAutosuggestProps, ref: Ref<InputProps.Ref>) => {\n  const {\n    value,\n    onChange,\n    onBlur,\n    onFocus,\n    onKeyUp,\n    onLoadItems,\n    options,\n    filteringType = 'auto',\n    statusType = 'finished',\n    placeholder,\n    name,\n    disabled,\n    disableBrowserAutocorrect = false,\n    autoFocus,\n    readOnly,\n    ariaLabel,\n    ariaRequired,\n    enteredTextLabel,\n    onKeyDown,\n    virtualScroll,\n    expandToViewport,\n    onSelect,\n    selectedAriaLabel,\n    renderHighlightedAriaLive,\n    __internalRootRef,\n    ...restProps\n  } = props;\n\n  checkControlled('Autosuggest', 'value', value, 'onChange', onChange);\n  checkOptionValueField('Autosuggest', 'options', options);\n\n  const autosuggestInputRef = useRef<AutosuggestInputRef>(null);\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: () => autosuggestInputRef.current?.focus(),\n      select: () => autosuggestInputRef.current?.select(),\n    }),\n    []\n  );\n\n  const [autosuggestItemsState, autosuggestItemsHandlers] = useAutosuggestItems({\n    options: options || [],\n    filterValue: value,\n    filterText: value,\n    filteringType,\n    hideEnteredTextLabel: false,\n    onSelectItem: (option: AutosuggestItem) => {\n      const value = option.value || '';\n      fireNonCancelableEvent(onChange, { value });\n      fireNonCancelableEvent(onSelect, { value });\n      autosuggestInputRef.current?.close();\n    },\n  });\n\n  const autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n    options,\n    statusType,\n    onLoadItems: (detail: OptionsLoadItemsDetail) => fireNonCancelableEvent(onLoadItems, detail),\n  });\n\n  const handleChange = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n    autosuggestItemsHandlers.setShowAll(false);\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    fireNonCancelableEvent(onChange, event.detail);\n  };\n\n  const handleDelayedInput = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n  };\n\n  const handleBlur = () => {\n    fireNonCancelableEvent(onBlur, null);\n  };\n\n  const handleFocus = () => {\n    autosuggestItemsHandlers.setShowAll(true);\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n    fireNonCancelableEvent(onFocus, null);\n  };\n\n  const handleKeyUp = (e: CustomEvent<BaseKeyDetail>) => {\n    fireCancelableEvent(onKeyUp, e.detail);\n  };\n\n  const handleKeyDown = (e: CustomEvent<BaseKeyDetail>) => {\n    fireCancelableEvent(onKeyDown, e.detail);\n  };\n\n  const handlePressArrowDown = () => {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n  };\n\n  const handlePressArrowUp = () => {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n  };\n\n  const handlePressEnter = () => {\n    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n  };\n\n  const handleCloseDropdown = () => {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n  };\n\n  const handleRecoveryClick = () => {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n    autosuggestInputRef.current?.focus();\n  };\n\n  const formFieldContext = useFormFieldContext(restProps);\n  const selfControlId = useUniqueId('input');\n  const controlId = formFieldContext.controlId ?? selfControlId;\n  const listId = useUniqueId('list');\n  const highlightedOptionId = autosuggestItemsState.highlightedOption ? generateUniqueId() : undefined;\n\n  const isEmpty = !value && !autosuggestItemsState.items.length;\n  const dropdownStatus = useDropdownStatus({ ...props, isEmpty, onRecoveryClick: handleRecoveryClick });\n\n  return (\n    <AutosuggestInput\n      {...restProps}\n      className={clsx(styles.root, restProps.className)}\n      ref={autosuggestInputRef}\n      __internalRootRef={__internalRootRef}\n      value={value}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onKeyUp={handleKeyUp}\n      onKeyDown={handleKeyDown}\n      name={name}\n      controlId={controlId}\n      placeholder={placeholder}\n      disabled={disabled}\n      readOnly={readOnly}\n      autoFocus={autoFocus}\n      ariaLabel={ariaLabel}\n      ariaRequired={ariaRequired}\n      disableBrowserAutocorrect={disableBrowserAutocorrect}\n      expandToViewport={expandToViewport}\n      ariaControls={listId}\n      ariaActivedescendant={highlightedOptionId}\n      dropdownExpanded={autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null}\n      dropdownContent={\n        <AutosuggestOptionsList\n          autosuggestItemsState={autosuggestItemsState}\n          autosuggestItemsHandlers={autosuggestItemsHandlers}\n          highlightedOptionId={highlightedOptionId}\n          highlightText={value}\n          listId={listId}\n          controlId={controlId}\n          enteredTextLabel={enteredTextLabel}\n          handleLoadMore={autosuggestLoadMoreHandlers.fireLoadMoreOnScroll}\n          hasDropdownStatus={dropdownStatus.content !== null}\n          virtualScroll={virtualScroll}\n          selectedAriaLabel={selectedAriaLabel}\n          renderHighlightedAriaLive={renderHighlightedAriaLive}\n          listBottom={!dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} /> : null}\n        />\n      }\n      dropdownFooter={\n        dropdownStatus.isSticky ? (\n          <DropdownFooter content={dropdownStatus.content} hasItems={autosuggestItemsState.items.length >= 1} />\n        ) : null\n      }\n      onCloseDropdown={handleCloseDropdown}\n      onDelayedInput={handleDelayedInput}\n      onPressArrowDown={handlePressArrowDown}\n      onPressArrowUp={handlePressArrowUp}\n      onPressEnter={handlePressEnter}\n    />\n  );\n});\n\nexport default InternalAutosuggest;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}