{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { Drawer } from './drawer';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nexport function NavigationPanel(_a) {\n  var _b;\n  var ariaLabels = _a.ariaLabels,\n    footerHeight = _a.footerHeight,\n    headerHeight = _a.headerHeight,\n    isHidden = _a.isHidden,\n    isMobile = _a.isMobile,\n    navigation = _a.navigation,\n    navigationDrawerWidth = _a.navigationDrawerWidth,\n    navigationWidth = _a.navigationWidth,\n    navigationOpen = _a.navigationOpen,\n    onClick = _a.onClick,\n    onNavigationToggle = _a.onNavigationToggle,\n    panelHeightStyle = _a.panelHeightStyle,\n    toggleRefs = _a.toggleRefs;\n  return React.createElement(\"div\", {\n    className: styles['navigation-panel'],\n    style: {\n      width: navigationDrawerWidth\n    }\n  }, React.createElement(\"div\", {\n    className: clsx(styles['panel-wrapper-outer'], (_b = {}, _b[styles.mobile] = isMobile, _b[styles.open] = navigationOpen, _b)),\n    style: __assign({}, isMobile ? {\n      top: headerHeight,\n      bottom: footerHeight\n    } : panelHeightStyle)\n  }, React.createElement(Drawer, {\n    type: \"navigation\",\n    isMobile: isMobile,\n    width: navigationWidth,\n    isOpen: navigationOpen,\n    isHidden: isHidden,\n    onToggle: onNavigationToggle,\n    toggleRefs: toggleRefs,\n    onClick: onClick,\n    contentClassName: clsx(styles.navigation, testutilStyles.navigation),\n    closeClassName: clsx(styles['navigation-close'], testutilStyles['navigation-close']),\n    toggleClassName: clsx(styles['navigation-toggle'], testutilStyles['navigation-toggle']),\n    topOffset: headerHeight,\n    bottomOffset: footerHeight,\n    ariaLabels: ariaLabels\n  }, navigation)));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAA6BC,MAAM,QAAQ,UAAU;AACrD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,cAAc,MAAM,8BAA8B;AA0BzD,OAAM,SAAUC,eAAe,CAACC,EAcT;;MAbrBC,UAAU;IACVC,YAAY;IACZC,YAAY;IACZC,QAAQ;IACRC,QAAQ;IACRC,UAAU;IACVC,qBAAqB;IACrBC,eAAe;IACfC,cAAc;IACdC,OAAO;IACPC,kBAAkB;IAClBC,gBAAgB;IAChBC,UAAU;EAEV,OACElB;IAAKmB,SAAS,EAAEjB,MAAM,CAAC,kBAAkB,CAAC;IAAEkB,KAAK,EAAE;MAAEC,KAAK,EAAET;IAAqB;EAAE,GACjFZ;IACEmB,SAAS,EAAEpB,IAAI,CAACG,MAAM,CAAC,qBAAqB,CAAC,YAC3CoB,GAACpB,MAAM,CAACqB,MAAM,IAAGb,QAAQ,EACzBY,GAACpB,MAAM,CAACsB,IAAI,IAAGV,cAAc,MAC7B;IACFM,KAAK,eACCV,QAAQ,GAAG;MAAEe,GAAG,EAAEjB,YAAY;MAAEkB,MAAM,EAAEnB;IAAY,CAAE,GAAGU,gBAAgB;EAAC,GAGhFjB,oBAACC,MAAM;IACL0B,IAAI,EAAC,YAAY;IACjBjB,QAAQ,EAAEA,QAAQ;IAClBW,KAAK,EAAER,eAAe;IACtBe,MAAM,EAAEd,cAAc;IACtBL,QAAQ,EAAEA,QAAQ;IAClBoB,QAAQ,EAAEb,kBAAkB;IAC5BE,UAAU,EAAEA,UAAU;IACtBH,OAAO,EAAEA,OAAO;IAChBe,gBAAgB,EAAE/B,IAAI,CAACG,MAAM,CAACS,UAAU,EAAER,cAAc,CAACQ,UAAU,CAAC;IACpEoB,cAAc,EAAEhC,IAAI,CAACG,MAAM,CAAC,kBAAkB,CAAC,EAAEC,cAAc,CAAC,kBAAkB,CAAC,CAAC;IACpF6B,eAAe,EAAEjC,IAAI,CAACG,MAAM,CAAC,mBAAmB,CAAC,EAAEC,cAAc,CAAC,mBAAmB,CAAC,CAAC;IACvF8B,SAAS,EAAEzB,YAAY;IACvB0B,YAAY,EAAE3B,YAAY;IAC1BD,UAAU,EAAEA;EAAU,GAErBK,UAAU,CACJ,CACL,CACF;AAEV","names":["clsx","React","Drawer","styles","testutilStyles","NavigationPanel","_a","ariaLabels","footerHeight","headerHeight","isHidden","isMobile","navigation","navigationDrawerWidth","navigationWidth","navigationOpen","onClick","onNavigationToggle","panelHeightStyle","toggleRefs","className","style","width","_b","mobile","open","top","bottom","type","isOpen","onToggle","contentClassName","closeClassName","toggleClassName","topOffset","bottomOffset"],"sources":["/Users/dcastro/node_modules/src/app-layout/navigation-panel.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { AppLayoutProps } from './interfaces';\nimport { DesktopDrawerProps, Drawer } from './drawer';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nimport useContentHeight from './utils/use-content-height';\n\ninterface NavigationPanelProps {\n  navigationOpen: boolean;\n  isHidden: DesktopDrawerProps['isHidden'];\n\n  navigationDrawerWidth: number;\n  navigationWidth: number;\n  headerHeight: DesktopDrawerProps['topOffset'];\n  footerHeight: DesktopDrawerProps['bottomOffset'];\n  panelHeightStyle: ReturnType<typeof useContentHeight>['panelHeightStyle'];\n\n  navigation: React.ReactNode;\n\n  ariaLabels: AppLayoutProps['ariaLabels'];\n\n  isMobile: boolean;\n  isMotionEnabled: boolean;\n\n  onNavigationToggle: DesktopDrawerProps['onToggle'];\n  onClick: DesktopDrawerProps['onClick'];\n\n  toggleRefs: DesktopDrawerProps['toggleRefs'];\n}\n\nexport function NavigationPanel({\n  ariaLabels,\n  footerHeight,\n  headerHeight,\n  isHidden,\n  isMobile,\n  navigation,\n  navigationDrawerWidth,\n  navigationWidth,\n  navigationOpen,\n  onClick,\n  onNavigationToggle,\n  panelHeightStyle,\n  toggleRefs,\n}: NavigationPanelProps) {\n  return (\n    <div className={styles['navigation-panel']} style={{ width: navigationDrawerWidth }}>\n      <div\n        className={clsx(styles['panel-wrapper-outer'], {\n          [styles.mobile]: isMobile,\n          [styles.open]: navigationOpen,\n        })}\n        style={{\n          ...(isMobile ? { top: headerHeight, bottom: footerHeight } : panelHeightStyle),\n        }}\n      >\n        <Drawer\n          type=\"navigation\"\n          isMobile={isMobile}\n          width={navigationWidth}\n          isOpen={navigationOpen}\n          isHidden={isHidden}\n          onToggle={onNavigationToggle}\n          toggleRefs={toggleRefs}\n          onClick={onClick}\n          contentClassName={clsx(styles.navigation, testutilStyles.navigation)}\n          closeClassName={clsx(styles['navigation-close'], testutilStyles['navigation-close'])}\n          toggleClassName={clsx(styles['navigation-toggle'], testutilStyles['navigation-toggle'])}\n          topOffset={headerHeight}\n          bottomOffset={footerHeight}\n          ariaLabels={ariaLabels}\n        >\n          {navigation}\n        </Drawer>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}