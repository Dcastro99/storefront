{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nimport React, { useCallback } from 'react';\nimport InternalFormField from '../form-field/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalGrid from '../grid/internal';\nimport { InternalButton } from '../button/internal';\nimport clsx from 'clsx';\nvar Divider = function () {\n  return React.createElement(InternalBox, {\n    className: styles.divider,\n    padding: {\n      top: 'l'\n    }\n  });\n};\nfunction render(item, itemIndex, slot) {\n  return typeof slot === 'function' ? slot(item, itemIndex) : slot;\n}\nvar GRID_DEFINITION = [{\n  colspan: {\n    \"default\": 12,\n    xs: 9\n  }\n}];\nvar REMOVABLE_GRID_DEFINITION = [{\n  colspan: {\n    \"default\": 12,\n    xs: 9\n  }\n}, {\n  colspan: {\n    \"default\": 12,\n    xs: 3\n  }\n}];\nexport var Row = React.memo(function (_a) {\n  var breakpoint = _a.breakpoint,\n    item = _a.item,\n    definition = _a.definition,\n    _b = _a.i18nStrings,\n    i18nStrings = _b === void 0 ? {} : _b,\n    index = _a.index,\n    removable = _a.removable,\n    removeButtonText = _a.removeButtonText,\n    removeButtonRefs = _a.removeButtonRefs,\n    onRemoveButtonClick = _a.onRemoveButtonClick;\n  var isNarrowViewport = breakpoint === 'default' || breakpoint === 'xxs';\n  var isWideViewport = !isNarrowViewport;\n  var handleRemoveClick = useCallback(function () {\n    fireNonCancelableEvent(onRemoveButtonClick, {\n      itemIndex: index\n    });\n  }, [onRemoveButtonClick, index]);\n  return React.createElement(InternalBox, {\n    className: styles.row,\n    margin: {\n      bottom: 's'\n    }\n  }, React.createElement(InternalGrid, {\n    __breakpoint: breakpoint,\n    gridDefinition: removable ? REMOVABLE_GRID_DEFINITION : GRID_DEFINITION\n  }, React.createElement(InternalColumnLayout, {\n    className: styles['row-control'],\n    columns: definition.length,\n    __breakpoint: breakpoint\n  }, definition.map(function (_a, defIndex) {\n    var info = _a.info,\n      label = _a.label,\n      constraintText = _a.constraintText,\n      errorText = _a.errorText,\n      control = _a.control;\n    return React.createElement(InternalFormField, {\n      key: defIndex,\n      className: styles.field,\n      label: label,\n      info: info,\n      constraintText: render(item, index, constraintText),\n      errorText: render(item, index, errorText),\n      stretch: true,\n      i18nStrings: {\n        errorIconAriaLabel: i18nStrings.errorIconAriaLabel\n      },\n      __hideLabel: isWideViewport && index > 0\n    }, render(item, index, control));\n  })), removable && React.createElement(ButtonContainer, {\n    index: index,\n    isNarrowViewport: isNarrowViewport\n  }, React.createElement(InternalButton, {\n    className: styles['remove-button'],\n    formAction: \"none\",\n    ref: function (ref) {\n      removeButtonRefs[index] = ref !== null && ref !== void 0 ? ref : undefined;\n    },\n    onClick: handleRemoveClick\n  }, removeButtonText))), isNarrowViewport && React.createElement(Divider, null));\n});\nvar ButtonContainer = function (_a) {\n  var _b;\n  var index = _a.index,\n    children = _a.children,\n    isNarrowViewport = _a.isNarrowViewport;\n  return React.createElement(\"div\", {\n    className: clsx((_b = {}, _b[styles['button-container']] = !isNarrowViewport && index === 0, _b[styles['right-align']] = isNarrowViewport, _b))\n  }, children);\n};","map":{"version":3,"mappings":"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","names":["InternalBox","styles","React","useCallback","InternalFormField","InternalColumnLayout","fireNonCancelableEvent","InternalGrid","InternalButton","clsx","Divider","className","divider","padding","top","render","item","itemIndex","slot","GRID_DEFINITION","colspan","xs","REMOVABLE_GRID_DEFINITION","Row","memo","_a","breakpoint","definition","_b","i18nStrings","index","removable","removeButtonText","removeButtonRefs","onRemoveButtonClick","isNarrowViewport","isWideViewport","handleRemoveClick","row","margin","bottom","__breakpoint","gridDefinition","columns","length","map","defIndex","info","label","constraintText","errorText","control","key","field","stretch","errorIconAriaLabel","__hideLabel","ButtonContainer","formAction","ref","undefined","onClick","children"],"sources":["/Users/dcastro/node_modules/src/attribute-editor/row.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nimport React, { useCallback } from 'react';\nimport InternalFormField from '../form-field/internal';\nimport InternalColumnLayout, { ColumnLayoutBreakpoint } from '../column-layout/internal';\nimport { AttributeEditorProps } from './interfaces';\nimport { ButtonProps } from '../button/interfaces';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport InternalGrid from '../grid/internal';\nimport { InternalButton } from '../button/internal';\nimport clsx from 'clsx';\n\nconst Divider = () => <InternalBox className={styles.divider} padding={{ top: 'l' }} />;\n\nexport interface RowProps<T> {\n  breakpoint: ColumnLayoutBreakpoint | null;\n  item: T;\n  definition: ReadonlyArray<AttributeEditorProps.FieldDefinition<T>>;\n  i18nStrings: AttributeEditorProps.I18nStrings | undefined;\n  index: number;\n  removable: boolean;\n  removeButtonText: string;\n  removeButtonRefs: Array<ButtonProps.Ref | undefined>;\n  onRemoveButtonClick?: NonCancelableEventHandler<AttributeEditorProps.RemoveButtonClickDetail>;\n}\n\nfunction render<T>(\n  item: T,\n  itemIndex: number,\n  slot: AttributeEditorProps.FieldRenderable<T> | React.ReactNode | undefined\n) {\n  return typeof slot === 'function' ? slot(item, itemIndex) : slot;\n}\n\nconst GRID_DEFINITION = [{ colspan: { default: 12, xs: 9 } }];\nconst REMOVABLE_GRID_DEFINITION = [{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }];\nexport const Row = React.memo(\n  <T,>({\n    breakpoint,\n    item,\n    definition,\n    i18nStrings = {},\n    index,\n    removable,\n    removeButtonText,\n    removeButtonRefs,\n    onRemoveButtonClick,\n  }: RowProps<T>) => {\n    const isNarrowViewport = breakpoint === 'default' || breakpoint === 'xxs';\n    const isWideViewport = !isNarrowViewport;\n\n    const handleRemoveClick = useCallback(() => {\n      fireNonCancelableEvent(onRemoveButtonClick, { itemIndex: index });\n    }, [onRemoveButtonClick, index]);\n\n    return (\n      <InternalBox className={styles.row} margin={{ bottom: 's' }}>\n        <InternalGrid\n          __breakpoint={breakpoint}\n          gridDefinition={removable ? REMOVABLE_GRID_DEFINITION : GRID_DEFINITION}\n        >\n          <InternalColumnLayout className={styles['row-control']} columns={definition.length} __breakpoint={breakpoint}>\n            {definition.map(({ info, label, constraintText, errorText, control }, defIndex) => (\n              <InternalFormField\n                key={defIndex}\n                className={styles.field}\n                label={label}\n                info={info}\n                constraintText={render(item, index, constraintText)}\n                errorText={render(item, index, errorText)}\n                stretch={true}\n                i18nStrings={{ errorIconAriaLabel: i18nStrings.errorIconAriaLabel }}\n                __hideLabel={isWideViewport && index > 0}\n              >\n                {render(item, index, control)}\n              </InternalFormField>\n            ))}\n          </InternalColumnLayout>\n          {removable && (\n            <ButtonContainer index={index} isNarrowViewport={isNarrowViewport}>\n              <InternalButton\n                className={styles['remove-button']}\n                formAction=\"none\"\n                ref={ref => {\n                  removeButtonRefs[index] = ref ?? undefined;\n                }}\n                onClick={handleRemoveClick}\n              >\n                {removeButtonText}\n              </InternalButton>\n            </ButtonContainer>\n          )}\n        </InternalGrid>\n        {isNarrowViewport && <Divider />}\n      </InternalBox>\n    );\n  }\n);\n\ninterface ButtonContainer {\n  index: number;\n  children: React.ReactNode;\n  isNarrowViewport: boolean;\n}\n\nconst ButtonContainer = ({ index, children, isNarrowViewport }: ButtonContainer) => (\n  <div\n    className={clsx({\n      [styles['button-container']]: !isNarrowViewport && index === 0,\n      [styles['right-align']]: isNarrowViewport,\n    })}\n  >\n    {children}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}