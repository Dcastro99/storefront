{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalForm from '../form/internal';\nimport InternalHeader from '../header/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport WizardActions from './wizard-actions';\nimport WizardFormHeader from './wizard-form-header';\nimport styles from './styles.css.js';\nexport default function WizardForm(_a) {\n  var steps = _a.steps,\n    activeStepIndex = _a.activeStepIndex,\n    isVisualRefresh = _a.isVisualRefresh,\n    showCollapsedSteps = _a.showCollapsedSteps,\n    i18nStrings = _a.i18nStrings,\n    isPrimaryLoading = _a.isPrimaryLoading,\n    allowSkipTo = _a.allowSkipTo,\n    secondaryActions = _a.secondaryActions,\n    onCancelClick = _a.onCancelClick,\n    onPreviousClick = _a.onPreviousClick,\n    onPrimaryClick = _a.onPrimaryClick,\n    onSkipToClick = _a.onSkipToClick;\n  var _b = steps[activeStepIndex] || {},\n    title = _b.title,\n    info = _b.info,\n    description = _b.description,\n    content = _b.content,\n    errorText = _b.errorText,\n    isOptional = _b.isOptional;\n  var isLastStep = activeStepIndex >= steps.length - 1;\n  var skipToTargetIndex = findSkipToTargetIndex(steps, activeStepIndex);\n  var isMobile = useMobile();\n  var showSkipTo = allowSkipTo && skipToTargetIndex !== -1;\n  var skipToButtonText = skipToTargetIndex !== -1 && i18nStrings.skipToButtonLabel ? i18nStrings.skipToButtonLabel(steps[skipToTargetIndex], skipToTargetIndex + 1) : undefined;\n  return React.createElement(React.Fragment, null, React.createElement(WizardFormHeader, {\n    isMobile: isMobile || showCollapsedSteps,\n    isVisualRefresh: isVisualRefresh\n  }, React.createElement(\"div\", {\n    className: clsx(styles['collapsed-steps'], !showCollapsedSteps && styles['collapsed-steps-hidden'], isVisualRefresh && isMobile && styles['collapsed-steps-extra-padding'])\n  }, i18nStrings.collapsedStepsLabel(activeStepIndex + 1, steps.length)), React.createElement(InternalHeader, {\n    className: styles['form-header-component'],\n    variant: \"h1\",\n    description: description,\n    info: info\n  }, title, isOptional && React.createElement(\"i\", null, \" - \".concat(i18nStrings.optional)))), React.createElement(InternalForm, {\n    className: clsx(styles['form-component']),\n    actions: React.createElement(WizardActions, {\n      cancelButtonText: i18nStrings.cancelButton,\n      primaryButtonText: isLastStep ? i18nStrings.submitButton : i18nStrings.nextButton,\n      previousButtonText: i18nStrings.previousButton,\n      onCancelClick: onCancelClick,\n      onPreviousClick: onPreviousClick,\n      onPrimaryClick: onPrimaryClick,\n      onSkipToClick: function () {\n        return onSkipToClick(skipToTargetIndex);\n      },\n      showPrevious: activeStepIndex !== 0,\n      isPrimaryLoading: isPrimaryLoading,\n      showSkipTo: showSkipTo,\n      skipToButtonText: skipToButtonText\n    }),\n    secondaryActions: secondaryActions,\n    errorText: errorText,\n    errorIconAriaLabel: i18nStrings.errorIconAriaLabel\n  }, content));\n}\nfunction findSkipToTargetIndex(steps, activeStepIndex) {\n  var nextRequiredStepIndex = activeStepIndex;\n  do {\n    nextRequiredStepIndex++;\n  } while (nextRequiredStepIndex < steps.length - 1 && steps[nextRequiredStepIndex].isOptional);\n  return nextRequiredStepIndex > activeStepIndex + 1 ? nextRequiredStepIndex : -1;\n}","map":{"version":3,"mappings":"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","names":["React","clsx","InternalForm","InternalHeader","useMobile","WizardActions","WizardFormHeader","styles","WizardForm","_a","steps","activeStepIndex","isVisualRefresh","showCollapsedSteps","i18nStrings","isPrimaryLoading","allowSkipTo","secondaryActions","onCancelClick","onPreviousClick","onPrimaryClick","onSkipToClick","title","info","description","content","errorText","isOptional","isLastStep","length","skipToTargetIndex","findSkipToTargetIndex","isMobile","showSkipTo","skipToButtonText","skipToButtonLabel","undefined","className","collapsedStepsLabel","variant","optional","actions","cancelButtonText","cancelButton","primaryButtonText","submitButton","nextButton","previousButtonText","previousButton","showPrevious","errorIconAriaLabel","nextRequiredStepIndex"],"sources":["/Users/dcastro/node_modules/src/wizard/wizard-form.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalForm from '../form/internal';\nimport InternalHeader from '../header/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport WizardActions from './wizard-actions';\nimport { WizardProps } from './interfaces';\nimport WizardFormHeader from './wizard-form-header';\nimport styles from './styles.css.js';\n\ninterface WizardFormProps {\n  steps: ReadonlyArray<WizardProps.Step>;\n  activeStepIndex: number;\n  isVisualRefresh: boolean;\n  showCollapsedSteps: boolean;\n  i18nStrings: WizardProps.I18nStrings;\n  isPrimaryLoading: boolean;\n  allowSkipTo: boolean;\n  secondaryActions?: React.ReactNode;\n  onCancelClick: () => void;\n  onPreviousClick: () => void;\n  onPrimaryClick: () => void;\n  onSkipToClick: (stepIndex: number) => void;\n}\n\nexport default function WizardForm({\n  steps,\n  activeStepIndex,\n  isVisualRefresh,\n  showCollapsedSteps,\n  i18nStrings,\n  isPrimaryLoading,\n  allowSkipTo,\n  secondaryActions,\n  onCancelClick,\n  onPreviousClick,\n  onPrimaryClick,\n  onSkipToClick,\n}: WizardFormProps) {\n  const { title, info, description, content, errorText, isOptional } = steps[activeStepIndex] || {};\n  const isLastStep = activeStepIndex >= steps.length - 1;\n  const skipToTargetIndex = findSkipToTargetIndex(steps, activeStepIndex);\n  const isMobile = useMobile();\n\n  const showSkipTo = allowSkipTo && skipToTargetIndex !== -1;\n  const skipToButtonText =\n    skipToTargetIndex !== -1 && i18nStrings.skipToButtonLabel\n      ? i18nStrings.skipToButtonLabel(steps[skipToTargetIndex], skipToTargetIndex + 1)\n      : undefined;\n\n  return (\n    <>\n      <WizardFormHeader isMobile={isMobile || showCollapsedSteps} isVisualRefresh={isVisualRefresh}>\n        <div\n          className={clsx(\n            styles['collapsed-steps'],\n            !showCollapsedSteps && styles['collapsed-steps-hidden'],\n            isVisualRefresh && isMobile && styles['collapsed-steps-extra-padding']\n          )}\n        >\n          {i18nStrings.collapsedStepsLabel(activeStepIndex + 1, steps.length)}\n        </div>\n        <InternalHeader className={styles['form-header-component']} variant=\"h1\" description={description} info={info}>\n          {title}\n          {isOptional && <i>{` - ${i18nStrings.optional}`}</i>}\n        </InternalHeader>\n      </WizardFormHeader>\n      <InternalForm\n        className={clsx(styles['form-component'])}\n        actions={\n          <WizardActions\n            cancelButtonText={i18nStrings.cancelButton}\n            primaryButtonText={isLastStep ? i18nStrings.submitButton : i18nStrings.nextButton}\n            previousButtonText={i18nStrings.previousButton}\n            onCancelClick={onCancelClick}\n            onPreviousClick={onPreviousClick}\n            onPrimaryClick={onPrimaryClick}\n            onSkipToClick={() => onSkipToClick(skipToTargetIndex)}\n            showPrevious={activeStepIndex !== 0}\n            isPrimaryLoading={isPrimaryLoading}\n            showSkipTo={showSkipTo}\n            skipToButtonText={skipToButtonText}\n          />\n        }\n        secondaryActions={secondaryActions}\n        errorText={errorText}\n        errorIconAriaLabel={i18nStrings.errorIconAriaLabel}\n      >\n        {content}\n      </InternalForm>\n    </>\n  );\n}\n\nfunction findSkipToTargetIndex(steps: ReadonlyArray<WizardProps.Step>, activeStepIndex: number): number {\n  let nextRequiredStepIndex = activeStepIndex;\n  do {\n    nextRequiredStepIndex++;\n  } while (nextRequiredStepIndex < steps.length - 1 && steps[nextRequiredStepIndex].isOptional);\n\n  return nextRequiredStepIndex > activeStepIndex + 1 ? nextRequiredStepIndex : -1;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}