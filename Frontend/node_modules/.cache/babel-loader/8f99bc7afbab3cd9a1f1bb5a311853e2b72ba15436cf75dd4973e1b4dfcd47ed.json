{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport InternalIcon from '../../icon/internal';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport { KeyCode } from '../../internal/keycode';\nimport { getAriaSort, getSortingIconName, getSortingStatus, isSorted } from './utils';\nimport styles from './styles.css.js';\nexport function TableHeaderCell(_a) {\n  var _b, _c, _d;\n  var className = _a.className,\n    style = _a.style,\n    tabIndex = _a.tabIndex,\n    column = _a.column,\n    activeSortingColumn = _a.activeSortingColumn,\n    sortingDescending = _a.sortingDescending,\n    sortingDisabled = _a.sortingDisabled,\n    wrapLines = _a.wrapLines,\n    resizer = _a.resizer,\n    showFocusRing = _a.showFocusRing,\n    onClick = _a.onClick,\n    onFocus = _a.onFocus,\n    onBlur = _a.onBlur;\n  var focusVisible = useFocusVisible();\n  var sortable = !!column.sortingComparator || !!column.sortingField;\n  var sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);\n  var sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);\n  var handleClick = function () {\n    return onClick({\n      sortingColumn: column,\n      isDescending: sorted ? !sortingDescending : false\n    });\n  };\n  // Elements with role=\"button\" do not have the default behavior of <button>, where pressing\n  // Enter or Space will trigger a click event. Therefore we need to add this ourselves.\n  // The native <button> element cannot be used due to a misaligned implementation in Firefox:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=843003\n  var handleKeyPress = function (_a) {\n    var e = _a.nativeEvent;\n    if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n  return React.createElement(\"th\", {\n    className: clsx(className, (_b = {}, _b[styles['header-cell-resizable']] = !!resizer, _b[styles['header-cell-sortable']] = sortingStatus, _b[styles['header-cell-sorted']] = sortingStatus === 'ascending' || sortingStatus === 'descending', _b[styles['header-cell-disabled']] = sortingDisabled, _b[styles['header-cell-ascending']] = sortingStatus === 'ascending', _b[styles['header-cell-descending']] = sortingStatus === 'descending', _b)),\n    \"aria-sort\": sortingStatus && getAriaSort(sortingStatus),\n    style: style,\n    scope: \"col\"\n  }, React.createElement(\"div\", __assign({\n    className: clsx(styles['header-cell-content'], (_c = {}, _c[styles['header-cell-fake-focus']] = showFocusRing && focusVisible['data-awsui-focus-visible'], _c)),\n    \"aria-label\": column.ariaLabel ? column.ariaLabel({\n      sorted: sorted,\n      descending: sorted && !!sortingDescending,\n      disabled: !!sortingDisabled\n    }) : undefined\n  }, sortingDisabled || !sortingStatus ? (_d = {}, _d['aria-disabled'] = 'true', _d) : __assign(__assign({\n    onKeyPress: handleKeyPress,\n    tabIndex: tabIndex,\n    role: 'button'\n  }, focusVisible), {\n    onClick: handleClick,\n    onFocus: onFocus,\n    onBlur: onBlur\n  })), React.createElement(\"div\", {\n    className: clsx(styles['header-cell-text'], wrapLines && styles['header-cell-text-wrap'])\n  }, column.header), sortingStatus && React.createElement(\"span\", {\n    className: styles['sorting-icon']\n  }, React.createElement(InternalIcon, {\n    name: getSortingIconName(sortingStatus)\n  }))), resizer);\n}","map":{"version":3,"mappings":"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","names":["clsx","React","InternalIcon","useFocusVisible","KeyCode","getAriaSort","getSortingIconName","getSortingStatus","isSorted","styles","TableHeaderCell","_a","className","style","tabIndex","column","activeSortingColumn","sortingDescending","sortingDisabled","wrapLines","resizer","showFocusRing","onClick","onFocus","onBlur","focusVisible","sortable","sortingComparator","sortingField","sorted","sortingStatus","handleClick","sortingColumn","isDescending","handleKeyPress","e","keyCode","enter","space","preventDefault","_b","scope","_c","ariaLabel","descending","disabled","undefined","_d","__assign","onKeyPress","role","header","name"],"sources":["/Users/dcastro/node_modules/src/table/header-cell/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport InternalIcon from '../../icon/internal';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport { KeyCode } from '../../internal/keycode';\nimport { TableProps } from '../interfaces';\nimport { getAriaSort, getSortingIconName, getSortingStatus, isSorted } from './utils';\nimport styles from './styles.css.js';\n\ninterface TableHeaderCellProps {\n  className?: string;\n  style?: React.CSSProperties;\n  tabIndex: number;\n  column: TableProps.ColumnDefinition<any>;\n  activeSortingColumn: TableProps.SortingColumn<any> | undefined;\n  sortingDescending: boolean | undefined;\n  sortingDisabled: boolean | undefined;\n  wrapLines: boolean | undefined;\n  resizer: React.ReactNode;\n  showFocusRing: boolean;\n  onClick(detail: TableProps.SortingState<any>): void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\nexport function TableHeaderCell({\n  className,\n  style,\n  tabIndex,\n  column,\n  activeSortingColumn,\n  sortingDescending,\n  sortingDisabled,\n  wrapLines,\n  resizer,\n  showFocusRing,\n  onClick,\n  onFocus,\n  onBlur,\n}: TableHeaderCellProps) {\n  const focusVisible = useFocusVisible();\n  const sortable = !!column.sortingComparator || !!column.sortingField;\n  const sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);\n  const sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);\n  const handleClick = () =>\n    onClick({\n      sortingColumn: column,\n      isDescending: sorted ? !sortingDescending : false,\n    });\n\n  // Elements with role=\"button\" do not have the default behavior of <button>, where pressing\n  // Enter or Space will trigger a click event. Therefore we need to add this ourselves.\n  // The native <button> element cannot be used due to a misaligned implementation in Firefox:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=843003\n  const handleKeyPress = ({ nativeEvent: e }: React.KeyboardEvent) => {\n    if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  return (\n    <th\n      className={clsx(className, {\n        [styles['header-cell-resizable']]: !!resizer,\n        [styles['header-cell-sortable']]: sortingStatus,\n        [styles['header-cell-sorted']]: sortingStatus === 'ascending' || sortingStatus === 'descending',\n        [styles['header-cell-disabled']]: sortingDisabled,\n        [styles['header-cell-ascending']]: sortingStatus === 'ascending',\n        [styles['header-cell-descending']]: sortingStatus === 'descending',\n      })}\n      aria-sort={sortingStatus && getAriaSort(sortingStatus)}\n      style={style}\n      scope=\"col\"\n    >\n      <div\n        className={clsx(styles['header-cell-content'], {\n          [styles['header-cell-fake-focus']]: showFocusRing && focusVisible['data-awsui-focus-visible'],\n        })}\n        aria-label={\n          column.ariaLabel\n            ? column.ariaLabel({\n                sorted: sorted,\n                descending: sorted && !!sortingDescending,\n                disabled: !!sortingDisabled,\n              })\n            : undefined\n        }\n        {...(sortingDisabled || !sortingStatus\n          ? { ['aria-disabled']: 'true' }\n          : {\n              onKeyPress: handleKeyPress,\n              tabIndex: tabIndex,\n              role: 'button',\n              ...focusVisible,\n              onClick: handleClick,\n              onFocus,\n              onBlur,\n            })}\n      >\n        <div className={clsx(styles['header-cell-text'], wrapLines && styles['header-cell-text-wrap'])}>\n          {column.header}\n        </div>\n        {sortingStatus && (\n          <span className={styles['sorting-icon']}>\n            <InternalIcon name={getSortingIconName(sortingStatus)} />\n          </span>\n        )}\n      </div>\n      {resizer}\n    </th>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}