{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { Label, LabelTag, Description, Tags, FilteringTags, OptionIcon } from './option-parts';\nimport { getBaseProps } from '../../base-component';\nimport { warnOnce } from '../../logging';\nimport { isDevelopment } from '../../is-development';\nfunction validateStringValue(value, propertyName) {\n  if (typeof value !== 'undefined' && typeof value !== 'string') {\n    warnOnce('DropdownOption', \"This component only supports string values, but \\\"option.\".concat(propertyName, \"\\\" has \").concat(typeof value, \" type. The component may work incorrectly.\"));\n  }\n}\nvar Option = function (_a) {\n  var _b, _c;\n  var option = _a.option,\n    highlightText = _a.highlightText,\n    _d = _a.triggerVariant,\n    triggerVariant = _d === void 0 ? false : _d,\n    _e = _a.isGroupOption,\n    isGroupOption = _e === void 0 ? false : _e,\n    restProps = __rest(_a, [\"option\", \"highlightText\", \"triggerVariant\", \"isGroupOption\"]);\n  if (!option) {\n    return null;\n  }\n  var disabled = option.disabled;\n  var baseProps = getBaseProps(restProps);\n  if (isDevelopment) {\n    validateStringValue(option.label, 'label');\n    validateStringValue(option.description, 'description');\n    validateStringValue(option.labelTag, 'labelTag');\n    (_b = option.tags) === null || _b === void 0 ? void 0 : _b.forEach(function (tag, index) {\n      validateStringValue(tag, \"tags[\".concat(index, \"]\"));\n    });\n    (_c = option.filteringTags) === null || _c === void 0 ? void 0 : _c.forEach(function (tag, index) {\n      validateStringValue(tag, \"filteringTags[\".concat(index, \"]\"));\n    });\n  }\n  var className = clsx(styles.option, disabled && styles.disabled, isGroupOption && styles.parent);\n  var icon = option.__customIcon || React.createElement(OptionIcon, {\n    name: option.iconName,\n    url: option.iconUrl,\n    svg: option.iconSvg,\n    alt: option.iconAlt,\n    size: option.description || option.tags ? 'big' : 'normal'\n  });\n  return React.createElement(\"span\", __assign({\n    title: option.label || option.value,\n    \"data-value\": option.value,\n    className: className,\n    \"aria-disabled\": disabled\n  }, baseProps), icon, React.createElement(\"span\", {\n    className: clsx(styles.content)\n  }, React.createElement(\"span\", {\n    className: clsx(styles['label-content'])\n  }, React.createElement(Label, {\n    label: option.label || option.value,\n    prefix: option.__labelPrefix,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  }), React.createElement(LabelTag, {\n    labelTag: option.labelTag,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  })), React.createElement(Description, {\n    description: option.description,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  }), React.createElement(Tags, {\n    tags: option.tags,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  }), React.createElement(FilteringTags, {\n    filteringTags: option.filteringTags,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  })));\n};\nexport default Option;","map":{"version":3,"mappings":"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","names":["React","clsx","styles","Label","LabelTag","Description","Tags","FilteringTags","OptionIcon","getBaseProps","warnOnce","isDevelopment","validateStringValue","value","propertyName","Option","_a","highlightText","_d","triggerVariant","_e","isGroupOption","restProps","option","baseProps","label","description","labelTag","tags","forEach","tag","index","filteringTags","className","disabled","parent","icon","__customIcon","name","iconName","url","iconUrl","svg","iconSvg","alt","iconAlt","size","title","content","prefix","__labelPrefix"],"sources":["/Users/dcastro/node_modules/src/internal/components/option/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { OptionProps } from './interfaces';\nimport { Label, LabelTag, Description, Tags, FilteringTags, OptionIcon } from './option-parts';\nimport { getBaseProps } from '../../base-component';\nimport { warnOnce } from '../../logging';\nimport { isDevelopment } from '../../is-development';\n\nexport { OptionProps };\n\nfunction validateStringValue(value: string | undefined, propertyName: string) {\n  if (typeof value !== 'undefined' && typeof value !== 'string') {\n    warnOnce(\n      'DropdownOption',\n      `This component only supports string values, but \"option.${propertyName}\" has ${typeof value} type. The component may work incorrectly.`\n    );\n  }\n}\n\nconst Option = ({\n  option,\n  highlightText,\n  triggerVariant = false,\n  isGroupOption = false,\n  ...restProps\n}: OptionProps) => {\n  if (!option) {\n    return null;\n  }\n  const { disabled } = option;\n  const baseProps = getBaseProps(restProps);\n\n  if (isDevelopment) {\n    validateStringValue(option.label, 'label');\n    validateStringValue(option.description, 'description');\n    validateStringValue(option.labelTag, 'labelTag');\n    option.tags?.forEach((tag, index) => {\n      validateStringValue(tag, `tags[${index}]`);\n    });\n    option.filteringTags?.forEach((tag, index) => {\n      validateStringValue(tag, `filteringTags[${index}]`);\n    });\n  }\n\n  const className = clsx(styles.option, disabled && styles.disabled, isGroupOption && styles.parent);\n\n  const icon = option.__customIcon || (\n    <OptionIcon\n      name={option.iconName}\n      url={option.iconUrl}\n      svg={option.iconSvg}\n      alt={option.iconAlt}\n      size={option.description || option.tags ? 'big' : 'normal'}\n    />\n  );\n\n  return (\n    <span\n      title={option.label || option.value}\n      data-value={option.value}\n      className={className}\n      aria-disabled={disabled}\n      {...baseProps}\n    >\n      {icon}\n      <span className={clsx(styles.content)}>\n        <span className={clsx(styles['label-content'])}>\n          <Label\n            label={option.label || option.value}\n            prefix={option.__labelPrefix}\n            highlightText={highlightText}\n            triggerVariant={triggerVariant}\n          />\n          <LabelTag labelTag={option.labelTag} highlightText={highlightText} triggerVariant={triggerVariant} />\n        </span>\n        <Description description={option.description} highlightText={highlightText} triggerVariant={triggerVariant} />\n        <Tags tags={option.tags} highlightText={highlightText} triggerVariant={triggerVariant} />\n        <FilteringTags\n          filteringTags={option.filteringTags}\n          highlightText={highlightText}\n          triggerVariant={triggerVariant}\n        />\n      </span>\n    </span>\n  );\n};\n\nexport default Option;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}