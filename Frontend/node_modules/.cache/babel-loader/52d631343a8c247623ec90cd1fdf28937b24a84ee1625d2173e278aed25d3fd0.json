{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { isLinkItem } from '../utils/utils';\nimport styles from './styles.css.js';\nimport Tooltip from '../tooltip';\nimport { getItemTarget } from '../utils/utils';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport InternalIcon from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport { getMenuItemProps } from '../utils/menu-item';\nvar ItemElement = function (_a) {\n  var _b;\n  var item = _a.item,\n    disabled = _a.disabled,\n    onItemActivate = _a.onItemActivate,\n    highlighted = _a.highlighted,\n    highlightItem = _a.highlightItem,\n    _c = _a.first,\n    first = _c === void 0 ? false : _c,\n    last = _a.last,\n    hasCategoryHeader = _a.hasCategoryHeader,\n    _d = _a.isKeyboardHighlighted,\n    isKeyboardHighlighted = _d === void 0 ? false : _d,\n    _e = _a.variant,\n    variant = _e === void 0 ? 'normal' : _e;\n  var isLink = isLinkItem(item);\n  var onClick = function (event) {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n    if (!isLink) {\n      event.preventDefault();\n    }\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n  var onHover = function (event) {\n    event.preventDefault();\n    highlightItem(item);\n  };\n  return React.createElement(\"li\", {\n    className: clsx(styles['item-element'], styles[\"variant-\".concat(variant)], (_b = {}, _b[styles.highlighted] = highlighted, _b[styles.disabled] = disabled, _b[styles.first] = first, _b[styles.last] = last, _b[styles['has-category-header']] = hasCategoryHeader, _b[styles['is-focused']] = isKeyboardHighlighted, _b)),\n    role: \"presentation\",\n    \"data-testid\": item.id,\n    \"data-description\": item.description,\n    onClick: onClick,\n    onMouseEnter: onHover,\n    onTouchStart: onHover\n  }, React.createElement(MenuItem, {\n    item: item,\n    disabled: disabled,\n    highlighted: highlighted\n  }));\n};\nfunction MenuItem(_a) {\n  var item = _a.item,\n    disabled = _a.disabled,\n    highlighted = _a.highlighted;\n  var menuItemRef = useRef(null);\n  useEffect(function () {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n  var isDisabledWithReason = disabled && item.disabledReason;\n  var _b = useHiddenDescription(item.disabledReason),\n    targetProps = _b.targetProps,\n    descriptionEl = _b.descriptionEl;\n  var menuItemProps = __assign(__assign({\n    className: styles['menu-item'],\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1\n  }, getMenuItemProps({\n    disabled: disabled\n  })), isDisabledWithReason ? targetProps : {});\n  var menuItem = isLinkItem(item) ? React.createElement(\"a\", __assign({}, menuItemProps, {\n    href: !disabled ? item.href : undefined,\n    target: getItemTarget(item),\n    rel: item.external ? 'noopener noreferrer' : undefined\n  }), React.createElement(MenuItemContent, {\n    item: item,\n    disabled: disabled\n  })) : React.createElement(\"span\", __assign({}, menuItemProps), React.createElement(MenuItemContent, {\n    item: item,\n    disabled: disabled\n  }));\n  var position = useDropdownContext().position;\n  var tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? React.createElement(Tooltip, {\n    content: item.disabledReason,\n    position: tooltipPosition\n  }, menuItem, descriptionEl) : menuItem;\n}\nvar MenuItemContent = function (_a) {\n  var item = _a.item,\n    disabled = _a.disabled;\n  var hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  var hasExternal = isLinkItem(item) && item.external;\n  return React.createElement(React.Fragment, null, hasIcon && React.createElement(MenuItemIcon, {\n    name: item.iconName,\n    url: item.iconUrl,\n    svg: item.iconSvg,\n    alt: item.iconAlt\n  }), ' ', item.text, \" \", hasExternal && React.createElement(ExternalIcon, {\n    disabled: disabled,\n    ariaLabel: item.externalIconAriaLabel\n  }));\n};\nvar MenuItemIcon = function (props) {\n  return React.createElement(\"span\", {\n    className: styles.icon\n  }, React.createElement(InternalIcon, __assign({}, props)));\n};\nvar ExternalIcon = function (_a) {\n  var disabled = _a.disabled,\n    ariaLabel = _a.ariaLabel;\n  var icon = React.createElement(InternalIcon, {\n    variant: disabled ? 'disabled' : 'normal',\n    name: \"external\"\n  });\n  return React.createElement(\"span\", {\n    className: styles['external-icon'],\n    role: ariaLabel ? 'img' : undefined,\n    \"aria-label\": ariaLabel\n  }, icon);\n};\nexport default ItemElement;","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","clsx","isLinkItem","styles","Tooltip","getItemTarget","useHiddenDescription","InternalIcon","useDropdownContext","getMenuItemProps","ItemElement","_a","item","disabled","onItemActivate","highlighted","highlightItem","_c","first","last","hasCategoryHeader","_d","isKeyboardHighlighted","_e","variant","isLink","onClick","event","stopPropagation","preventDefault","onHover","className","_b","role","id","description","onMouseEnter","onTouchStart","MenuItem","menuItemRef","current","focus","isDisabledWithReason","disabledReason","targetProps","descriptionEl","menuItemProps","ref","tabIndex","menuItem","href","undefined","target","rel","external","MenuItemContent","tooltipPosition","position","content","hasIcon","iconName","iconUrl","iconSvg","hasExternal","MenuItemIcon","name","url","svg","alt","iconAlt","text","ExternalIcon","ariaLabel","externalIconAriaLabel","props","icon"],"sources":["/Users/dcastro/node_modules/src/button-dropdown/item-element/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { ItemProps } from '../interfaces';\nimport { isLinkItem } from '../utils/utils';\nimport styles from './styles.css.js';\nimport Tooltip from '../tooltip';\n\nimport { ButtonDropdownProps } from '../interfaces';\nimport { getItemTarget } from '../utils/utils';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport InternalIcon, { InternalIconProps } from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport { getMenuItemProps } from '../utils/menu-item';\n\nconst ItemElement = ({\n  item,\n  disabled,\n  onItemActivate,\n  highlighted,\n  highlightItem,\n  first = false,\n  last,\n  hasCategoryHeader,\n  isKeyboardHighlighted = false,\n  variant = 'normal',\n}: ItemProps) => {\n  const isLink = isLinkItem(item);\n  const onClick = (event: React.MouseEvent) => {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n    if (!isLink) {\n      event.preventDefault();\n    }\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n\n  const onHover = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    highlightItem(item);\n  };\n\n  return (\n    <li\n      className={clsx(styles['item-element'], styles[`variant-${variant}`], {\n        [styles.highlighted]: highlighted,\n        [styles.disabled]: disabled,\n        [styles.first]: first,\n        [styles.last]: last,\n        [styles['has-category-header']]: hasCategoryHeader,\n        [styles['is-focused']]: isKeyboardHighlighted,\n      })}\n      role=\"presentation\"\n      data-testid={item.id}\n      data-description={item.description}\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n    >\n      <MenuItem item={item} disabled={disabled} highlighted={highlighted} />\n    </li>\n  );\n};\n\ninterface MenuItemProps {\n  item: ButtonDropdownProps.Item;\n  disabled: boolean;\n  highlighted: boolean;\n}\n\nfunction MenuItem({ item, disabled, highlighted }: MenuItemProps) {\n  const menuItemRef = useRef<HTMLSpanElement | HTMLAnchorElement>(null);\n\n  useEffect(() => {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n\n  const isDisabledWithReason = disabled && item.disabledReason;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const menuItemProps: React.HTMLProps<HTMLSpanElement | HTMLAnchorElement> = {\n    className: styles['menu-item'],\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1,\n    ...getMenuItemProps({ disabled }),\n    ...(isDisabledWithReason ? targetProps : {}),\n  };\n  const menuItem = isLinkItem(item) ? (\n    <a\n      {...(menuItemProps as React.HTMLProps<HTMLAnchorElement>)}\n      href={!disabled ? item.href : undefined}\n      target={getItemTarget(item)}\n      rel={item.external ? 'noopener noreferrer' : undefined}\n    >\n      <MenuItemContent item={item} disabled={disabled} />\n    </a>\n  ) : (\n    <span {...menuItemProps}>\n      <MenuItemContent item={item} disabled={disabled} />\n    </span>\n  );\n\n  const { position } = useDropdownContext();\n  const tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? (\n    <Tooltip content={item.disabledReason} position={tooltipPosition}>\n      {menuItem}\n      {descriptionEl}\n    </Tooltip>\n  ) : (\n    menuItem\n  );\n}\n\nconst MenuItemContent = ({ item, disabled }: { item: ButtonDropdownProps.Item; disabled: boolean }) => {\n  const hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  const hasExternal = isLinkItem(item) && item.external;\n  return (\n    <>\n      {hasIcon && <MenuItemIcon name={item.iconName} url={item.iconUrl} svg={item.iconSvg} alt={item.iconAlt} />}{' '}\n      {item.text} {hasExternal && <ExternalIcon disabled={disabled} ariaLabel={item.externalIconAriaLabel} />}\n    </>\n  );\n};\n\nconst MenuItemIcon = (props: InternalIconProps) => (\n  <span className={styles.icon}>\n    <InternalIcon {...props} />\n  </span>\n);\n\nconst ExternalIcon = ({ disabled, ariaLabel }: { disabled: boolean; ariaLabel?: string }) => {\n  const icon = <InternalIcon variant={disabled ? 'disabled' : 'normal'} name=\"external\" />;\n  return (\n    <span className={styles['external-icon']} role={ariaLabel ? 'img' : undefined} aria-label={ariaLabel}>\n      {icon}\n    </span>\n  );\n};\n\nexport default ItemElement;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}