{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport InternalIcon from '../../icon/internal';\nimport InternalLink from '../../link/internal';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\nexport function ObjectsTable(_a) {\n  var forwardFocusRef = _a.forwardFocusRef,\n    pathSegments = _a.pathSegments,\n    i18nStrings = _a.i18nStrings,\n    isVisualRefresh = _a.isVisualRefresh,\n    isItemDisabled = _a.isItemDisabled,\n    selectableItemsTypes = _a.selectableItemsTypes,\n    fetchData = _a.fetchData,\n    visibleColumns = _a.visibleColumns,\n    onDrilldown = _a.onDrilldown,\n    onSelect = _a.onSelect;\n  return React.createElement(BasicS3Table, {\n    // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)\n    key: pathSegments.join('/'),\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"Key\",\n    fetchData: function () {\n      var bucketName = pathSegments[0],\n        rest = pathSegments.slice(1);\n      return fetchData(bucketName, joinObjectPath(rest));\n    },\n    i18nStrings: __assign(__assign({}, getSharedI18Strings(i18nStrings)), {\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects,\n      filteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects),\n      filteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsSearchPlaceholder,\n      loadingText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsLoading,\n      emptyText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsNoItems,\n      selectionLabels: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection\n    }),\n    isVisualRefresh: isVisualRefresh,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled || function () {\n      return !includes(selectableItemsTypes, 'objects');\n    },\n    columnDefinitions: [{\n      id: 'Key',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey),\n      sortingField: 'Key',\n      cell: function (item) {\n        var isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');\n        return React.createElement(React.Fragment, null, React.createElement(InternalIcon, {\n          name: item.IsFolder ? 'folder' : 'file'\n        }), ' ', isClickable ? React.createElement(InternalLink, {\n          onFollow: function () {\n            return item.Key && onDrilldown(item);\n          },\n          variant: \"link\"\n        }, item.Key) : item.Key);\n      },\n      minWidth: '250px'\n    }, {\n      id: 'LastModified',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified),\n      sortingComparator: function (a, b) {\n        return compareDates(a.LastModified, b.LastModified);\n      },\n      cell: function (item) {\n        return formatDefault(item.LastModified);\n      }\n    }, {\n      id: 'Size',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize),\n      sortingField: 'Size',\n      cell: function (item) {\n        return formatSize(item.Size);\n      }\n    }],\n    onSelect: function (item) {\n      var _a;\n      return onSelect((_a = item === null || item === void 0 ? void 0 : item.Key) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["React","compareDates","getColumnAriaLabel","includes","InternalIcon","InternalLink","formatSize","formatDefault","BasicS3Table","getSharedI18Strings","joinObjectPath","ObjectsTable","_a","forwardFocusRef","pathSegments","i18nStrings","isVisualRefresh","isItemDisabled","selectableItemsTypes","fetchData","visibleColumns","onDrilldown","onSelect","key","join","trackBy","rest","bucketName","header","selectionObjects","filteringAriaLabel","labelFiltering","filteringPlaceholder","selectionObjectsSearchPlaceholder","loadingText","selectionObjectsLoading","emptyText","selectionObjectsNoItems","selectionLabels","labelsObjectsSelection","columnDefinitions","id","columnObjectKey","ariaLabel","sortingField","cell","isClickable","item","IsFolder","name","onFollow","Key","variant","minWidth","columnObjectLastModified","sortingComparator","a","b","LastModified","columnObjectSize","Size"],"sources":["/Users/dcastro/node_modules/src/s3-resource-selector/s3-modal/objects-table.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport InternalIcon from '../../icon/internal';\nimport InternalLink from '../../link/internal';\nimport { TableProps } from '../../table/interfaces';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\n\ninterface ObjectsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  pathSegments: ReadonlyArray<string>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Object> | undefined;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchData: S3ResourceSelectorProps['fetchObjects'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onDrilldown: (path: S3ResourceSelectorProps.Object) => void;\n  onSelect: (uri: string) => void;\n}\n\nexport function ObjectsTable({\n  forwardFocusRef,\n  pathSegments,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  selectableItemsTypes,\n  fetchData,\n  visibleColumns,\n  onDrilldown,\n  onSelect,\n}: ObjectsTableProps) {\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Object>\n      // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)\n      key={pathSegments.join('/')}\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"Key\"\n      fetchData={() => {\n        const [bucketName, ...rest] = pathSegments;\n        return fetchData(bucketName, joinObjectPath(rest));\n      }}\n      i18nStrings={{\n        ...getSharedI18Strings(i18nStrings),\n        header: i18nStrings?.selectionObjects,\n        filteringAriaLabel: i18nStrings?.labelFiltering(i18nStrings?.selectionObjects),\n        filteringPlaceholder: i18nStrings?.selectionObjectsSearchPlaceholder,\n        loadingText: i18nStrings?.selectionObjectsLoading,\n        emptyText: i18nStrings?.selectionObjectsNoItems,\n        selectionLabels: i18nStrings?.labelsObjectsSelection,\n      }}\n      isVisualRefresh={isVisualRefresh}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled || (() => !includes(selectableItemsTypes, 'objects'))}\n      columnDefinitions={[\n        {\n          id: 'Key',\n          header: i18nStrings?.columnObjectKey,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnObjectKey),\n          sortingField: 'Key',\n          cell: item => {\n            const isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');\n            return (\n              <>\n                <InternalIcon name={item.IsFolder ? 'folder' : 'file'} />{' '}\n                {isClickable ? (\n                  <InternalLink onFollow={() => item.Key && onDrilldown(item)} variant=\"link\">\n                    {item.Key}\n                  </InternalLink>\n                ) : (\n                  item.Key\n                )}\n              </>\n            );\n          },\n          minWidth: '250px',\n        },\n        {\n          id: 'LastModified',\n          header: i18nStrings?.columnObjectLastModified,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnObjectLastModified),\n          sortingComparator: (a, b) => compareDates(a.LastModified, b.LastModified),\n          cell: item => formatDefault(item.LastModified),\n        },\n        {\n          id: 'Size',\n          header: i18nStrings?.columnObjectSize,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnObjectSize),\n          sortingField: 'Size',\n          cell: item => formatSize(item.Size),\n        },\n      ]}\n      onSelect={item => onSelect(item?.Key ?? '')}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}