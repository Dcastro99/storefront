{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton } from '../button/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport InternalBox from '../box/internal';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nvar InternalButtonDropdown = React.forwardRef(function (_a, ref) {\n  var items = _a.items,\n    _b = _a.variant,\n    variant = _b === void 0 ? 'normal' : _b,\n    _c = _a.loading,\n    loading = _c === void 0 ? false : _c,\n    _d = _a.disabled,\n    disabled = _d === void 0 ? false : _d,\n    _e = _a.expandableGroups,\n    expandableGroups = _e === void 0 ? false : _e,\n    children = _a.children,\n    onItemClick = _a.onItemClick,\n    onItemFollow = _a.onItemFollow,\n    customTriggerBuilder = _a.customTriggerBuilder,\n    expandToViewport = _a.expandToViewport,\n    ariaLabel = _a.ariaLabel,\n    title = _a.title,\n    description = _a.description,\n    preferCenter = _a.preferCenter,\n    __internalRootRef = _a.__internalRootRef,\n    props = __rest(_a, [\"items\", \"variant\", \"loading\", \"disabled\", \"expandableGroups\", \"children\", \"onItemClick\", \"onItemFollow\", \"customTriggerBuilder\", \"expandToViewport\", \"ariaLabel\", \"title\", \"description\", \"preferCenter\", \"__internalRootRef\"]);\n  var isInRestrictedView = useMobile();\n  var dropdownId = useUniqueId('dropdown');\n  for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n    var item = items_1[_i];\n    checkSafeUrl('ButtonDropdown', item.href);\n  }\n  var _f = useButtonDropdown({\n      items: items,\n      onItemClick: onItemClick,\n      onItemFollow: onItemFollow,\n      onReturnFocus: function () {\n        var _a;\n        return (_a = dropdownRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      expandToViewport: expandToViewport,\n      hasExpandableGroups: expandableGroups,\n      isInRestrictedView: isInRestrictedView\n    }),\n    isOpen = _f.isOpen,\n    targetItem = _f.targetItem,\n    isHighlighted = _f.isHighlighted,\n    isKeyboardHighlight = _f.isKeyboardHighlight,\n    isExpanded = _f.isExpanded,\n    highlightItem = _f.highlightItem,\n    onKeyDown = _f.onKeyDown,\n    onKeyUp = _f.onKeyUp,\n    onItemActivate = _f.onItemActivate,\n    onGroupToggle = _f.onGroupToggle,\n    toggleDropdown = _f.toggleDropdown,\n    setIsUsingMouse = _f.setIsUsingMouse;\n  var handleMouseEvent = function () {\n    setIsUsingMouse(true);\n  };\n  var baseProps = getBaseProps(props);\n  var dropdownRef = useRef(null);\n  useForwardFocus(ref, dropdownRef);\n  var clickHandler = function () {\n    if (!loading && !disabled) {\n      // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n      toggleDropdown({\n        moveHighlightOnOpen: !isInRestrictedView\n      });\n    }\n  };\n  var canBeOpened = !loading && !disabled;\n  var triggerVariant = variant === 'navigation' ? undefined : variant;\n  var iconProps = variant === 'icon' ? {\n    iconName: 'ellipsis'\n  } : {\n    iconName: 'caret-down-filled',\n    iconAlign: 'right',\n    __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down']\n  };\n  var trigger = customTriggerBuilder ? customTriggerBuilder(clickHandler, dropdownRef, disabled, isOpen, ariaLabel) : React.createElement(InternalButton, __assign({\n    ref: dropdownRef\n  }, iconProps, {\n    variant: triggerVariant,\n    loading: loading,\n    disabled: disabled,\n    onClick: function (event) {\n      event.preventDefault();\n      clickHandler();\n    },\n    ariaLabel: ariaLabel,\n    \"aria-haspopup\": true,\n    ariaExpanded: canBeOpened && isOpen,\n    formAction: \"none\"\n  }), children);\n  var hasHeader = title || description;\n  var headerId = useUniqueId('awsui-button-dropdown__header');\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onMouseDown: handleMouseEvent,\n    onMouseMove: handleMouseEvent,\n    className: clsx(styles['button-dropdown'], styles[\"variant-\".concat(variant)], baseProps.className),\n    \"aria-owns\": expandToViewport && isOpen ? dropdownId : undefined,\n    ref: __internalRootRef\n  }), React.createElement(Dropdown, {\n    open: canBeOpened && isOpen,\n    stretchWidth: false,\n    stretchTriggerHeight: variant === 'navigation',\n    expandToViewport: expandToViewport,\n    preferCenter: preferCenter,\n    onDropdownClose: function () {\n      return toggleDropdown();\n    },\n    trigger: trigger,\n    dropdownId: dropdownId\n  }, hasHeader && React.createElement(\"div\", {\n    className: styles.header,\n    id: headerId\n  }, title && React.createElement(InternalBox, {\n    fontSize: \"heading-s\",\n    fontWeight: \"bold\"\n  }, React.createElement(\"span\", {\n    className: styles.title\n  }, title)), description && React.createElement(InternalBox, {\n    fontSize: \"body-s\"\n  }, React.createElement(\"span\", {\n    className: styles.description\n  }, description))), React.createElement(OptionsList, {\n    open: canBeOpened && isOpen,\n    position: \"static\",\n    role: \"menu\",\n    decreaseTopMargin: true,\n    ariaLabelledby: hasHeader ? headerId : undefined\n  }, React.createElement(ItemsList, {\n    items: items,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    hasExpandableGroups: expandableGroups,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isKeyboardHighlight: isKeyboardHighlight,\n    isExpanded: isExpanded,\n    highlightItem: highlightItem,\n    expandToViewport: expandToViewport,\n    variant: variant\n  }))));\n});\nexport default InternalButtonDropdown;","map":{"version":3,"mappings":"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","names":["React","useRef","clsx","styles","getBaseProps","useUniqueId","Dropdown","ItemsList","useButtonDropdown","OptionsList","InternalButton","useMobile","useForwardFocus","InternalBox","checkSafeUrl","InternalButtonDropdown","forwardRef","_a","ref","_b","variant","_c","loading","_d","disabled","_e","expandableGroups","children","onItemClick","onItemFollow","customTriggerBuilder","expandToViewport","ariaLabel","title","description","preferCenter","__internalRootRef","props","isInRestrictedView","dropdownId","items_1","_i","item","href","items","onReturnFocus","current","focus","hasExpandableGroups","isOpen","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","highlightItem","onKeyDown","onKeyUp","onItemActivate","onGroupToggle","toggleDropdown","setIsUsingMouse","handleMouseEvent","baseProps","dropdownRef","clickHandler","moveHighlightOnOpen","canBeOpened","triggerVariant","undefined","iconProps","iconName","iconAlign","__iconClass","trigger","onClick","event","preventDefault","ariaExpanded","formAction","hasHeader","headerId","onMouseDown","onMouseMove","className","open","stretchWidth","stretchTriggerHeight","onDropdownClose","header","id","fontSize","fontWeight","position","role","decreaseTopMargin","ariaLabelledby"],"sources":["/Users/dcastro/node_modules/src/button-dropdown/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { ButtonDropdownProps, InternalButtonDropdownProps } from './interfaces';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton } from '../button/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport InternalBox from '../box/internal';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\n\nconst InternalButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      disabled = false,\n      expandableGroups = false,\n      children,\n      onItemClick,\n      onItemFollow,\n      customTriggerBuilder,\n      expandToViewport,\n      ariaLabel,\n      title,\n      description,\n      preferCenter,\n      __internalRootRef,\n      ...props\n    }: InternalButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const isInRestrictedView = useMobile();\n    const dropdownId = useUniqueId('dropdown');\n    for (const item of items) {\n      checkSafeUrl('ButtonDropdown', item.href);\n    }\n\n    const {\n      isOpen,\n      targetItem,\n      isHighlighted,\n      isKeyboardHighlight,\n      isExpanded,\n      highlightItem,\n      onKeyDown,\n      onKeyUp,\n      onItemActivate,\n      onGroupToggle,\n      toggleDropdown,\n      setIsUsingMouse,\n    } = useButtonDropdown({\n      items,\n      onItemClick,\n      onItemFollow,\n      onReturnFocus: () => dropdownRef.current?.focus(),\n      expandToViewport,\n      hasExpandableGroups: expandableGroups,\n      isInRestrictedView,\n    });\n\n    const handleMouseEvent = () => {\n      setIsUsingMouse(true);\n    };\n\n    const baseProps = getBaseProps(props);\n\n    const dropdownRef = useRef<HTMLElement>(null);\n\n    useForwardFocus(ref, dropdownRef);\n\n    const clickHandler = () => {\n      if (!loading && !disabled) {\n        // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n        toggleDropdown({ moveHighlightOnOpen: !isInRestrictedView });\n      }\n    };\n\n    const canBeOpened = !loading && !disabled;\n\n    const triggerVariant = variant === 'navigation' ? undefined : variant;\n    const iconProps: Partial<ButtonProps & { __iconClass?: string }> =\n      variant === 'icon'\n        ? {\n            iconName: 'ellipsis',\n          }\n        : {\n            iconName: 'caret-down-filled',\n            iconAlign: 'right',\n            __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down'],\n          };\n\n    const trigger = customTriggerBuilder ? (\n      customTriggerBuilder(clickHandler, dropdownRef, disabled, isOpen, ariaLabel)\n    ) : (\n      <InternalButton\n        ref={dropdownRef}\n        {...iconProps}\n        variant={triggerVariant}\n        loading={loading}\n        disabled={disabled}\n        onClick={(event: Event) => {\n          event.preventDefault();\n          clickHandler();\n        }}\n        ariaLabel={ariaLabel}\n        aria-haspopup={true}\n        ariaExpanded={canBeOpened && isOpen}\n        formAction=\"none\"\n      >\n        {children}\n      </InternalButton>\n    );\n\n    const hasHeader = title || description;\n    const headerId = useUniqueId('awsui-button-dropdown__header');\n\n    return (\n      <div\n        {...baseProps}\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        onMouseDown={handleMouseEvent}\n        onMouseMove={handleMouseEvent}\n        className={clsx(styles['button-dropdown'], styles[`variant-${variant}`], baseProps.className)}\n        aria-owns={expandToViewport && isOpen ? dropdownId : undefined}\n        ref={__internalRootRef}\n      >\n        <Dropdown\n          open={canBeOpened && isOpen}\n          stretchWidth={false}\n          stretchTriggerHeight={variant === 'navigation'}\n          expandToViewport={expandToViewport}\n          preferCenter={preferCenter}\n          onDropdownClose={() => toggleDropdown()}\n          trigger={trigger}\n          dropdownId={dropdownId}\n        >\n          {hasHeader && (\n            <div className={styles.header} id={headerId}>\n              {title && (\n                <InternalBox fontSize=\"heading-s\" fontWeight=\"bold\">\n                  <span className={styles.title}>{title}</span>\n                </InternalBox>\n              )}\n              {description && (\n                <InternalBox fontSize=\"body-s\">\n                  <span className={styles.description}>{description}</span>\n                </InternalBox>\n              )}\n            </div>\n          )}\n          <OptionsList\n            open={canBeOpened && isOpen}\n            position=\"static\"\n            role=\"menu\"\n            decreaseTopMargin={true}\n            ariaLabelledby={hasHeader ? headerId : undefined}\n          >\n            <ItemsList\n              items={items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              hasExpandableGroups={expandableGroups}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              highlightItem={highlightItem}\n              expandToViewport={expandToViewport}\n              variant={variant}\n            />\n          </OptionsList>\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\nexport default InternalButtonDropdown;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}