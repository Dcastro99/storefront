{"ast":null,"code":"var CustomEventStub = /** @class */function () {\n  function CustomEventStub(cancelable, detail) {\n    if (cancelable === void 0) {\n      cancelable = false;\n    }\n    if (detail === void 0) {\n      detail = null;\n    }\n    this.cancelable = cancelable;\n    this.detail = detail;\n    this.defaultPrevented = false;\n    this.cancelBubble = false;\n  }\n  CustomEventStub.prototype.preventDefault = function () {\n    this.defaultPrevented = true;\n  };\n  CustomEventStub.prototype.stopPropagation = function () {\n    this.cancelBubble = true;\n  };\n  return CustomEventStub;\n}();\nexport function createCustomEvent(_a) {\n  var cancelable = _a.cancelable,\n    detail = _a.detail;\n  return new CustomEventStub(cancelable, detail);\n}\nexport function fireNonCancelableEvent(handler, detail) {\n  if (!handler) {\n    return;\n  }\n  var event = createCustomEvent({\n    cancelable: false,\n    detail: detail\n  });\n  handler(event);\n}\nexport function fireCancelableEvent(handler, detail, sourceEvent) {\n  if (!handler) {\n    return false;\n  }\n  var event = createCustomEvent({\n    cancelable: true,\n    detail: detail\n  });\n  handler(event);\n  if (event.defaultPrevented && sourceEvent) {\n    sourceEvent.preventDefault();\n  }\n  if (event.cancelBubble && sourceEvent) {\n    sourceEvent.stopPropagation();\n  }\n  return event.defaultPrevented;\n}\nexport function fireKeyboardEvent(handler, reactEvent) {\n  return fireCancelableEvent(handler, {\n    keyCode: reactEvent.keyCode,\n    key: reactEvent.key,\n    ctrlKey: reactEvent.ctrlKey,\n    shiftKey: reactEvent.shiftKey,\n    altKey: reactEvent.altKey,\n    metaKey: reactEvent.metaKey\n  }, reactEvent);\n}\nvar isMouseEvent = function (e) {\n  return e.button !== undefined;\n};\nexport function isPlainLeftClick(event) {\n  return event && (!isMouseEvent(event) || event.button === 0) && !event.ctrlKey && !event.altKey && !event.shiftKey && !event.metaKey;\n}","map":{"version":3,"mappings":"AAYA;EAGE,yBAAmBA,UAA2B,EAASC,MAAuB;IAA3D;MAAAD,kBAA2B;IAAA;IAAS;MAAAC,aAAuB;IAAA;IAA3D,eAAU,GAAVD,UAAU;IAA0B,WAAM,GAANC,MAAM;IAF7D,qBAAgB,GAAG,KAAK;IACxB,iBAAY,GAAG,KAAK;EAC6D;EAEjFC,wCAAc,GAAd;IACE,IAAI,CAACC,gBAAgB,GAAG,IAAI;EAC9B,CAAC;EAEDD,yCAAe,GAAf;IACE,IAAI,CAACE,YAAY,GAAG,IAAI;EAC1B,CAAC;EACH,sBAAC;AAAD,CAAC,EAZD;AAqCA,OAAM,SAAUC,iBAAiB,CAAIC,EAA0C;MAAxCN,UAAU;IAAEC,MAAM;EACvD,OAAO,IAAIC,eAAe,CAACF,UAAU,EAAEC,MAAM,CAAgB;AAC/D;AAEA,OAAM,SAAUM,sBAAsB,CAAWC,OAAiD,EAAEP,MAAU;EAC5G,IAAI,CAACO,OAAO,EAAE;IACZ;;EAEF,IAAMC,KAAK,GAAGJ,iBAAiB,CAAC;IAAEL,UAAU,EAAE,KAAK;IAAEC,MAAM;EAAA,CAAE,CAAC;EAC9DO,OAAO,CAACC,KAAK,CAAC;AAChB;AAEA,OAAM,SAAUC,mBAAmB,CACjCF,OAA8C,EAC9CP,MAAS,EACTU,WAA0C;EAE1C,IAAI,CAACH,OAAO,EAAE;IACZ,OAAO,KAAK;;EAEd,IAAMC,KAAK,GAAGJ,iBAAiB,CAAC;IAAEL,UAAU,EAAE,IAAI;IAAEC,MAAM;EAAA,CAAE,CAAC;EAC7DO,OAAO,CAACC,KAAK,CAAC;EACd,IAAIA,KAAK,CAACN,gBAAgB,IAAIQ,WAAW,EAAE;IACzCA,WAAW,CAACC,cAAc,EAAE;;EAE9B,IAAIH,KAAK,CAACL,YAAY,IAAIO,WAAW,EAAE;IACrCA,WAAW,CAACE,eAAe,EAAE;;EAE/B,OAAOJ,KAAK,CAACN,gBAAgB;AAC/B;AAEA,OAAM,SAAUW,iBAAiB,CAACN,OAA8C,EAAEO,UAA+B;EAC/G,OAAOL,mBAAmB,CACxBF,OAAO,EACP;IACEQ,OAAO,EAAED,UAAU,CAACC,OAAO;IAC3BC,GAAG,EAAEF,UAAU,CAACE,GAAG;IACnBC,OAAO,EAAEH,UAAU,CAACG,OAAO;IAC3BC,QAAQ,EAAEJ,UAAU,CAACI,QAAQ;IAC7BC,MAAM,EAAEL,UAAU,CAACK,MAAM;IACzBC,OAAO,EAAEN,UAAU,CAACM;GACrB,EACDN,UAAU,CACX;AACH;AAEA,IAAMO,YAAY,GAAG,UAACC,CAAyC;EAC7D,OAAQA,CAAsB,CAACC,MAAM,KAAKC,SAAS;AACrD,CAAC;AAED,OAAM,SAAUC,gBAAgB,CAACjB,KAA8C;EAC7E,OACEA,KAAK,KACJ,CAACa,YAAY,CAACb,KAAK,CAAC,IAAIA,KAAK,CAACe,MAAM,KAAK,CAAC,CAAC,IAC5C,CAACf,KAAK,CAACS,OAAO,IACd,CAACT,KAAK,CAACW,MAAM,IACb,CAACX,KAAK,CAACU,QAAQ,IACf,CAACV,KAAK,CAACY,OAAO;AAElB","names":["cancelable","detail","CustomEventStub","defaultPrevented","cancelBubble","createCustomEvent","_a","fireNonCancelableEvent","handler","event","fireCancelableEvent","sourceEvent","preventDefault","stopPropagation","fireKeyboardEvent","reactEvent","keyCode","key","ctrlKey","shiftKey","altKey","metaKey","isMouseEvent","e","button","undefined","isPlainLeftClick"],"sources":["/Users/dcastro/node_modules/src/internal/events/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\n// This is a part of our public types API. We cannot change this in the current major version\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type NonCancelableEventHandler<Detail = {}> = (event: NonCancelableCustomEvent<Detail>) => void;\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type CancelableEventHandler<Detail = {}> = (event: CustomEvent<Detail>) => void;\n\nexport type NonCancelableCustomEvent<DetailType> = Omit<CustomEvent<DetailType>, 'preventDefault'>;\n\nclass CustomEventStub<T> {\n  defaultPrevented = false;\n  cancelBubble = false;\n  constructor(public cancelable: boolean = false, public detail: T | null = null) {}\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  stopPropagation() {\n    this.cancelBubble = true;\n  }\n}\n\nexport interface BaseKeyDetail {\n  keyCode: number;\n  key: string;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\nexport interface ClickDetail {\n  button: number;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\nexport interface BaseNavigationDetail {\n  href: string | undefined;\n  external?: boolean;\n  target?: string;\n}\n\nexport function createCustomEvent<T>({ cancelable, detail }: CustomEventInit<T>): CustomEvent<T> {\n  return new CustomEventStub(cancelable, detail) as CustomEvent;\n}\n\nexport function fireNonCancelableEvent<T = null>(handler: NonCancelableEventHandler<T> | undefined, detail?: T) {\n  if (!handler) {\n    return;\n  }\n  const event = createCustomEvent({ cancelable: false, detail });\n  handler(event);\n}\n\nexport function fireCancelableEvent<T>(\n  handler: CancelableEventHandler<T> | undefined,\n  detail: T,\n  sourceEvent?: React.SyntheticEvent | Event\n) {\n  if (!handler) {\n    return false;\n  }\n  const event = createCustomEvent({ cancelable: true, detail });\n  handler(event);\n  if (event.defaultPrevented && sourceEvent) {\n    sourceEvent.preventDefault();\n  }\n  if (event.cancelBubble && sourceEvent) {\n    sourceEvent.stopPropagation();\n  }\n  return event.defaultPrevented;\n}\n\nexport function fireKeyboardEvent(handler: CancelableEventHandler<BaseKeyDetail>, reactEvent: React.KeyboardEvent) {\n  return fireCancelableEvent(\n    handler,\n    {\n      keyCode: reactEvent.keyCode,\n      key: reactEvent.key,\n      ctrlKey: reactEvent.ctrlKey,\n      shiftKey: reactEvent.shiftKey,\n      altKey: reactEvent.altKey,\n      metaKey: reactEvent.metaKey,\n    },\n    reactEvent\n  );\n}\n\nconst isMouseEvent = (e: React.MouseEvent | React.KeyboardEvent): e is React.MouseEvent => {\n  return (e as React.MouseEvent).button !== undefined;\n};\n\nexport function isPlainLeftClick(event?: React.MouseEvent | React.KeyboardEvent) {\n  return (\n    event &&\n    (!isMouseEvent(event) || event.button === 0) &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.shiftKey &&\n    !event.metaKey\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}