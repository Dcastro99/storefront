{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport clsx from 'clsx';\nimport InternalExpandableSection from '../expandable-section/internal';\nimport InternalIcon from '../icon/internal';\nimport styles from './styles.css.js';\nimport { isPlainLeftClick } from '../internal/events';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { hasActiveLink } from './util';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nexport function Header(_a) {\n  var _b, _c;\n  var definition = _a.definition,\n    activeHref = _a.activeHref,\n    fireFollow = _a.fireFollow;\n  checkSafeUrl('SideNavigation', definition.href);\n  var focusVisible = useFocusVisible();\n  var onClick = useCallback(function (event) {\n    if (isPlainLeftClick(event)) {\n      fireFollow(definition, event);\n    }\n  }, [fireFollow, definition]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: styles.header\n  }, React.createElement(\"a\", __assign({}, focusVisible, {\n    href: definition.href,\n    className: clsx(styles['header-link'], (_b = {}, _b[styles['header-link--has-logo']] = !!definition.logo, _b)),\n    \"aria-current\": definition.href === activeHref ? 'page' : undefined,\n    onClick: onClick\n  }), definition.logo && React.createElement(\"img\", __assign({\n    className: clsx(styles['header-logo'], (_c = {}, _c[styles['header-logo--stretched']] = !definition.text, _c))\n  }, definition.logo)), React.createElement(\"span\", {\n    className: styles['header-link-text']\n  }, definition.text))), React.createElement(Divider, {\n    variant: \"header\"\n  }));\n}\nexport function ItemList(_a) {\n  var variant = _a.variant,\n    items = _a.items,\n    activeHref = _a.activeHref,\n    fireChange = _a.fireChange,\n    fireFollow = _a.fireFollow;\n  return React.createElement(\"ul\", {\n    className: clsx(styles.list, styles[\"list-variant-\".concat(variant)])\n  }, items.map(function (item, i) {\n    return React.createElement(\"li\", {\n      key: i,\n      className: styles['list-item']\n    }, item.type === 'divider' && React.createElement(Divider, {\n      variant: \"default\"\n    }), item.type === 'link' && React.createElement(Link, {\n      definition: item,\n      activeHref: activeHref,\n      fireChange: fireChange,\n      fireFollow: fireFollow\n    }), item.type === 'section' && React.createElement(Section, {\n      definition: item,\n      activeHref: activeHref,\n      fireChange: fireChange,\n      fireFollow: fireFollow\n    }), item.type === 'link-group' && React.createElement(LinkGroup, {\n      definition: item,\n      activeHref: activeHref,\n      fireChange: fireChange,\n      fireFollow: fireFollow\n    }), item.type === 'expandable-link-group' && React.createElement(ExpandableLinkGroup, {\n      definition: item,\n      activeHref: activeHref,\n      fireChange: fireChange,\n      fireFollow: fireFollow\n    }));\n  }));\n}\nfunction Divider(_a) {\n  var _b = _a.variant,\n    variant = _b === void 0 ? 'default' : _b;\n  return React.createElement(\"hr\", {\n    className: clsx(styles.divider, styles[\"divider-\".concat(variant)])\n  });\n}\nfunction Link(_a) {\n  var _b;\n  var definition = _a.definition,\n    expanded = _a.expanded,\n    activeHref = _a.activeHref,\n    fireFollow = _a.fireFollow;\n  checkSafeUrl('SideNavigation', definition.href);\n  var isActive = definition.href === activeHref;\n  var focusVisible = useFocusVisible();\n  var onClick = useCallback(function (event) {\n    // Prevent the click event from toggling outer expandable sections.\n    event.stopPropagation();\n    if (isPlainLeftClick(event)) {\n      fireFollow(definition, event);\n    }\n  }, [fireFollow, definition]);\n  return React.createElement(React.Fragment, null, React.createElement(\"a\", __assign({}, focusVisible, {\n    href: definition.href,\n    className: clsx(styles.link, (_b = {}, _b[styles['link-active']] = isActive, _b)),\n    target: definition.external ? '_blank' : undefined,\n    rel: definition.external ? 'noopener noreferrer' : undefined,\n    \"aria-expanded\": expanded,\n    \"aria-current\": definition.href === activeHref ? 'page' : undefined,\n    onClick: onClick\n  }), definition.text, definition.external && React.createElement(\"span\", {\n    \"aria-label\": definition.externalIconAriaLabel,\n    role: definition.externalIconAriaLabel ? 'img' : undefined\n  }, React.createElement(InternalIcon, {\n    name: \"external\",\n    className: styles['external-icon']\n  }))), definition.info && React.createElement(\"span\", {\n    className: styles.info\n  }, definition.info));\n}\nfunction Section(_a) {\n  var _b;\n  var definition = _a.definition,\n    activeHref = _a.activeHref,\n    fireFollow = _a.fireFollow,\n    fireChange = _a.fireChange;\n  var _c = useState((_b = definition.defaultExpanded) !== null && _b !== void 0 ? _b : true),\n    expanded = _c[0],\n    setExpanded = _c[1];\n  var onExpandedChange = useCallback(function (e) {\n    fireChange(definition, e.detail.expanded);\n    setExpanded(e.detail.expanded);\n  }, [definition, fireChange]);\n  useEffect(function () {\n    var _a;\n    setExpanded((_a = definition.defaultExpanded) !== null && _a !== void 0 ? _a : true);\n  }, [definition]);\n  return React.createElement(InternalExpandableSection, {\n    variant: \"footer\",\n    expanded: expanded,\n    onChange: onExpandedChange,\n    className: styles.section,\n    header: definition.text\n  }, React.createElement(ItemList, {\n    variant: \"section\",\n    items: definition.items,\n    fireFollow: fireFollow,\n    fireChange: fireChange,\n    activeHref: activeHref\n  }));\n}\nfunction LinkGroup(_a) {\n  var definition = _a.definition,\n    activeHref = _a.activeHref,\n    fireFollow = _a.fireFollow,\n    fireChange = _a.fireChange;\n  checkSafeUrl('SideNavigation', definition.href);\n  return React.createElement(React.Fragment, null, React.createElement(Link, {\n    definition: {\n      type: 'link',\n      href: definition.href,\n      text: definition.text\n    },\n    fireFollow: function (_, event) {\n      return fireFollow(definition, event);\n    },\n    fireChange: fireChange,\n    activeHref: activeHref\n  }), React.createElement(ItemList, {\n    variant: \"link-group\",\n    items: definition.items,\n    fireFollow: fireFollow,\n    fireChange: fireChange,\n    activeHref: activeHref\n  }));\n}\nfunction ExpandableLinkGroup(_a) {\n  var definition = _a.definition,\n    fireFollow = _a.fireFollow,\n    fireChange = _a.fireChange,\n    activeHref = _a.activeHref;\n  // Check whether the definition contains an active link and memoize it to avoid\n  // rechecking every time.\n  var containsActiveLink = useMemo(function () {\n    return activeHref ? hasActiveLink(definition.items, activeHref) : false;\n  }, [activeHref, definition.items]);\n  var _b = useState(function () {\n      var _a;\n      return (_a = definition.defaultExpanded) !== null && _a !== void 0 ? _a : definition.href === activeHref || containsActiveLink;\n    }),\n    expanded = _b[0],\n    setExpanded = _b[1];\n  var _c = useState(),\n    userExpanded = _c[0],\n    setUserExpanded = _c[1];\n  // Reset user expansion status when the items property is updated.\n  useEffect(function () {\n    return setUserExpanded(undefined);\n  }, [definition]);\n  // By default, the expandable section is open when there's an active link inside.\n  useEffect(function () {\n    setExpanded(definition.href === activeHref || containsActiveLink);\n  }, [definition.href, containsActiveLink, activeHref]);\n  // If the definition object itself is updated, reset the expansion state to default.\n  useEffect(function () {\n    if (definition.defaultExpanded !== undefined) {\n      setExpanded(definition.defaultExpanded);\n    }\n  }, [definition]);\n  var onExpandedChange = useCallback(function (e) {\n    fireChange(definition, e.detail.expanded);\n    setUserExpanded(e.detail.expanded);\n  }, [definition, fireChange]);\n  var onHeaderFollow = function (_, event) {\n    fireFollow(definition, event);\n    setUserExpanded(true);\n    if (!expanded) {\n      fireChange(definition, true);\n    }\n  };\n  return React.createElement(InternalExpandableSection, {\n    className: styles['expandable-link-group'],\n    variant: \"navigation\",\n    expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded,\n    onChange: onExpandedChange,\n    header: React.createElement(Link, {\n      definition: {\n        type: 'link',\n        href: definition.href,\n        text: definition.text\n      },\n      expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded,\n      fireFollow: onHeaderFollow,\n      fireChange: fireChange,\n      activeHref: activeHref\n    })\n  }, React.createElement(ItemList, {\n    variant: \"expandable-link-group\",\n    items: definition.items,\n    fireFollow: fireFollow,\n    fireChange: fireChange,\n    activeHref: activeHref\n  }));\n}","map":{"version":3,"mappings":"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","names":["React","useCallback","useState","useEffect","useMemo","clsx","InternalExpandableSection","InternalIcon","styles","isPlainLeftClick","useFocusVisible","hasActiveLink","checkSafeUrl","Header","_a","definition","activeHref","fireFollow","href","focusVisible","onClick","event","className","header","_b","logo","undefined","_c","text","Divider","variant","ItemList","items","fireChange","list","map","item","i","key","type","Link","Section","LinkGroup","ExpandableLinkGroup","divider","expanded","isActive","stopPropagation","link","target","external","rel","externalIconAriaLabel","role","name","info","defaultExpanded","setExpanded","onExpandedChange","e","detail","onChange","section","_","containsActiveLink","userExpanded","setUserExpanded","onHeaderFollow"],"sources":["/Users/dcastro/node_modules/src/side-navigation/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport clsx from 'clsx';\nimport { ExpandableSectionProps } from '../expandable-section/interfaces';\nimport InternalExpandableSection from '../expandable-section/internal';\nimport InternalIcon from '../icon/internal';\n\nimport { SideNavigationProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { NonCancelableCustomEvent, isPlainLeftClick } from '../internal/events';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { hasActiveLink } from './util';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\n\ninterface BaseItemComponentProps {\n  activeHref?: string;\n  fireChange: (item: SideNavigationProps.Section | SideNavigationProps.ExpandableLinkGroup, expanded: boolean) => void;\n  fireFollow: (\n    item:\n      | SideNavigationProps.Link\n      | SideNavigationProps.Header\n      | SideNavigationProps.LinkGroup\n      | SideNavigationProps.ExpandableLinkGroup,\n    event: React.SyntheticEvent | Event\n  ) => void;\n}\n\nexport interface HeaderProps extends BaseItemComponentProps {\n  definition: SideNavigationProps.Header;\n}\n\nexport function Header({ definition, activeHref, fireFollow }: HeaderProps) {\n  checkSafeUrl('SideNavigation', definition.href);\n  const focusVisible = useFocusVisible();\n\n  const onClick = useCallback(\n    (event: React.MouseEvent) => {\n      if (isPlainLeftClick(event)) {\n        fireFollow(definition, event);\n      }\n    },\n    [fireFollow, definition]\n  );\n\n  return (\n    <>\n      <div className={styles.header}>\n        <a\n          {...focusVisible}\n          href={definition.href}\n          className={clsx(styles['header-link'], { [styles['header-link--has-logo']]: !!definition.logo })}\n          aria-current={definition.href === activeHref ? 'page' : undefined}\n          onClick={onClick}\n        >\n          {definition.logo && (\n            <img\n              className={clsx(styles['header-logo'], {\n                [styles['header-logo--stretched']]: !definition.text,\n              })}\n              {...definition.logo}\n            />\n          )}\n          <span className={styles['header-link-text']}>{definition.text}</span>\n        </a>\n      </div>\n      <Divider variant=\"header\" />\n    </>\n  );\n}\n\nexport interface ItemListProps extends BaseItemComponentProps {\n  items: ReadonlyArray<SideNavigationProps.Item>;\n  variant: 'section' | 'link-group' | 'expandable-link-group' | 'root';\n}\n\nexport function ItemList({ variant, items, activeHref, fireChange, fireFollow }: ItemListProps) {\n  return (\n    <ul className={clsx(styles.list, styles[`list-variant-${variant}`])}>\n      {items.map((item, i) => (\n        <li key={i} className={styles['list-item']}>\n          {item.type === 'divider' && <Divider variant=\"default\" />}\n          {item.type === 'link' && (\n            <Link definition={item} activeHref={activeHref} fireChange={fireChange} fireFollow={fireFollow} />\n          )}\n          {item.type === 'section' && (\n            <Section definition={item} activeHref={activeHref} fireChange={fireChange} fireFollow={fireFollow} />\n          )}\n          {item.type === 'link-group' && (\n            <LinkGroup definition={item} activeHref={activeHref} fireChange={fireChange} fireFollow={fireFollow} />\n          )}\n          {item.type === 'expandable-link-group' && (\n            <ExpandableLinkGroup\n              definition={item}\n              activeHref={activeHref}\n              fireChange={fireChange}\n              fireFollow={fireFollow}\n            />\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\ninterface DividerProps {\n  variant: 'default' | 'header';\n}\n\nfunction Divider({ variant = 'default' }: DividerProps) {\n  return <hr className={clsx(styles.divider, styles[`divider-${variant}`])} />;\n}\n\ninterface LinkProps extends BaseItemComponentProps {\n  definition: SideNavigationProps.Link;\n  expanded?: boolean;\n}\n\nfunction Link({ definition, expanded, activeHref, fireFollow }: LinkProps) {\n  checkSafeUrl('SideNavigation', definition.href);\n  const isActive = definition.href === activeHref;\n  const focusVisible = useFocusVisible();\n\n  const onClick = useCallback(\n    (event: React.MouseEvent) => {\n      // Prevent the click event from toggling outer expandable sections.\n      event.stopPropagation();\n\n      if (isPlainLeftClick(event)) {\n        fireFollow(definition, event);\n      }\n    },\n    [fireFollow, definition]\n  );\n\n  return (\n    <>\n      {/* https://github.com/yannickcr/eslint-plugin-react/issues/2962 */}\n      {/* eslint-disable-next-line react/jsx-no-target-blank */}\n      <a\n        {...focusVisible}\n        href={definition.href}\n        className={clsx(styles.link, { [styles['link-active']]: isActive })}\n        target={definition.external ? '_blank' : undefined}\n        rel={definition.external ? 'noopener noreferrer' : undefined}\n        aria-expanded={expanded}\n        aria-current={definition.href === activeHref ? 'page' : undefined}\n        onClick={onClick}\n      >\n        {definition.text}\n        {definition.external && (\n          <span\n            aria-label={definition.externalIconAriaLabel}\n            role={definition.externalIconAriaLabel ? 'img' : undefined}\n          >\n            <InternalIcon name=\"external\" className={styles['external-icon']} />\n          </span>\n        )}\n      </a>\n      {definition.info && <span className={styles.info}>{definition.info}</span>}\n    </>\n  );\n}\n\ninterface SectionProps extends BaseItemComponentProps {\n  definition: SideNavigationProps.Section;\n}\n\nfunction Section({ definition, activeHref, fireFollow, fireChange }: SectionProps) {\n  const [expanded, setExpanded] = useState<boolean>(definition.defaultExpanded ?? true);\n\n  const onExpandedChange = useCallback(\n    (e: NonCancelableCustomEvent<ExpandableSectionProps.ChangeDetail>) => {\n      fireChange(definition, e.detail.expanded);\n      setExpanded(e.detail.expanded);\n    },\n    [definition, fireChange]\n  );\n\n  useEffect(() => {\n    setExpanded(definition.defaultExpanded ?? true);\n  }, [definition]);\n\n  return (\n    <InternalExpandableSection\n      variant=\"footer\"\n      expanded={expanded}\n      onChange={onExpandedChange}\n      className={styles.section}\n      header={definition.text}\n    >\n      <ItemList\n        variant=\"section\"\n        items={definition.items}\n        fireFollow={fireFollow}\n        fireChange={fireChange}\n        activeHref={activeHref}\n      />\n    </InternalExpandableSection>\n  );\n}\n\ninterface LinkGroupProps extends BaseItemComponentProps {\n  definition: SideNavigationProps.LinkGroup;\n}\n\nfunction LinkGroup({ definition, activeHref, fireFollow, fireChange }: LinkGroupProps) {\n  checkSafeUrl('SideNavigation', definition.href);\n\n  return (\n    <>\n      <Link\n        definition={{ type: 'link', href: definition.href, text: definition.text }}\n        fireFollow={(_, event) => fireFollow(definition, event)}\n        fireChange={fireChange}\n        activeHref={activeHref}\n      />\n      <ItemList\n        variant=\"link-group\"\n        items={definition.items}\n        fireFollow={fireFollow}\n        fireChange={fireChange}\n        activeHref={activeHref}\n      />\n    </>\n  );\n}\n\ninterface ExpandableLinkGroupProps extends BaseItemComponentProps {\n  definition: SideNavigationProps.ExpandableLinkGroup;\n}\n\nfunction ExpandableLinkGroup({ definition, fireFollow, fireChange, activeHref }: ExpandableLinkGroupProps) {\n  // Check whether the definition contains an active link and memoize it to avoid\n  // rechecking every time.\n  const containsActiveLink = useMemo(() => {\n    return activeHref ? hasActiveLink(definition.items, activeHref) : false;\n  }, [activeHref, definition.items]);\n\n  const [expanded, setExpanded] = useState<boolean>(() => {\n    return definition.defaultExpanded ?? (definition.href === activeHref || containsActiveLink);\n  });\n\n  const [userExpanded, setUserExpanded] = useState<boolean | undefined>();\n\n  // Reset user expansion status when the items property is updated.\n  useEffect(() => setUserExpanded(undefined), [definition]);\n\n  // By default, the expandable section is open when there's an active link inside.\n  useEffect(() => {\n    setExpanded(definition.href === activeHref || containsActiveLink);\n  }, [definition.href, containsActiveLink, activeHref]);\n\n  // If the definition object itself is updated, reset the expansion state to default.\n  useEffect(() => {\n    if (definition.defaultExpanded !== undefined) {\n      setExpanded(definition.defaultExpanded);\n    }\n  }, [definition]);\n\n  const onExpandedChange = useCallback(\n    (e: NonCancelableCustomEvent<ExpandableSectionProps.ChangeDetail>) => {\n      fireChange(definition, e.detail.expanded);\n      setUserExpanded(e.detail.expanded);\n    },\n    [definition, fireChange]\n  );\n\n  const onHeaderFollow: LinkProps['fireFollow'] = (_, event) => {\n    fireFollow(definition, event);\n    setUserExpanded(true);\n    if (!expanded) {\n      fireChange(definition, true);\n    }\n  };\n\n  return (\n    <InternalExpandableSection\n      className={styles['expandable-link-group']}\n      variant=\"navigation\"\n      expanded={userExpanded ?? expanded}\n      onChange={onExpandedChange}\n      header={\n        <Link\n          definition={{ type: 'link', href: definition.href, text: definition.text }}\n          expanded={userExpanded ?? expanded}\n          fireFollow={onHeaderFollow}\n          fireChange={fireChange}\n          activeHref={activeHref}\n        />\n      }\n    >\n      <ItemList\n        variant=\"expandable-link-group\"\n        items={definition.items}\n        fireFollow={fireFollow}\n        fireChange={fireChange}\n        activeHref={activeHref}\n      />\n    </InternalExpandableSection>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}