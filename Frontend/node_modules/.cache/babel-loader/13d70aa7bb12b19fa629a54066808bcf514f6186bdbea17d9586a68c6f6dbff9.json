{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport flattenChildren from 'react-keyed-flatten-children';\nimport { getBaseProps } from '../internal/base-component';\nimport { matchBreakpointMapping } from '../internal/breakpoints';\nimport { isDevelopment } from '../internal/is-development';\nimport * as logging from '../internal/logging';\nimport styles from './styles.css.js';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar InternalGrid = React.forwardRef(function (_a, ref) {\n  var _b;\n  var __breakpoint = _a.__breakpoint,\n    _c = _a.gridDefinition,\n    gridDefinition = _c === void 0 ? [] : _c,\n    _d = _a.disableGutters,\n    disableGutters = _d === void 0 ? false : _d,\n    children = _a.children,\n    __responsiveClassName = _a.__responsiveClassName,\n    _e = _a.__internalRootRef,\n    __internalRootRef = _e === void 0 ? null : _e,\n    restProps = __rest(_a, [\"__breakpoint\", \"gridDefinition\", \"disableGutters\", \"children\", \"__responsiveClassName\", \"__internalRootRef\"]);\n  var _f = useContainerBreakpoints(undefined),\n    defaultBreakpoint = _f[0],\n    defaultRef = _f[1];\n  if (__breakpoint !== undefined) {\n    defaultBreakpoint = __breakpoint;\n    defaultRef = ref;\n  }\n  var baseProps = getBaseProps(restProps);\n  /*\n  Flattening the children allows us to \"see through\" React Fragments and nested arrays.\n  */\n  var flattenedChildren = flattenChildren(children);\n  if (isDevelopment) {\n    var columnCount = gridDefinition.length;\n    var childCount = flattenedChildren.length;\n    if (columnCount !== childCount) {\n      logging.warnOnce('Grid', \"The number of children (\".concat(childCount, \") does not match the number of columns defined (\").concat(columnCount, \").\"));\n    }\n  }\n  var mergedRef = useMergeRefs(defaultRef, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(styles.grid, baseProps.className, (_b = {}, _b[styles['no-gutters']] = disableGutters, _b), __responsiveClassName ? __responsiveClassName(defaultBreakpoint) : null),\n    ref: mergedRef\n  }), flattenedChildren.map(function (child, i) {\n    var _a, _b, _c, _d;\n    // If this react child is a primitive value, the key will be undefined\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var key = child.key;\n    return React.createElement(\"div\", {\n      key: key,\n      className: clsx(styles['grid-column'], getColumnClassNames('colspan', (_a = gridDefinition[i]) === null || _a === void 0 ? void 0 : _a.colspan, defaultBreakpoint), getColumnClassNames('offset', (_b = gridDefinition[i]) === null || _b === void 0 ? void 0 : _b.offset, defaultBreakpoint), getColumnClassNames('pull', (_c = gridDefinition[i]) === null || _c === void 0 ? void 0 : _c.pull, defaultBreakpoint), getColumnClassNames('push', (_d = gridDefinition[i]) === null || _d === void 0 ? void 0 : _d.push, defaultBreakpoint))\n    }, React.createElement(\"div\", {\n      className: styles['restore-pointer-events']\n    }, child));\n  }));\n});\nfunction getColumnClassNames(prop, mapping, breakpoint) {\n  if (typeof mapping === 'number') {\n    return styles[\"\".concat(prop, \"-\").concat(mapping)];\n  }\n  if (breakpoint === null || mapping === undefined) {\n    return null;\n  }\n  return styles[\"\".concat(prop, \"-\").concat(matchBreakpointMapping(mapping, breakpoint))];\n}\nexport default InternalGrid;","map":{"version":3,"mappings":"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","names":["React","clsx","flattenChildren","getBaseProps","matchBreakpointMapping","isDevelopment","logging","styles","useContainerBreakpoints","useMergeRefs","InternalGrid","forwardRef","_a","ref","_c","gridDefinition","_d","disableGutters","children","__responsiveClassName","_e","__internalRootRef","restProps","undefined","defaultBreakpoint","defaultRef","__breakpoint","baseProps","flattenedChildren","columnCount","length","childCount","warnOnce","mergedRef","className","grid","_b","map","child","i","key","getColumnClassNames","colspan","offset","pull","push","prop","mapping","breakpoint"],"sources":["/Users/dcastro/node_modules/src/grid/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx, { ClassValue } from 'clsx';\nimport flattenChildren from 'react-keyed-flatten-children';\nimport { getBaseProps } from '../internal/base-component';\nimport { Breakpoint, matchBreakpointMapping } from '../internal/breakpoints';\nimport { isDevelopment } from '../internal/is-development';\nimport * as logging from '../internal/logging';\nimport styles from './styles.css.js';\nimport { GridProps } from './interfaces';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nexport interface InternalGridProps extends GridProps, InternalBaseComponentProps {\n  __breakpoint?: Breakpoint | null;\n\n  /**\n   * The handler that fires when the grid breakpoint changes.\n   */\n  __responsiveClassName?: (breakpoint: Breakpoint | null) => ClassValue;\n}\n\nconst InternalGrid = React.forwardRef(\n  (\n    {\n      __breakpoint,\n      gridDefinition = [],\n      disableGutters = false,\n      children,\n      __responsiveClassName,\n      __internalRootRef = null,\n      ...restProps\n    }: InternalGridProps,\n    ref: React.Ref<any>\n  ) => {\n    let [defaultBreakpoint, defaultRef]: [Breakpoint | null, React.Ref<any>] = useContainerBreakpoints(undefined);\n    if (__breakpoint !== undefined) {\n      defaultBreakpoint = __breakpoint;\n      defaultRef = ref;\n    }\n\n    const baseProps = getBaseProps(restProps);\n    /*\n   Flattening the children allows us to \"see through\" React Fragments and nested arrays.\n   */\n    const flattenedChildren = flattenChildren(children);\n\n    if (isDevelopment) {\n      const columnCount = gridDefinition.length;\n      const childCount = flattenedChildren.length;\n      if (columnCount !== childCount) {\n        logging.warnOnce(\n          'Grid',\n          `The number of children (${childCount}) does not match the number of columns defined (${columnCount}).`\n        );\n      }\n    }\n\n    const mergedRef = useMergeRefs(defaultRef, __internalRootRef);\n\n    return (\n      <div\n        {...baseProps}\n        className={clsx(\n          styles.grid,\n          baseProps.className,\n          { [styles['no-gutters']]: disableGutters },\n          __responsiveClassName ? __responsiveClassName(defaultBreakpoint) : null\n        )}\n        ref={mergedRef}\n      >\n        {flattenedChildren.map((child, i) => {\n          // If this react child is a primitive value, the key will be undefined\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const key = (child as any).key;\n\n          return (\n            <div\n              key={key}\n              className={clsx(\n                styles['grid-column'],\n                getColumnClassNames('colspan', gridDefinition[i]?.colspan, defaultBreakpoint),\n                getColumnClassNames('offset', gridDefinition[i]?.offset, defaultBreakpoint),\n                getColumnClassNames('pull', gridDefinition[i]?.pull, defaultBreakpoint),\n                getColumnClassNames('push', gridDefinition[i]?.push, defaultBreakpoint)\n              )}\n            >\n              <div className={styles['restore-pointer-events']}>{child}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nfunction getColumnClassNames(\n  prop: string,\n  mapping: undefined | number | GridProps.BreakpointMapping,\n  breakpoint: Breakpoint | null\n): string | null {\n  if (typeof mapping === 'number') {\n    return styles[`${prop}-${mapping}`];\n  }\n  if (breakpoint === null || mapping === undefined) {\n    return null;\n  }\n  return styles[`${prop}-${matchBreakpointMapping(mapping, breakpoint)}`];\n}\n\nexport default InternalGrid;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}