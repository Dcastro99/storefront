{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useEffect, useRef } from 'react';\nimport InternalBox from '../../box/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalFormField from '../../form-field/internal';\nimport InternalSelect from '../../select/internal';\nimport InternalStatusIndicator from '../../status-indicator/internal';\nimport useForwardFocus from '../../internal/hooks/forward-focus';\nimport { useVersionsFetch } from './use-versions-fetch';\nimport { validate, getErrorText } from './validation';\nimport styles from './styles.css.js';\nimport { SearchInput } from './search-input';\nexport var S3InContext = React.forwardRef(function (_a, ref) {\n  var i18nStrings = _a.i18nStrings,\n    resource = _a.resource,\n    viewHref = _a.viewHref,\n    invalid = _a.invalid,\n    inputAriaDescribedby = _a.inputAriaDescribedby,\n    selectableItemsTypes = _a.selectableItemsTypes,\n    fetchVersions = _a.fetchVersions,\n    onChange = _a.onChange,\n    onBrowse = _a.onBrowse;\n  var isInputBlurredRef = useRef(true);\n  var _b = useState(false),\n    isInputTouched = _b[0],\n    setInputTouched = _b[1];\n  var _c = useVersionsFetch(fetchVersions),\n    versions = _c.versions,\n    loading = _c.loading,\n    loadVersions = _c.loadVersions,\n    resetVersions = _c.resetVersions;\n  var inputRef = useRef(null);\n  useForwardFocus(ref, inputRef);\n  var uri = resource.uri;\n  var supportsVersions = selectableItemsTypes && selectableItemsTypes.indexOf('versions') > -1;\n  var selectedVersion = versions.filter(function (version) {\n    return version.value === resource.versionId;\n  })[0] || null;\n  function handleUriChange(event) {\n    var uri = event.detail.value;\n    var errorCode = isInputTouched ? validate(uri) : undefined;\n    resetVersions();\n    onChange({\n      uri: uri\n    }, getErrorText(i18nStrings, errorCode));\n  }\n  function handleUriBlur() {\n    isInputBlurredRef.current = true;\n    setInputTouched(true);\n    var errorCode = validate(resource.uri);\n    onChange(resource, getErrorText(i18nStrings, errorCode));\n    if (supportsVersions) {\n      loadVersions(resource.uri);\n    }\n  }\n  useEffect(function () {\n    var _a;\n    if (!isInputBlurredRef.current || !supportsVersions) {\n      return;\n    }\n    var cancel = ((_a = loadVersions(uri)) !== null && _a !== void 0 ? _a : {}).cancel;\n    return cancel;\n  }, [uri, supportsVersions, loadVersions]);\n  return React.createElement(\"div\", {\n    className: styles.root\n  }, React.createElement(\"div\", {\n    className: styles.layout\n  }, React.createElement(InternalFormField, {\n    className: styles['layout-uri'],\n    label: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextUriLabel,\n    stretch: true\n  }, React.createElement(SearchInput, {\n    ref: inputRef,\n    value: uri,\n    ariaDescribedby: inputAriaDescribedby,\n    placeholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextInputPlaceholder,\n    onChange: handleUriChange,\n    invalid: invalid,\n    onFocus: function () {\n      return isInputBlurredRef.current = false;\n    },\n    onBlur: handleUriBlur\n  })), supportsVersions && React.createElement(InternalFormField, {\n    className: styles['layout-version'],\n    label: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextVersionSelectLabel,\n    stretch: true\n  }, React.createElement(InternalSelect, {\n    selectedOption: selectedVersion,\n    placeholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextSelectPlaceholder,\n    disabled: versions.length === 0,\n    options: versions,\n    onChange: function (event) {\n      return onChange(__assign(__assign({}, resource), {\n        versionId: event.detail.selectedOption.value\n      }), undefined);\n    },\n    invalid: false\n  })), React.createElement(\"div\", null, React.createElement(InternalButton, {\n    className: styles['view-button'],\n    disabled: !viewHref,\n    href: viewHref,\n    target: \"_blank\",\n    iconName: \"external\",\n    iconAlign: \"right\",\n    formAction: \"none\",\n    ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextViewButtonAriaLabel\n  }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextViewButton)), React.createElement(\"div\", {\n    className: styles['layout-divider']\n  }), React.createElement(\"div\", null, React.createElement(InternalButton, {\n    className: styles['browse-button'],\n    disabled: loading,\n    formAction: \"none\",\n    onClick: onBrowse\n  }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextBrowseButton))), React.createElement(\"div\", {\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }, loading && React.createElement(InternalBox, {\n    margin: {\n      top: 's'\n    }\n  }, React.createElement(InternalStatusIndicator, {\n    type: \"loading\"\n  }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextLoadingText))));\n});","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","useRef","InternalBox","InternalButton","InternalFormField","InternalSelect","InternalStatusIndicator","useForwardFocus","useVersionsFetch","validate","getErrorText","styles","SearchInput","S3InContext","forwardRef","_a","ref","i18nStrings","resource","viewHref","invalid","inputAriaDescribedby","selectableItemsTypes","fetchVersions","onChange","onBrowse","isInputBlurredRef","isInputTouched","setInputTouched","versions","loading","loadVersions","resetVersions","inputRef","uri","supportsVersions","indexOf","selectedVersion","filter","value","versionId","handleUriChange","event","detail","errorCode","undefined","handleUriBlur","current","cancel","className","root","layout","label","inContextUriLabel","stretch","ariaDescribedby","placeholder","inContextInputPlaceholder","onFocus","onBlur","inContextVersionSelectLabel","selectedOption","inContextSelectPlaceholder","disabled","length","options","href","target","iconName","iconAlign","formAction","ariaLabel","inContextViewButtonAriaLabel","inContextViewButton","onClick","inContextBrowseButton","role","margin","top","type","inContextLoadingText"],"sources":["/Users/dcastro/node_modules/src/s3-resource-selector/s3-in-context/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useEffect, useRef } from 'react';\nimport InternalBox from '../../box/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalFormField from '../../form-field/internal';\nimport { InputProps } from '../../input/interfaces';\nimport InternalSelect from '../../select/internal';\nimport InternalStatusIndicator from '../../status-indicator/internal';\nimport { NonCancelableCustomEvent } from '../../internal/events';\nimport useForwardFocus from '../../internal/hooks/forward-focus';\nimport { useVersionsFetch } from './use-versions-fetch';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { validate, getErrorText } from './validation';\nimport styles from './styles.css.js';\nimport { SearchInput } from './search-input';\n\ninterface S3InContextProps {\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  resource: S3ResourceSelectorProps.Resource;\n  viewHref: string | undefined;\n  invalid: boolean | undefined;\n  inputAriaDescribedby: string | undefined;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchVersions: S3ResourceSelectorProps['fetchVersions'];\n  onBrowse: () => void;\n  onChange: (newResource: S3ResourceSelectorProps.Resource, errorText: string | undefined) => void;\n}\n\nexport interface S3InContextRef {\n  focus(): void;\n}\n\nexport const S3InContext = React.forwardRef(\n  (\n    {\n      i18nStrings,\n      resource,\n      viewHref,\n      invalid,\n      inputAriaDescribedby,\n      selectableItemsTypes,\n      fetchVersions,\n      onChange,\n      onBrowse,\n    }: S3InContextProps,\n    ref: React.Ref<S3InContextRef>\n  ) => {\n    const isInputBlurredRef = useRef(true);\n    const [isInputTouched, setInputTouched] = useState(false);\n    const { versions, loading, loadVersions, resetVersions } = useVersionsFetch(fetchVersions);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useForwardFocus(ref, inputRef);\n\n    const uri = resource.uri;\n    const supportsVersions = selectableItemsTypes && selectableItemsTypes.indexOf('versions') > -1;\n    const selectedVersion = versions.filter(version => version.value === resource.versionId)[0] || null;\n\n    function handleUriChange(event: NonCancelableCustomEvent<InputProps.ChangeDetail>) {\n      const uri = event.detail.value;\n      const errorCode = isInputTouched ? validate(uri) : undefined;\n      resetVersions();\n      onChange({ uri }, getErrorText(i18nStrings, errorCode));\n    }\n\n    function handleUriBlur() {\n      isInputBlurredRef.current = true;\n      setInputTouched(true);\n      const errorCode = validate(resource.uri);\n      onChange(resource, getErrorText(i18nStrings, errorCode));\n      if (supportsVersions) {\n        loadVersions(resource.uri);\n      }\n    }\n\n    useEffect(() => {\n      if (!isInputBlurredRef.current || !supportsVersions) {\n        return;\n      }\n      const { cancel } = loadVersions(uri) ?? {};\n      return cancel;\n    }, [uri, supportsVersions, loadVersions]);\n\n    return (\n      <div className={styles.root}>\n        <div className={styles.layout}>\n          <InternalFormField className={styles['layout-uri']} label={i18nStrings?.inContextUriLabel} stretch={true}>\n            <SearchInput\n              ref={inputRef}\n              value={uri}\n              ariaDescribedby={inputAriaDescribedby}\n              placeholder={i18nStrings?.inContextInputPlaceholder}\n              onChange={handleUriChange}\n              invalid={invalid}\n              onFocus={() => (isInputBlurredRef.current = false)}\n              onBlur={handleUriBlur}\n            />\n          </InternalFormField>\n          {supportsVersions && (\n            <InternalFormField\n              className={styles['layout-version']}\n              label={i18nStrings?.inContextVersionSelectLabel}\n              stretch={true}\n            >\n              <InternalSelect\n                selectedOption={selectedVersion}\n                placeholder={i18nStrings?.inContextSelectPlaceholder}\n                disabled={versions.length === 0}\n                options={versions}\n                onChange={event => onChange({ ...resource, versionId: event.detail.selectedOption.value }, undefined)}\n                invalid={false} // invalid state should not highlight the select, only the text input\n              />\n            </InternalFormField>\n          )}\n          <div>\n            <InternalButton\n              className={styles['view-button']}\n              disabled={!viewHref}\n              href={viewHref}\n              target=\"_blank\"\n              iconName=\"external\"\n              iconAlign=\"right\"\n              formAction=\"none\"\n              ariaLabel={i18nStrings?.inContextViewButtonAriaLabel}\n            >\n              {i18nStrings?.inContextViewButton}\n            </InternalButton>\n          </div>\n          <div className={styles['layout-divider']} />\n          <div>\n            <InternalButton className={styles['browse-button']} disabled={loading} formAction=\"none\" onClick={onBrowse}>\n              {i18nStrings?.inContextBrowseButton}\n            </InternalButton>\n          </div>\n        </div>\n\n        <div role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n          {loading && (\n            <InternalBox margin={{ top: 's' }}>\n              <InternalStatusIndicator type=\"loading\">{i18nStrings?.inContextLoadingText}</InternalStatusIndicator>\n            </InternalBox>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}