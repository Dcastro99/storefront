{"ast":null,"code":"import { computePlotPoints, computeDomainX, computeDomainY } from './utils';\nimport { createXTicks, createYTicks, getXTickCount, getYTickCount } from '../../internal/components/cartesian-chart/ticks';\nimport { ChartScale, NumericChartScale } from '../../internal/components/cartesian-chart/scales';\nexport default function computeChartProps(_a) {\n  var series = _a.series,\n    externalXDomain = _a.xDomain,\n    externalYDomain = _a.yDomain,\n    xScaleType = _a.xScaleType,\n    yScaleType = _a.yScaleType,\n    height = _a.height,\n    width = _a.width;\n  var xDomain = externalXDomain || computeDomainX(series);\n  var xTickCount = getXTickCount(width);\n  var xScale = new ChartScale(xScaleType, xDomain, [0, width]);\n  var xTicks = xScale.domain.length > 0 ? createXTicks(xScale, xTickCount) : [];\n  var yDomain = externalYDomain || computeDomainY(series, yScaleType);\n  var yTickCount = getYTickCount(height);\n  var yScale = new NumericChartScale(yScaleType, yDomain, [height, 0], externalYDomain ? null : yTickCount);\n  var yTicks = createYTicks(yScale, yTickCount);\n  var plot = computePlotPoints(series, xScale, yScale);\n  return {\n    xDomain: xDomain,\n    yDomain: yDomain,\n    xScale: xScale,\n    yScale: yScale,\n    xTicks: xTicks,\n    yTicks: yTicks,\n    plot: plot\n  };\n}","map":{"version":3,"mappings":"AAGA,SAASA,iBAAiB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,SAAS;AAG3E,SACEC,YAAY,EACZC,YAAY,EACZC,aAAa,EACbC,aAAa,QACR,iDAAiD;AACxD,SAASC,UAAU,EAAEC,iBAAiB,QAAQ,kDAAkD;AAEhG,eAAc,SAAUC,iBAAiB,CAAqCC,EAgB7E;MAfCC,MAAM;IACGC,eAAe;IACfC,eAAe;IACxBC,UAAU;IACVC,UAAU;IACVC,MAAM;IACNC,KAAK;EAUL,IAAMC,OAAO,GAAGN,eAAe,IAAIX,cAAc,CAACU,MAAM,CAAC;EACzD,IAAMQ,UAAU,GAAGd,aAAa,CAACY,KAAK,CAAC;EACvC,IAAMG,MAAM,GAAG,IAAIb,UAAU,CAACO,UAAU,EAAEI,OAAO,EAAE,CAAC,CAAC,EAAED,KAAK,CAAC,CAAC;EAC9D,IAAMI,MAAM,GAAGD,MAAM,CAACE,MAAM,CAACC,MAAM,GAAG,CAAC,GAAGpB,YAAY,CAACiB,MAAM,EAAED,UAAU,CAAC,GAAG,EAAE;EAE/E,IAAMK,OAAO,GAAGX,eAAe,IAAIX,cAAc,CAACS,MAAM,EAAEI,UAAU,CAAC;EACrE,IAAMU,UAAU,GAAGnB,aAAa,CAACU,MAAM,CAAC;EACxC,IAAMU,MAAM,GAAG,IAAIlB,iBAAiB,CAACO,UAAU,EAAES,OAAO,EAAE,CAACR,MAAM,EAAE,CAAC,CAAC,EAAEH,eAAe,GAAG,IAAI,GAAGY,UAAU,CAAC;EAC3G,IAAME,MAAM,GAAGvB,YAAY,CAACsB,MAAM,EAAED,UAAU,CAAC;EAE/C,IAAMG,IAAI,GAAG5B,iBAAiB,CAACW,MAAM,EAAES,MAAM,EAAEM,MAAM,CAAC;EAEtD,OAAO;IAAER,OAAO;IAAEM,OAAO;IAAEJ,MAAM;IAAEM,MAAM;IAAEL,MAAM;IAAEM,MAAM;IAAEC,IAAI;EAAA,CAAE;AACnE","names":["computePlotPoints","computeDomainX","computeDomainY","createXTicks","createYTicks","getXTickCount","getYTickCount","ChartScale","NumericChartScale","computeChartProps","_a","series","externalXDomain","externalYDomain","xScaleType","yScaleType","height","width","xDomain","xTickCount","xScale","xTicks","domain","length","yDomain","yTickCount","yScale","yTicks","plot"],"sources":["/Users/dcastro/node_modules/src/area-chart/model/compute-chart-props.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AreaChartProps } from '../interfaces';\nimport { computePlotPoints, computeDomainX, computeDomainY } from './utils';\n\nimport { XDomain, XScaleType, YDomain, YScaleType } from '../../internal/components/cartesian-chart/interfaces';\nimport {\n  createXTicks,\n  createYTicks,\n  getXTickCount,\n  getYTickCount,\n} from '../../internal/components/cartesian-chart/ticks';\nimport { ChartScale, NumericChartScale } from '../../internal/components/cartesian-chart/scales';\n\nexport default function computeChartProps<T extends AreaChartProps.DataTypes>({\n  series,\n  xDomain: externalXDomain,\n  yDomain: externalYDomain,\n  xScaleType,\n  yScaleType,\n  height,\n  width,\n}: {\n  series: readonly AreaChartProps.Series<T>[];\n  xDomain?: XDomain<T>;\n  yDomain?: YDomain;\n  xScaleType: XScaleType;\n  yScaleType: YScaleType;\n  height: number;\n  width: number;\n}) {\n  const xDomain = externalXDomain || computeDomainX(series);\n  const xTickCount = getXTickCount(width);\n  const xScale = new ChartScale(xScaleType, xDomain, [0, width]);\n  const xTicks = xScale.domain.length > 0 ? createXTicks(xScale, xTickCount) : [];\n\n  const yDomain = externalYDomain || computeDomainY(series, yScaleType);\n  const yTickCount = getYTickCount(height);\n  const yScale = new NumericChartScale(yScaleType, yDomain, [height, 0], externalYDomain ? null : yTickCount);\n  const yTicks = createYTicks(yScale, yTickCount);\n\n  const plot = computePlotPoints(series, xScale, yScale);\n\n  return { xDomain, yDomain, xScale, yScale, xTicks, yTicks, plot };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}