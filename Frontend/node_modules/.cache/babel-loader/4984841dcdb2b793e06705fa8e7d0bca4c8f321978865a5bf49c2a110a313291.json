{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../button/internal';\nimport InternalIcon from '../icon/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport VisualContext from '../internal/components/visual-context';\nimport styles from './styles.css.js';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar typeToIcon = {\n  error: 'status-negative',\n  warning: 'status-warning',\n  success: 'status-positive',\n  info: 'status-info'\n};\nexport default function InternalAlert(_a) {\n  var _b;\n  var type = _a.type,\n    statusIconAriaLabel = _a.statusIconAriaLabel,\n    _c = _a.visible,\n    visible = _c === void 0 ? true : _c,\n    dismissible = _a.dismissible,\n    dismissAriaLabel = _a.dismissAriaLabel,\n    children = _a.children,\n    header = _a.header,\n    buttonText = _a.buttonText,\n    action = _a.action,\n    onDismiss = _a.onDismiss,\n    onButtonClick = _a.onButtonClick,\n    _d = _a.__internalRootRef,\n    __internalRootRef = _d === void 0 ? null : _d,\n    rest = __rest(_a, [\"type\", \"statusIconAriaLabel\", \"visible\", \"dismissible\", \"dismissAriaLabel\", \"children\", \"header\", \"buttonText\", \"action\", \"onDismiss\", \"onButtonClick\", \"__internalRootRef\"]);\n  var baseProps = getBaseProps(rest);\n  var _e = useContainerBreakpoints(['xs']),\n    breakpoint = _e[0],\n    breakpointRef = _e[1];\n  var mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n  var isRefresh = useVisualRefresh();\n  var size = isRefresh ? 'normal' : header && children ? 'big' : 'normal';\n  var actionButton = action || React.createElement(InternalButton, {\n    className: styles['action-button'],\n    onClick: function () {\n      return fireNonCancelableEvent(onButtonClick);\n    },\n    formAction: \"none\"\n  }, buttonText);\n  var hasAction = Boolean(action || buttonText);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    \"aria-hidden\": !visible,\n    className: clsx(styles.root, (_b = {}, _b[styles.hidden] = !visible, _b), baseProps.className, styles[\"breakpoint-\".concat(breakpoint)]),\n    ref: mergedRef\n  }), React.createElement(VisualContext, {\n    contextName: \"alert\"\n  }, React.createElement(\"div\", {\n    className: clsx(styles.alert, styles[\"type-\".concat(type)])\n  }, React.createElement(\"div\", {\n    className: clsx(styles.icon, styles.text),\n    role: \"img\",\n    \"aria-label\": statusIconAriaLabel\n  }, React.createElement(InternalIcon, {\n    name: typeToIcon[type],\n    size: size\n  })), React.createElement(\"div\", {\n    className: styles.body\n  }, React.createElement(\"div\", {\n    className: clsx(styles.message, styles.text)\n  }, header && React.createElement(\"div\", {\n    className: styles.header\n  }, header), React.createElement(\"div\", {\n    className: styles.content\n  }, children)), hasAction && React.createElement(\"div\", {\n    className: styles.action\n  }, actionButton)), dismissible && React.createElement(\"div\", {\n    className: styles.dismiss\n  }, React.createElement(InternalButton, {\n    className: styles['dismiss-button'],\n    variant: \"icon\",\n    iconName: \"close\",\n    formAction: \"none\",\n    ariaLabel: dismissAriaLabel,\n    onClick: function () {\n      return fireNonCancelableEvent(onDismiss);\n    }\n  })))));\n}","map":{"version":3,"mappings":"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","names":["React","clsx","InternalButton","InternalIcon","getBaseProps","VisualContext","styles","fireNonCancelableEvent","useContainerBreakpoints","useVisualRefresh","useMergeRefs","typeToIcon","error","warning","success","info","InternalAlert","_a","statusIconAriaLabel","_c","visible","dismissible","dismissAriaLabel","children","header","buttonText","action","onDismiss","onButtonClick","_d","__internalRootRef","rest","baseProps","breakpoint","breakpointRef","mergedRef","isRefresh","size","actionButton","className","onClick","formAction","hasAction","Boolean","root","_b","hidden","ref","contextName","alert","type","icon","text","role","name","body","message","content","dismiss","variant","iconName","ariaLabel"],"sources":["/Users/dcastro/node_modules/src/alert/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../button/internal';\nimport { IconProps } from '../icon/interfaces';\nimport InternalIcon from '../icon/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport VisualContext from '../internal/components/visual-context';\nimport styles from './styles.css.js';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { AlertProps } from './interfaces';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { SomeRequired } from '../internal/types';\n\nconst typeToIcon: Record<AlertProps.Type, IconProps['name']> = {\n  error: 'status-negative',\n  warning: 'status-warning',\n  success: 'status-positive',\n  info: 'status-info',\n};\n\ntype InternalAlertProps = SomeRequired<AlertProps, 'type'> & InternalBaseComponentProps;\n\nexport default function InternalAlert({\n  type,\n  statusIconAriaLabel,\n  visible = true,\n  dismissible,\n  dismissAriaLabel,\n  children,\n  header,\n  buttonText,\n  action,\n  onDismiss,\n  onButtonClick,\n  __internalRootRef = null,\n  ...rest\n}: InternalAlertProps) {\n  const baseProps = getBaseProps(rest);\n\n  const [breakpoint, breakpointRef] = useContainerBreakpoints(['xs']);\n  const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n\n  const isRefresh = useVisualRefresh();\n  const size = isRefresh ? 'normal' : header && children ? 'big' : 'normal';\n\n  const actionButton = action || (\n    <InternalButton\n      className={styles['action-button']}\n      onClick={() => fireNonCancelableEvent(onButtonClick)}\n      formAction=\"none\"\n    >\n      {buttonText}\n    </InternalButton>\n  );\n\n  const hasAction = Boolean(action || buttonText);\n\n  return (\n    <div\n      {...baseProps}\n      aria-hidden={!visible}\n      className={clsx(\n        styles.root,\n        { [styles.hidden]: !visible },\n        baseProps.className,\n        styles[`breakpoint-${breakpoint}`]\n      )}\n      ref={mergedRef}\n    >\n      <VisualContext contextName=\"alert\">\n        <div className={clsx(styles.alert, styles[`type-${type}`])}>\n          <div className={clsx(styles.icon, styles.text)} role=\"img\" aria-label={statusIconAriaLabel}>\n            <InternalIcon name={typeToIcon[type]} size={size} />\n          </div>\n          <div className={styles.body}>\n            <div className={clsx(styles.message, styles.text)}>\n              {header && <div className={styles.header}>{header}</div>}\n              <div className={styles.content}>{children}</div>\n            </div>\n            {hasAction && <div className={styles.action}>{actionButton}</div>}\n          </div>\n          {dismissible && (\n            <div className={styles.dismiss}>\n              <InternalButton\n                className={styles['dismiss-button']}\n                variant=\"icon\"\n                iconName=\"close\"\n                formAction=\"none\"\n                ariaLabel={dismissAriaLabel}\n                onClick={() => fireNonCancelableEvent(onDismiss)}\n              />\n            </div>\n          )}\n        </div>\n      </VisualContext>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}