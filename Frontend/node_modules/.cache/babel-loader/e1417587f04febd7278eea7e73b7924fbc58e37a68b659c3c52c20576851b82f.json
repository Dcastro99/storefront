{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport { normalizeLocale } from '../calendar/utils/locales';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { KeyCode } from '../internal/keycode';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport InternalBox from '../box/internal';\nimport { DateRangePickerDropdown } from './dropdown';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport Dropdown from '../internal/components/dropdown';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport ButtonTrigger from '../internal/components/button-trigger';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport InternalIcon from '../icon/internal';\nimport { normalizeTimeOffset, shiftTimeOffset } from './time-offset';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { fireNonCancelableEvent } from '../internal/events/index.js';\nimport { isDevelopment } from '../internal/is-development.js';\nimport { warnOnce } from '../internal/logging.js';\nimport { usePrevious } from '../internal/hooks/use-previous/index.js';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { formatDateRange, isIsoDateOnly } from '../internal/utils/date-time';\nimport { formatValue } from './use-date-range-picker.js';\nfunction renderDateRange(range, placeholder, formatRelativeRange, timeOffset) {\n  if (!range) {\n    return React.createElement(\"span\", {\n      className: styles['label-text'],\n      \"aria-disabled\": true\n    }, placeholder);\n  }\n  var formatted = range.type === 'relative' ? formatRelativeRange(range) : React.createElement(BreakSpaces, {\n    text: formatDateRange(range.startDate, range.endDate, timeOffset)\n  });\n  return React.createElement(InternalBox, {\n    fontWeight: \"normal\",\n    display: \"inline\",\n    color: \"inherit\",\n    variant: \"span\"\n  }, formatted);\n}\nfunction BreakSpaces(_a) {\n  var text = _a.text;\n  var tokens = text.split(/( )/);\n  return React.createElement(React.Fragment, null, tokens.map(function (token, index) {\n    return React.createElement(React.Fragment, {\n      key: index\n    }, token.length > 1 ? React.createElement(\"span\", {\n      className: styles['label-token-nowrap']\n    }, token) : token, token === ' ' && React.createElement(\"wbr\", null));\n  }));\n}\nfunction isDateOnly(value) {\n  if (!value || value.type !== 'absolute') {\n    return false;\n  }\n  return isIsoDateOnly(value.startDate) && isIsoDateOnly(value.endDate);\n}\nvar DateRangePicker = React.forwardRef(function (_a, ref) {\n  var _b;\n  var _c, _d;\n  var _e = _a.locale,\n    locale = _e === void 0 ? '' : _e,\n    startOfWeek = _a.startOfWeek,\n    _f = _a.isDateEnabled,\n    isDateEnabled = _f === void 0 ? function () {\n      return true;\n    } : _f,\n    value = _a.value,\n    placeholder = _a.placeholder,\n    _g = _a.readOnly,\n    readOnly = _g === void 0 ? false : _g,\n    _h = _a.disabled,\n    disabled = _h === void 0 ? false : _h,\n    onChange = _a.onChange,\n    onBlur = _a.onBlur,\n    onFocus = _a.onFocus,\n    _j = _a.relativeOptions,\n    relativeOptions = _j === void 0 ? [] : _j,\n    i18nStrings = _a.i18nStrings,\n    _k = _a.isValidRange,\n    isValidRange = _k === void 0 ? function () {\n      return {\n        valid: true\n      };\n    } : _k,\n    _l = _a.showClearButton,\n    showClearButton = _l === void 0 ? true : _l,\n    _m = _a.dateOnly,\n    dateOnly = _m === void 0 ? false : _m,\n    timeOffset = _a.timeOffset,\n    getTimeOffset = _a.getTimeOffset,\n    _o = _a.timeInputFormat,\n    timeInputFormat = _o === void 0 ? 'hh:mm:ss' : _o,\n    _p = _a.expandToViewport,\n    expandToViewport = _p === void 0 ? false : _p,\n    _q = _a.rangeSelectorMode,\n    rangeSelectorMode = _q === void 0 ? 'default' : _q,\n    rest = __rest(_a, [\"locale\", \"startOfWeek\", \"isDateEnabled\", \"value\", \"placeholder\", \"readOnly\", \"disabled\", \"onChange\", \"onBlur\", \"onFocus\", \"relativeOptions\", \"i18nStrings\", \"isValidRange\", \"showClearButton\", \"dateOnly\", \"timeOffset\", \"getTimeOffset\", \"timeInputFormat\", \"expandToViewport\", \"rangeSelectorMode\"]);\n  var __internalRootRef = useBaseComponent('DateRangePicker').__internalRootRef;\n  checkControlled('DateRangePicker', 'value', value, 'onChange', onChange);\n  var normalizedTimeOffset = normalizeTimeOffset(value, getTimeOffset, timeOffset);\n  value = isDateOnly(value) ? value : shiftTimeOffset(value, normalizedTimeOffset);\n  var baseProps = getBaseProps(rest);\n  var _r = useFormFieldContext(__assign({\n      ariaLabelledby: (_c = rest.ariaLabelledby) !== null && _c !== void 0 ? _c : i18nStrings.ariaLabelledby,\n      ariaDescribedby: (_d = rest.ariaDescribedby) !== null && _d !== void 0 ? _d : i18nStrings.ariaDescribedby\n    }, rest)),\n    invalid = _r.invalid,\n    controlId = _r.controlId,\n    ariaDescribedby = _r.ariaDescribedby,\n    ariaLabelledby = _r.ariaLabelledby;\n  var isSingleGrid = useMobile();\n  var triggerRef = useRef(null);\n  useForwardFocus(ref, triggerRef);\n  var rootRef = useRef(null);\n  var dropdownId = useUniqueId('date-range-picker-dropdown');\n  useFocusTracker({\n    rootRef: rootRef,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    viewportId: expandToViewport ? dropdownId : ''\n  });\n  var _s = useState(false),\n    isDropDownOpen = _s[0],\n    setIsDropDownOpen = _s[1];\n  var normalizedLocale = normalizeLocale('DateRangePicker', locale !== null && locale !== void 0 ? locale : '');\n  var closeDropdown = function (focusTrigger) {\n    var _a;\n    if (focusTrigger === void 0) {\n      focusTrigger = false;\n    }\n    setIsDropDownOpen(false);\n    if (focusTrigger) {\n      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  var onWrapperKeyDownHandler = function (event) {\n    if (event.keyCode === KeyCode.escape) {\n      closeDropdown(true);\n    }\n  };\n  var onClear = function () {\n    fireNonCancelableEvent(onChange, {\n      value: null\n    });\n  };\n  var onApply = function (newValue) {\n    var validationResult = isValidRange(newValue);\n    if ((validationResult === null || validationResult === void 0 ? void 0 : validationResult.valid) === false) {\n      return validationResult;\n    }\n    if (isDevelopment) {\n      if ((newValue === null || newValue === void 0 ? void 0 : newValue.type) === 'absolute') {\n        var startDateWithoutTime = newValue.startDate.split('T')[0];\n        var endDateWithoutTime = newValue.endDate.split('T')[0];\n        if (!startDateWithoutTime || !endDateWithoutTime) {\n          warnOnce('DateRangePicker', 'You have provided an `isValidRange` prop that did not catch a missing start or end date.');\n        }\n      }\n    }\n    fireNonCancelableEvent(onChange, {\n      value: formatValue(newValue, {\n        dateOnly: dateOnly,\n        timeOffset: normalizeTimeOffset(newValue, getTimeOffset, timeOffset)\n      })\n    });\n    return validationResult || {\n      valid: true\n    };\n  };\n  var prevDateOnly = usePrevious(dateOnly);\n  useEffect(function () {\n    if (prevDateOnly !== undefined && prevDateOnly !== dateOnly) {\n      warnOnce('DateRangePicker', \"The provided `dateOnly` flag has been changed from \\\"\".concat(prevDateOnly, \"\\\" to \\\"\").concat(dateOnly, \"\\\" which can lead to unexpected value format. Consider using separate components.\"));\n    }\n  }, [prevDateOnly, dateOnly]);\n  if (value && value.type !== 'absolute' && value.type !== 'relative') {\n    warnOnce('DateRangePicker', 'You provided an invalid value. Reverting back to default.');\n    value = null;\n  }\n  if ((value === null || value === void 0 ? void 0 : value.type) === 'absolute' && rangeSelectorMode === 'relative-only' || (value === null || value === void 0 ? void 0 : value.type) === 'relative' && rangeSelectorMode === 'absolute-only') {\n    warnOnce('DateRangePicker', 'The provided value does not correspond to the current range selector mode. Reverting back to default.');\n    value = null;\n  }\n  var trigger = React.createElement(\"div\", {\n    className: styles['trigger-wrapper']\n  }, React.createElement(ButtonTrigger, {\n    ref: triggerRef,\n    id: controlId,\n    invalid: invalid,\n    ariaLabel: i18nStrings.ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    ariaLabelledby: ariaLabelledby,\n    className: clsx(styles.label, (_b = {}, _b[styles['label-enabled']] = !readOnly && !disabled, _b)),\n    hideCaret: true,\n    onClick: function () {\n      if (!readOnly && !disabled) {\n        setIsDropDownOpen(true);\n      }\n    },\n    disabled: disabled,\n    readOnly: readOnly,\n    ariaHasPopup: \"true\"\n  }, React.createElement(\"span\", {\n    className: styles['trigger-flexbox']\n  }, React.createElement(\"span\", {\n    className: styles['icon-wrapper']\n  }, React.createElement(InternalIcon, {\n    name: \"calendar\",\n    variant: disabled || readOnly ? 'disabled' : 'normal'\n  })), renderDateRange(value, placeholder !== null && placeholder !== void 0 ? placeholder : '', i18nStrings.formatRelativeRange, normalizedTimeOffset))));\n  var mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(baseProps.className, styles.root),\n    onKeyDown: onWrapperKeyDownHandler\n  }), React.createElement(Dropdown, {\n    stretchWidth: true,\n    stretchHeight: true,\n    open: isDropDownOpen,\n    onDropdownClose: function () {\n      return closeDropdown();\n    },\n    trigger: trigger,\n    stretchToTriggerWidth: false,\n    expandToViewport: expandToViewport,\n    dropdownId: dropdownId\n  }, isDropDownOpen && React.createElement(DateRangePickerDropdown, {\n    startOfWeek: startOfWeek,\n    locale: normalizedLocale,\n    isSingleGrid: isSingleGrid,\n    onDropdownClose: function () {\n      return closeDropdown(true);\n    },\n    value: value,\n    showClearButton: showClearButton,\n    isDateEnabled: isDateEnabled,\n    i18nStrings: i18nStrings,\n    onClear: onClear,\n    onApply: onApply,\n    relativeOptions: relativeOptions,\n    isValidRange: isValidRange,\n    dateOnly: dateOnly,\n    timeInputFormat: timeInputFormat,\n    rangeSelectorMode: rangeSelectorMode,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby\n  })));\n});\napplyDisplayName(DateRangePicker, 'DateRangePicker');\nexport default DateRangePicker;","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","useState","styles","normalizeLocale","useForwardFocus","KeyCode","clsx","getBaseProps","checkControlled","InternalBox","DateRangePickerDropdown","applyDisplayName","Dropdown","useFocusTracker","useMobile","ButtonTrigger","useFormFieldContext","InternalIcon","normalizeTimeOffset","shiftTimeOffset","useBaseComponent","useMergeRefs","fireNonCancelableEvent","isDevelopment","warnOnce","usePrevious","useUniqueId","formatDateRange","isIsoDateOnly","formatValue","renderDateRange","range","placeholder","formatRelativeRange","timeOffset","className","formatted","type","BreakSpaces","text","startDate","endDate","fontWeight","display","color","variant","_a","tokens","split","map","token","index","Fragment","key","length","isDateOnly","value","DateRangePicker","forwardRef","ref","locale","startOfWeek","_f","isDateEnabled","_g","readOnly","_h","disabled","onChange","onBlur","onFocus","_j","relativeOptions","i18nStrings","_k","isValidRange","valid","_l","showClearButton","_m","dateOnly","getTimeOffset","_o","timeInputFormat","_p","expandToViewport","_q","rangeSelectorMode","rest","normalizedTimeOffset","baseProps","ariaLabelledby","ariaDescribedby","invalid","controlId","isSingleGrid","triggerRef","rootRef","dropdownId","viewportId","isDropDownOpen","setIsDropDownOpen","normalizedLocale","closeDropdown","focusTrigger","current","focus","onWrapperKeyDownHandler","event","keyCode","escape","onClear","onApply","newValue","validationResult","startDateWithoutTime","endDateWithoutTime","prevDateOnly","undefined","trigger","id","ariaLabel","label","_b","hideCaret","onClick","ariaHasPopup","name","mergedRef","__internalRootRef","root","onKeyDown","stretchWidth","stretchHeight","open","onDropdownClose","stretchToTriggerWidth"],"sources":["/Users/dcastro/node_modules/src/date-range-picker/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useEffect, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport { DateRangePickerProps } from './interfaces';\nimport { normalizeLocale } from '../calendar/utils/locales';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { KeyCode } from '../internal/keycode';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport InternalBox from '../box/internal';\nimport { DateRangePickerDropdown } from './dropdown';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport Dropdown from '../internal/components/dropdown';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport ButtonTrigger from '../internal/components/button-trigger';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport InternalIcon from '../icon/internal';\nimport { normalizeTimeOffset, shiftTimeOffset } from './time-offset';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { fireNonCancelableEvent } from '../internal/events/index.js';\nimport { isDevelopment } from '../internal/is-development.js';\nimport { warnOnce } from '../internal/logging.js';\nimport { usePrevious } from '../internal/hooks/use-previous/index.js';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { formatDateRange, isIsoDateOnly } from '../internal/utils/date-time';\nimport { formatValue } from './use-date-range-picker.js';\n\nexport { DateRangePickerProps };\n\nfunction renderDateRange(\n  range: null | DateRangePickerProps.Value,\n  placeholder: string,\n  formatRelativeRange: DateRangePickerProps.I18nStrings['formatRelativeRange'],\n  timeOffset: { startDate?: number; endDate?: number }\n) {\n  if (!range) {\n    return (\n      <span className={styles['label-text']} aria-disabled={true}>\n        {placeholder}\n      </span>\n    );\n  }\n\n  const formatted =\n    range.type === 'relative' ? (\n      formatRelativeRange(range)\n    ) : (\n      <BreakSpaces text={formatDateRange(range.startDate, range.endDate, timeOffset)} />\n    );\n\n  return (\n    <InternalBox fontWeight=\"normal\" display=\"inline\" color=\"inherit\" variant=\"span\">\n      {formatted}\n    </InternalBox>\n  );\n}\n\nfunction BreakSpaces({ text }: { text: string }) {\n  const tokens = text.split(/( )/);\n  return (\n    <>\n      {tokens.map((token, index) => (\n        <React.Fragment key={index}>\n          {token.length > 1 ? <span className={styles['label-token-nowrap']}>{token}</span> : token}\n          {token === ' ' && <wbr />}\n        </React.Fragment>\n      ))}\n    </>\n  );\n}\n\nfunction isDateOnly(value: null | DateRangePickerProps.Value) {\n  if (!value || value.type !== 'absolute') {\n    return false;\n  }\n  return isIsoDateOnly(value.startDate) && isIsoDateOnly(value.endDate);\n}\n\nconst DateRangePicker = React.forwardRef(\n  (\n    {\n      locale = '',\n      startOfWeek,\n      isDateEnabled = () => true,\n      value,\n      placeholder,\n      readOnly = false,\n      disabled = false,\n      onChange,\n      onBlur,\n      onFocus,\n      relativeOptions = [],\n      i18nStrings,\n      isValidRange = () => ({ valid: true }),\n      showClearButton = true,\n      dateOnly = false,\n      timeOffset,\n      getTimeOffset,\n      timeInputFormat = 'hh:mm:ss',\n      expandToViewport = false,\n      rangeSelectorMode = 'default',\n      ...rest\n    }: DateRangePickerProps,\n    ref: Ref<DateRangePickerProps.Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('DateRangePicker');\n    checkControlled('DateRangePicker', 'value', value, 'onChange', onChange);\n\n    const normalizedTimeOffset = normalizeTimeOffset(value, getTimeOffset, timeOffset);\n    value = isDateOnly(value) ? value : shiftTimeOffset(value, normalizedTimeOffset);\n\n    const baseProps = getBaseProps(rest);\n    const { invalid, controlId, ariaDescribedby, ariaLabelledby } = useFormFieldContext({\n      ariaLabelledby: rest.ariaLabelledby ?? i18nStrings.ariaLabelledby,\n      ariaDescribedby: rest.ariaDescribedby ?? i18nStrings.ariaDescribedby,\n      ...rest,\n    });\n    const isSingleGrid = useMobile();\n\n    const triggerRef = useRef<HTMLButtonElement | null>(null);\n    useForwardFocus(ref, triggerRef);\n\n    const rootRef = useRef<HTMLDivElement>(null);\n    const dropdownId = useUniqueId('date-range-picker-dropdown');\n\n    useFocusTracker({ rootRef, onBlur, onFocus, viewportId: expandToViewport ? dropdownId : '' });\n\n    const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n\n    const normalizedLocale = normalizeLocale('DateRangePicker', locale ?? '');\n\n    const closeDropdown = (focusTrigger = false) => {\n      setIsDropDownOpen(false);\n      if (focusTrigger) {\n        triggerRef.current?.focus();\n      }\n    };\n\n    const onWrapperKeyDownHandler = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.keyCode === KeyCode.escape) {\n        closeDropdown(true);\n      }\n    };\n\n    const onClear = () => {\n      fireNonCancelableEvent(onChange, { value: null });\n    };\n\n    const onApply = (newValue: null | DateRangePickerProps.Value): DateRangePickerProps.ValidationResult => {\n      const validationResult = isValidRange(newValue);\n      if (validationResult?.valid === false) {\n        return validationResult;\n      }\n\n      if (isDevelopment) {\n        if (newValue?.type === 'absolute') {\n          const [startDateWithoutTime] = newValue.startDate.split('T');\n          const [endDateWithoutTime] = newValue.endDate.split('T');\n          if (!startDateWithoutTime || !endDateWithoutTime) {\n            warnOnce(\n              'DateRangePicker',\n              'You have provided an `isValidRange` prop that did not catch a missing start or end date.'\n            );\n          }\n        }\n      }\n      fireNonCancelableEvent(onChange, {\n        value: formatValue(newValue, {\n          dateOnly,\n          timeOffset: normalizeTimeOffset(newValue, getTimeOffset, timeOffset),\n        }),\n      });\n      return validationResult || { valid: true };\n    };\n\n    const prevDateOnly = usePrevious(dateOnly);\n    useEffect(() => {\n      if (prevDateOnly !== undefined && prevDateOnly !== dateOnly) {\n        warnOnce(\n          'DateRangePicker',\n          `The provided \\`dateOnly\\` flag has been changed from \"${prevDateOnly}\" to \"${dateOnly}\" which can lead to unexpected value format. Consider using separate components.`\n        );\n      }\n    }, [prevDateOnly, dateOnly]);\n\n    if (value && value.type !== 'absolute' && value.type !== 'relative') {\n      warnOnce('DateRangePicker', 'You provided an invalid value. Reverting back to default.');\n      value = null;\n    }\n\n    if (\n      (value?.type === 'absolute' && rangeSelectorMode === 'relative-only') ||\n      (value?.type === 'relative' && rangeSelectorMode === 'absolute-only')\n    ) {\n      warnOnce(\n        'DateRangePicker',\n        'The provided value does not correspond to the current range selector mode. Reverting back to default.'\n      );\n      value = null;\n    }\n\n    const trigger = (\n      <div className={styles['trigger-wrapper']}>\n        <ButtonTrigger\n          ref={triggerRef}\n          id={controlId}\n          invalid={invalid}\n          ariaLabel={i18nStrings.ariaLabel}\n          ariaDescribedby={ariaDescribedby}\n          ariaLabelledby={ariaLabelledby}\n          className={clsx(styles.label, {\n            [styles['label-enabled']]: !readOnly && !disabled,\n          })}\n          hideCaret={true}\n          onClick={() => {\n            if (!readOnly && !disabled) {\n              setIsDropDownOpen(true);\n            }\n          }}\n          disabled={disabled}\n          readOnly={readOnly}\n          ariaHasPopup=\"true\"\n        >\n          <span className={styles['trigger-flexbox']}>\n            <span className={styles['icon-wrapper']}>\n              <InternalIcon name=\"calendar\" variant={disabled || readOnly ? 'disabled' : 'normal'} />\n            </span>\n            {renderDateRange(value, placeholder ?? '', i18nStrings.formatRelativeRange, normalizedTimeOffset)}\n          </span>\n        </ButtonTrigger>\n      </div>\n    );\n\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    return (\n      <div\n        {...baseProps}\n        ref={mergedRef}\n        className={clsx(baseProps.className, styles.root)}\n        onKeyDown={onWrapperKeyDownHandler}\n      >\n        <Dropdown\n          stretchWidth={true}\n          stretchHeight={true}\n          open={isDropDownOpen}\n          onDropdownClose={() => closeDropdown()}\n          trigger={trigger}\n          stretchToTriggerWidth={false}\n          expandToViewport={expandToViewport}\n          dropdownId={dropdownId}\n        >\n          {isDropDownOpen && (\n            <DateRangePickerDropdown\n              startOfWeek={startOfWeek}\n              locale={normalizedLocale}\n              isSingleGrid={isSingleGrid}\n              onDropdownClose={() => closeDropdown(true)}\n              value={value}\n              showClearButton={showClearButton}\n              isDateEnabled={isDateEnabled}\n              i18nStrings={i18nStrings}\n              onClear={onClear}\n              onApply={onApply}\n              relativeOptions={relativeOptions}\n              isValidRange={isValidRange}\n              dateOnly={dateOnly}\n              timeInputFormat={timeInputFormat}\n              rangeSelectorMode={rangeSelectorMode}\n              ariaLabelledby={ariaLabelledby}\n              ariaDescribedby={ariaDescribedby}\n            />\n          )}\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\napplyDisplayName(DateRangePicker, 'DateRangePicker');\nexport default DateRangePicker;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}