{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { TICK_LENGTH, TICK_LINE_HEIGHT, TICK_MARGIN } from './constants';\nimport styles from './styles.css.js';\nimport { formatTicks, getVisibleTicks } from './label-utils';\nexport default memo(BottomLabels);\n// Renders the visible tick labels on the bottom axis, as well as their grid lines.\nfunction BottomLabels(_a) {\n  var _b = _a.axis,\n    axis = _b === void 0 ? 'x' : _b,\n    width = _a.width,\n    height = _a.height,\n    scale = _a.scale,\n    ticks = _a.ticks,\n    tickFormatter = _a.tickFormatter,\n    title = _a.title,\n    ariaRoleDescription = _a.ariaRoleDescription,\n    autoHeight = _a.autoHeight,\n    _c = _a.offsetLeft,\n    offsetLeft = _c === void 0 ? 0 : _c,\n    _d = _a.offsetRight,\n    offsetRight = _d === void 0 ? 0 : _d;\n  var virtualTextRef = useRef(null);\n  var xOffset = scale.isCategorical() && axis === 'x' ? Math.max(0, scale.d3Scale.bandwidth() - 1) / 2 : 0;\n  var cacheRef = useRef({});\n  var getLabelSpace = function (label) {\n    if (cacheRef.current[label] !== undefined) {\n      return cacheRef.current[label];\n    }\n    if (virtualTextRef.current && virtualTextRef.current.getComputedTextLength) {\n      virtualTextRef.current.textContent = label;\n      cacheRef.current[label] = virtualTextRef.current.getComputedTextLength();\n      return cacheRef.current[label];\n    }\n    return 0;\n  };\n  var formattedTicks = formatTicks({\n    ticks: ticks,\n    scale: scale,\n    getLabelSpace: getLabelSpace,\n    tickFormatter: tickFormatter\n  });\n  if (virtualTextRef.current) {\n    virtualTextRef.current.textContent = '';\n  }\n  var from = 0 - offsetLeft - xOffset;\n  var until = width + offsetRight - xOffset;\n  var balanceLabels = axis === 'x' && scale.scaleType !== 'log';\n  var visibleTicks = getVisibleTicks(formattedTicks, from, until, balanceLabels);\n  var maxHeight = TICK_LENGTH + TICK_MARGIN;\n  for (var _i = 0, formattedTicks_1 = formattedTicks; _i < formattedTicks_1.length; _i++) {\n    var lines = formattedTicks_1[_i].lines;\n    maxHeight = Math.max(maxHeight, TICK_LENGTH + TICK_MARGIN + lines.length * TICK_LINE_HEIGHT);\n  }\n  // Tell elements's height to the parent.\n  useEffect(function () {\n    autoHeight(maxHeight);\n  }, [autoHeight, maxHeight]);\n  return React.createElement(\"g\", {\n    transform: \"translate(0,\".concat(height, \")\"),\n    className: styles['labels-bottom'],\n    focusable: false,\n    \"aria-label\": title,\n    role: \"list\",\n    \"aria-roledescription\": ariaRoleDescription,\n    \"aria-hidden\": true\n  }, visibleTicks.map(function (_a, index) {\n    var _b;\n    var position = _a.position,\n      lines = _a.lines;\n    return isFinite(position) && React.createElement(\"g\", {\n      key: index,\n      transform: \"translate(\".concat(position + xOffset, \",0)\"),\n      className: clsx(styles.ticks, styles['ticks--bottom'], (_b = {}, _b[styles['ticks--x']] = axis === 'x', _b[styles['ticks--y']] = axis === 'y', _b)),\n      role: \"listitem\",\n      \"aria-label\": lines.join('\\n')\n    }, React.createElement(\"line\", {\n      className: styles.ticks__line,\n      x1: 0,\n      x2: 0,\n      y1: 0,\n      y2: TICK_LENGTH,\n      \"aria-hidden\": \"true\"\n    }), lines.map(function (line, lineIndex) {\n      return React.createElement(\"text\", {\n        className: styles.ticks__text,\n        key: lineIndex,\n        x: 0,\n        y: TICK_LENGTH + TICK_MARGIN + lineIndex * TICK_LINE_HEIGHT\n      }, line);\n    }));\n  }), React.createElement(\"text\", {\n    ref: virtualTextRef,\n    x: 0,\n    y: 0,\n    style: {\n      visibility: 'hidden'\n    },\n    \"aria-hidden\": \"true\"\n  }));\n}","map":{"version":3,"mappings":"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","names":["React","memo","useEffect","useRef","clsx","TICK_LENGTH","TICK_LINE_HEIGHT","TICK_MARGIN","styles","formatTicks","getVisibleTicks","BottomLabels","_a","_b","axis","width","height","scale","ticks","tickFormatter","title","ariaRoleDescription","autoHeight","_c","offsetLeft","_d","offsetRight","virtualTextRef","xOffset","isCategorical","Math","max","d3Scale","bandwidth","cacheRef","getLabelSpace","label","current","undefined","getComputedTextLength","textContent","formattedTicks","from","until","balanceLabels","scaleType","visibleTicks","maxHeight","formattedTicks_1","_i","lines","length","transform","className","focusable","role","map","index","position","key","join","ticks__line","x1","x2","y1","y2","line","lineIndex","ticks__text","x","y","ref","style","visibility"],"sources":["/Users/dcastro/node_modules/src/internal/components/cartesian-chart/bottom-labels.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { ChartDataTypes } from './interfaces';\nimport { ChartScale, NumericChartScale } from './scales';\nimport { TICK_LENGTH, TICK_LINE_HEIGHT, TICK_MARGIN } from './constants';\n\nimport styles from './styles.css.js';\nimport { formatTicks, getVisibleTicks } from './label-utils';\n\ninterface BottomLabelsProps {\n  axis?: 'x' | 'y';\n  width: number;\n  height: number;\n  scale: ChartScale | NumericChartScale;\n  ticks: readonly ChartDataTypes[];\n  tickFormatter?: (value: ChartDataTypes) => string;\n  title?: string;\n  ariaRoleDescription?: string;\n  autoHeight: (value: number) => void;\n  offsetLeft?: number;\n  offsetRight?: number;\n}\n\nexport default memo(BottomLabels) as typeof BottomLabels;\n\n// Renders the visible tick labels on the bottom axis, as well as their grid lines.\nfunction BottomLabels({\n  axis = 'x',\n  width,\n  height,\n  scale,\n  ticks,\n  tickFormatter,\n  title,\n  ariaRoleDescription,\n  autoHeight,\n  offsetLeft = 0,\n  offsetRight = 0,\n}: BottomLabelsProps) {\n  const virtualTextRef = useRef<SVGTextElement>(null);\n\n  const xOffset = scale.isCategorical() && axis === 'x' ? Math.max(0, scale.d3Scale.bandwidth() - 1) / 2 : 0;\n\n  const cacheRef = useRef<{ [label: string]: number }>({});\n  const getLabelSpace = (label: string) => {\n    if (cacheRef.current[label] !== undefined) {\n      return cacheRef.current[label];\n    }\n    if (virtualTextRef.current && virtualTextRef.current.getComputedTextLength) {\n      virtualTextRef.current.textContent = label;\n      cacheRef.current[label] = virtualTextRef.current.getComputedTextLength();\n      return cacheRef.current[label];\n    }\n    return 0;\n  };\n\n  const formattedTicks = formatTicks({ ticks, scale, getLabelSpace, tickFormatter });\n\n  if (virtualTextRef.current) {\n    virtualTextRef.current.textContent = '';\n  }\n\n  const from = 0 - offsetLeft - xOffset;\n  const until = width + offsetRight - xOffset;\n  const balanceLabels = axis === 'x' && scale.scaleType !== 'log';\n  const visibleTicks = getVisibleTicks(formattedTicks, from, until, balanceLabels);\n\n  let maxHeight = TICK_LENGTH + TICK_MARGIN;\n  for (const { lines } of formattedTicks) {\n    maxHeight = Math.max(maxHeight, TICK_LENGTH + TICK_MARGIN + lines.length * TICK_LINE_HEIGHT);\n  }\n\n  // Tell elements's height to the parent.\n  useEffect(() => {\n    autoHeight(maxHeight);\n  }, [autoHeight, maxHeight]);\n\n  return (\n    <g\n      transform={`translate(0,${height})`}\n      className={styles['labels-bottom']}\n      focusable={false}\n      aria-label={title}\n      role=\"list\"\n      aria-roledescription={ariaRoleDescription}\n      aria-hidden={true}\n    >\n      {visibleTicks.map(\n        ({ position, lines }, index) =>\n          isFinite(position) && (\n            <g\n              key={index}\n              transform={`translate(${position + xOffset},0)`}\n              className={clsx(styles.ticks, styles['ticks--bottom'], {\n                [styles['ticks--x']]: axis === 'x',\n                [styles['ticks--y']]: axis === 'y',\n              })}\n              role=\"listitem\"\n              aria-label={lines.join('\\n')}\n            >\n              <line className={styles.ticks__line} x1={0} x2={0} y1={0} y2={TICK_LENGTH} aria-hidden=\"true\" />\n              {lines.map((line, lineIndex) => (\n                <text\n                  className={styles.ticks__text}\n                  key={lineIndex}\n                  x={0}\n                  y={TICK_LENGTH + TICK_MARGIN + lineIndex * TICK_LINE_HEIGHT}\n                >\n                  {line}\n                </text>\n              ))}\n            </g>\n          )\n      )}\n\n      <text ref={virtualTextRef} x={0} y={0} style={{ visibility: 'hidden' }} aria-hidden=\"true\"></text>\n    </g>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}