{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { add } from 'date-fns';\nimport React from 'react';\nimport styles from '../../styles.css.js';\nimport { renderMonthAndYear } from '../../../calendar/utils/intl';\nimport HeaderButton from './button';\nimport LiveRegion from '../../../internal/components/live-region';\nexport default function CalendarHeader(_a) {\n  var baseDate = _a.baseDate,\n    locale = _a.locale,\n    onChangeMonth = _a.onChangeMonth,\n    previousMonthLabel = _a.previousMonthLabel,\n    nextMonthLabel = _a.nextMonthLabel,\n    isSingleGrid = _a.isSingleGrid,\n    headingIdPrefix = _a.headingIdPrefix;\n  var prevMonthLabel = renderMonthAndYear(locale, add(baseDate, {\n    months: -1\n  }));\n  var currentMonthLabel = renderMonthAndYear(locale, baseDate);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: styles['calendar-header']\n  }, React.createElement(HeaderButton, {\n    ariaLabel: previousMonthLabel,\n    isPrevious: true,\n    onChangeMonth: onChangeMonth\n  }), React.createElement(\"h2\", {\n    className: styles['calendar-header-months-wrapper']\n  }, !isSingleGrid && React.createElement(\"span\", {\n    className: styles['calendar-header-month'],\n    id: \"\".concat(headingIdPrefix, \"-prevmonth\")\n  }, prevMonthLabel), React.createElement(\"span\", {\n    className: styles['calendar-header-month'],\n    id: \"\".concat(headingIdPrefix, \"-currentmonth\")\n  }, currentMonthLabel)), React.createElement(HeaderButton, {\n    ariaLabel: nextMonthLabel,\n    isPrevious: false,\n    onChangeMonth: onChangeMonth\n  })), React.createElement(LiveRegion, null, isSingleGrid ? currentMonthLabel : \"\".concat(prevMonthLabel, \", \").concat(currentMonthLabel)));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,GAAG,QAAQ,UAAU;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,OAAOC,YAAY,MAAM,UAAU;AACnC,OAAOC,UAAU,MAAM,0CAA0C;AAYjE,eAAc,SAAUC,cAAc,CAACC,EAQjB;MAPpBC,QAAQ;IACRC,MAAM;IACNC,aAAa;IACbC,kBAAkB;IAClBC,cAAc;IACdC,YAAY;IACZC,eAAe;EAEf,IAAMC,cAAc,GAAGZ,kBAAkB,CAACM,MAAM,EAAET,GAAG,CAACQ,QAAQ,EAAE;IAAEQ,MAAM,EAAE,CAAC;EAAC,CAAE,CAAC,CAAC;EAChF,IAAMC,iBAAiB,GAAGd,kBAAkB,CAACM,MAAM,EAAED,QAAQ,CAAC;EAE9D,OACEP,0CACEA;IAAKiB,SAAS,EAAEhB,MAAM,CAAC,iBAAiB;EAAC,GACvCD,oBAACG,YAAY;IAACe,SAAS,EAAER,kBAAkB;IAAES,UAAU,EAAE,IAAI;IAAEV,aAAa,EAAEA;EAAa,EAAI,EAC/FT;IAAIiB,SAAS,EAAEhB,MAAM,CAAC,gCAAgC;EAAC,GACpD,CAACW,YAAY,IACZZ;IAAMiB,SAAS,EAAEhB,MAAM,CAAC,uBAAuB,CAAC;IAAEmB,EAAE,EAAE,UAAGP,eAAe;EAAY,GACjFC,cAAc,CAElB,EACDd;IAAMiB,SAAS,EAAEhB,MAAM,CAAC,uBAAuB,CAAC;IAAEmB,EAAE,EAAE,UAAGP,eAAe;EAAe,GACpFG,iBAAiB,CACb,CACJ,EACLhB,oBAACG,YAAY;IAACe,SAAS,EAAEP,cAAc;IAAEQ,UAAU,EAAE,KAAK;IAAEV,aAAa,EAAEA;EAAa,EAAI,CACxF,EACNT,oBAACI,UAAU,QAAEQ,YAAY,GAAGI,iBAAiB,GAAG,UAAGF,cAAc,eAAKE,iBAAiB,CAAE,CAAc,CACtG;AAEP","names":["add","React","styles","renderMonthAndYear","HeaderButton","LiveRegion","CalendarHeader","_a","baseDate","locale","onChangeMonth","previousMonthLabel","nextMonthLabel","isSingleGrid","headingIdPrefix","prevMonthLabel","months","currentMonthLabel","className","ariaLabel","isPrevious","id"],"sources":["/Users/dcastro/node_modules/src/date-range-picker/calendar/header/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { add } from 'date-fns';\nimport React from 'react';\nimport styles from '../../styles.css.js';\nimport { renderMonthAndYear } from '../../../calendar/utils/intl';\nimport HeaderButton from './button';\nimport LiveRegion from '../../../internal/components/live-region';\n\ninterface CalendarHeaderProps {\n  baseDate: Date;\n  locale: string;\n  onChangeMonth: (prev?: boolean) => void;\n  previousMonthLabel: string;\n  nextMonthLabel: string;\n  isSingleGrid: boolean;\n  headingIdPrefix: string;\n}\n\nexport default function CalendarHeader({\n  baseDate,\n  locale,\n  onChangeMonth,\n  previousMonthLabel,\n  nextMonthLabel,\n  isSingleGrid,\n  headingIdPrefix,\n}: CalendarHeaderProps) {\n  const prevMonthLabel = renderMonthAndYear(locale, add(baseDate, { months: -1 }));\n  const currentMonthLabel = renderMonthAndYear(locale, baseDate);\n\n  return (\n    <>\n      <div className={styles['calendar-header']}>\n        <HeaderButton ariaLabel={previousMonthLabel} isPrevious={true} onChangeMonth={onChangeMonth} />\n        <h2 className={styles['calendar-header-months-wrapper']}>\n          {!isSingleGrid && (\n            <span className={styles['calendar-header-month']} id={`${headingIdPrefix}-prevmonth`}>\n              {prevMonthLabel}\n            </span>\n          )}\n          <span className={styles['calendar-header-month']} id={`${headingIdPrefix}-currentmonth`}>\n            {currentMonthLabel}\n          </span>\n        </h2>\n        <HeaderButton ariaLabel={nextMonthLabel} isPrevious={false} onChangeMonth={onChangeMonth} />\n      </div>\n      <LiveRegion>{isSingleGrid ? currentMonthLabel : `${prevMonthLabel}, ${currentMonthLabel}`}</LiveRegion>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}