{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nvar OUTLINE_PADDING = 2;\n/**\n * The component renders empty SVG rectangles corresponding to the bar group slots.\n * The highlighted group rectangle is used for the pseudo-focus and therefore requires ARIA attributes.\n * Other rectangles are only needed for the \"findBarGroups\" test-utils selector.\n */\nexport default function BarGroups(_a) {\n  var ariaLabel = _a.ariaLabel,\n    isRefresh = _a.isRefresh,\n    isPopoverPinned = _a.isPopoverPinned,\n    barGroups = _a.barGroups,\n    highlightedGroupIndex = _a.highlightedGroupIndex,\n    highlightedGroupRef = _a.highlightedGroupRef;\n  return React.createElement(\"g\", {\n    role: \"group\",\n    \"aria-hidden\": \"true\"\n  }, barGroups.map(function (group, index) {\n    return React.createElement(\"rect\", {\n      key: index,\n      x: Math.max(0, group.position.x - OUTLINE_PADDING),\n      y: Math.max(0, group.position.y - OUTLINE_PADDING),\n      width: group.position.width + 2 * OUTLINE_PADDING,\n      height: group.position.height + 2 * OUTLINE_PADDING,\n      ref: index === highlightedGroupIndex ? highlightedGroupRef : undefined,\n      rx: isRefresh ? 4 : 2,\n      role: \"button\",\n      \"aria-label\": ariaLabel,\n      \"aria-haspopup\": true,\n      \"aria-expanded\": isPopoverPinned,\n      fill: \"none\",\n      className: styles['bar-group']\n    });\n  }));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAKzB,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,IAAMC,eAAe,GAAG,CAAC;AAWzB;;;;;AAKA,eAAc,SAAUC,SAAS,CAA2BC,EAO7C;MANbC,SAAS;IACTC,SAAS;IACTC,eAAe;IACfC,SAAS;IACTC,qBAAqB;IACrBC,mBAAmB;EAEnB,OACEV;IAAGW,IAAI,EAAC,OAAO;IAAA,eAAa;EAAM,GAC/BH,SAAS,CAACI,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;IAAK,OAC/Bd;MACEe,GAAG,EAAED,KAAK;MACVE,CAAC,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,KAAK,CAACM,QAAQ,CAACH,CAAC,GAAGd,eAAe,CAAC;MAClDkB,CAAC,EAAEH,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,KAAK,CAACM,QAAQ,CAACC,CAAC,GAAGlB,eAAe,CAAC;MAClDmB,KAAK,EAAER,KAAK,CAACM,QAAQ,CAACE,KAAK,GAAG,CAAC,GAAGnB,eAAe;MACjDoB,MAAM,EAAET,KAAK,CAACM,QAAQ,CAACG,MAAM,GAAG,CAAC,GAAGpB,eAAe;MACnDqB,GAAG,EAAET,KAAK,KAAKL,qBAAqB,GAAGC,mBAAmB,GAAGc,SAAS;MACtEC,EAAE,EAAEnB,SAAS,GAAG,CAAC,GAAG,CAAC;MACrBK,IAAI,EAAC,QAAQ;MAAA,cACDN,SAAS;MAAA,iBACN,IAAI;MAAA,iBACJE,eAAe;MAC9BmB,IAAI,EAAC,MAAM;MACXC,SAAS,EAAE1B,MAAM,CAAC,WAAW;IAAC,EAC9B;EAf6B,CAgBhC,CAAC,CACA;AAER","names":["React","styles","OUTLINE_PADDING","BarGroups","_a","ariaLabel","isRefresh","isPopoverPinned","barGroups","highlightedGroupIndex","highlightedGroupRef","role","map","group","index","key","x","Math","max","position","y","width","height","ref","undefined","rx","fill","className"],"sources":["/Users/dcastro/node_modules/src/mixed-line-bar-chart/bar-groups.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { ChartDataTypes } from './interfaces';\n\nimport { ScaledBarGroup } from './make-scaled-bar-groups';\nimport styles from './styles.css.js';\n\nconst OUTLINE_PADDING = 2;\n\nexport interface BarGroups<T extends ChartDataTypes> {\n  ariaLabel: string;\n  isRefresh: boolean;\n  isPopoverPinned: boolean;\n  barGroups: ScaledBarGroup<T>[];\n  highlightedGroupIndex: null | number;\n  highlightedGroupRef: React.RefObject<SVGRectElement>;\n}\n\n/**\n * The component renders empty SVG rectangles corresponding to the bar group slots.\n * The highlighted group rectangle is used for the pseudo-focus and therefore requires ARIA attributes.\n * Other rectangles are only needed for the \"findBarGroups\" test-utils selector.\n */\nexport default function BarGroups<T extends ChartDataTypes>({\n  ariaLabel,\n  isRefresh,\n  isPopoverPinned,\n  barGroups,\n  highlightedGroupIndex,\n  highlightedGroupRef,\n}: BarGroups<T>) {\n  return (\n    <g role=\"group\" aria-hidden=\"true\">\n      {barGroups.map((group, index) => (\n        <rect\n          key={index}\n          x={Math.max(0, group.position.x - OUTLINE_PADDING)}\n          y={Math.max(0, group.position.y - OUTLINE_PADDING)}\n          width={group.position.width + 2 * OUTLINE_PADDING}\n          height={group.position.height + 2 * OUTLINE_PADDING}\n          ref={index === highlightedGroupIndex ? highlightedGroupRef : undefined}\n          rx={isRefresh ? 4 : 2}\n          role=\"button\"\n          aria-label={ariaLabel}\n          aria-haspopup={true}\n          aria-expanded={isPopoverPinned}\n          fill=\"none\"\n          className={styles['bar-group']}\n        />\n      ))}\n    </g>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}