{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport { SplitPanelContext } from '../../internal/context/split-panel-context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\nexport default function Main() {\n  var _a;\n  var _b = useContext(AppLayoutContext),\n    breadcrumbs = _b.breadcrumbs,\n    content = _b.content,\n    contentHeader = _b.contentHeader,\n    contentType = _b.contentType,\n    disableContentPaddings = _b.disableContentPaddings,\n    dynamicOverlapHeight = _b.dynamicOverlapHeight,\n    hasNotificationsContent = _b.hasNotificationsContent,\n    isNavigationOpen = _b.isNavigationOpen,\n    isSplitPanelOpen = _b.isSplitPanelOpen,\n    isToolsOpen = _b.isToolsOpen,\n    isMobile = _b.isMobile,\n    isAnyPanelOpen = _b.isAnyPanelOpen,\n    mainElement = _b.mainElement;\n  var splitPanelPosition = useContext(SplitPanelContext).position;\n  var isUnfocusable = isMobile && isAnyPanelOpen;\n  return React.createElement(\"div\", {\n    className: clsx(styles.container, styles[\"content-type-\".concat(contentType)], styles[\"split-panel-position-\".concat(splitPanelPosition !== null && splitPanelPosition !== void 0 ? splitPanelPosition : 'bottom')], (_a = {}, _a[styles['disable-content-paddings']] = disableContentPaddings, _a[styles['has-breadcrumbs']] = breadcrumbs, _a[styles['has-dynamic-overlap-height']] = dynamicOverlapHeight > 0, _a[styles['has-header']] = contentHeader, _a[styles['has-notifications-content']] = hasNotificationsContent, _a[styles['is-navigation-open']] = isNavigationOpen, _a[styles['is-tools-open']] = isToolsOpen, _a[styles['is-split-panel-open']] = isSplitPanelOpen, _a[styles.unfocusable] = isUnfocusable, _a), testutilStyles.content),\n    ref: mainElement\n  }, content);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,gBAAgB,QAAQ,WAAW;AAC5C,SAASC,iBAAiB,QAAQ,4CAA4C;AAC9E,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,cAAc,MAAM,+BAA+B;AAE1D,eAAc,SAAUC,IAAI;;EACpB,SAcFN,UAAU,CAACE,gBAAgB,CAAC;IAb9BK,WAAW;IACXC,OAAO;IACPC,aAAa;IACbC,WAAW;IACXC,sBAAsB;IACtBC,oBAAoB;IACpBC,uBAAuB;IACvBC,gBAAgB;IAChBC,gBAAgB;IAChBC,WAAW;IACXC,QAAQ;IACRC,cAAc;IACdC,WAAW,iBACmB;EAExB,IAAUC,kBAAkB,GAAKpB,UAAU,CAACG,iBAAiB,CAAC,SAAlC;EACpC,IAAMkB,aAAa,GAAGJ,QAAQ,IAAIC,cAAc;EAEhD,OACEnB;IACEuB,SAAS,EAAErB,IAAI,CACbG,MAAM,CAACmB,SAAS,EAChBnB,MAAM,CAAC,uBAAgBM,WAAW,CAAE,CAAC,EACrCN,MAAM,CAAC,+BAAwBgB,kBAAkB,aAAlBA,kBAAkB,cAAlBA,kBAAkB,GAAI,QAAQ,CAAE,CAAC,YAE9DI,GAACpB,MAAM,CAAC,0BAA0B,CAAC,IAAGO,sBAAsB,EAC5Da,GAACpB,MAAM,CAAC,iBAAiB,CAAC,IAAGG,WAAW,EACxCiB,GAACpB,MAAM,CAAC,4BAA4B,CAAC,IAAGQ,oBAAoB,GAAG,CAAC,EAChEY,GAACpB,MAAM,CAAC,YAAY,CAAC,IAAGK,aAAa,EACrCe,GAACpB,MAAM,CAAC,2BAA2B,CAAC,IAAGS,uBAAuB,EAC9DW,GAACpB,MAAM,CAAC,oBAAoB,CAAC,IAAGU,gBAAgB,EAChDU,GAACpB,MAAM,CAAC,eAAe,CAAC,IAAGY,WAAW,EACtCQ,GAACpB,MAAM,CAAC,qBAAqB,CAAC,IAAGW,gBAAgB,EACjDS,GAACpB,MAAM,CAACqB,WAAW,IAAGJ,aAAa,OAErChB,cAAc,CAACG,OAAO,CACvB;IACDkB,GAAG,EAAEP;EAAW,GAEfX,OAAO,CACJ;AAEV","names":["React","useContext","clsx","AppLayoutContext","SplitPanelContext","styles","testutilStyles","Main","breadcrumbs","content","contentHeader","contentType","disableContentPaddings","dynamicOverlapHeight","hasNotificationsContent","isNavigationOpen","isSplitPanelOpen","isToolsOpen","isMobile","isAnyPanelOpen","mainElement","splitPanelPosition","isUnfocusable","className","container","_a","unfocusable","ref"],"sources":["/Users/dcastro/node_modules/src/app-layout/visual-refresh/main.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport { SplitPanelContext } from '../../internal/context/split-panel-context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\n\nexport default function Main() {\n  const {\n    breadcrumbs,\n    content,\n    contentHeader,\n    contentType,\n    disableContentPaddings,\n    dynamicOverlapHeight,\n    hasNotificationsContent,\n    isNavigationOpen,\n    isSplitPanelOpen,\n    isToolsOpen,\n    isMobile,\n    isAnyPanelOpen,\n    mainElement,\n  } = useContext(AppLayoutContext);\n\n  const { position: splitPanelPosition } = useContext(SplitPanelContext);\n  const isUnfocusable = isMobile && isAnyPanelOpen;\n\n  return (\n    <div\n      className={clsx(\n        styles.container,\n        styles[`content-type-${contentType}`],\n        styles[`split-panel-position-${splitPanelPosition ?? 'bottom'}`],\n        {\n          [styles['disable-content-paddings']]: disableContentPaddings,\n          [styles['has-breadcrumbs']]: breadcrumbs,\n          [styles['has-dynamic-overlap-height']]: dynamicOverlapHeight > 0,\n          [styles['has-header']]: contentHeader,\n          [styles['has-notifications-content']]: hasNotificationsContent,\n          [styles['is-navigation-open']]: isNavigationOpen,\n          [styles['is-tools-open']]: isToolsOpen,\n          [styles['is-split-panel-open']]: isSplitPanelOpen,\n          [styles.unfocusable]: isUnfocusable,\n        },\n        testutilStyles.content\n      )}\n      ref={mainElement}\n    >\n      {content}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}