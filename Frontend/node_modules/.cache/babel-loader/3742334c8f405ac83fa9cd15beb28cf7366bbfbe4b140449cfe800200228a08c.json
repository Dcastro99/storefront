{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport clsx from 'clsx';\nimport FocusLock from 'react-focus-lock';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { InternalButton } from '../button/internal';\nimport styles from './styles.css.js';\nexport default function PopoverBody(_a) {\n  var _b, _c;\n  var showDismissButton = _a.dismissButton,\n    dismissAriaLabel = _a.dismissAriaLabel,\n    header = _a.header,\n    children = _a.children,\n    onDismiss = _a.onDismiss,\n    variant = _a.variant,\n    _d = _a.returnFocus,\n    returnFocus = _d === void 0 ? true : _d,\n    overflowVisible = _a.overflowVisible,\n    dismissButtonRef = _a.dismissButtonRef,\n    className = _a.className;\n  var labelledById = useUniqueId('awsui-popover-');\n  var onKeyDown = useCallback(function (event) {\n    if (event.keyCode === KeyCode.escape) {\n      onDismiss();\n    }\n  }, [onDismiss]);\n  var dismissButton = (showDismissButton !== null && showDismissButton !== void 0 ? showDismissButton : null) && React.createElement(\"div\", {\n    className: styles.dismiss\n  }, React.createElement(InternalButton, {\n    variant: \"icon\",\n    formAction: \"none\",\n    iconName: \"close\",\n    className: styles['dismiss-control'],\n    ariaLabel: dismissAriaLabel,\n    onClick: function () {\n      return onDismiss();\n    },\n    ref: dismissButtonRef\n  }));\n  return React.createElement(\"div\", {\n    className: clsx(styles.body, className, (_b = {}, _b[styles['body-overflow-visible']] = overflowVisible === 'both', _b)),\n    role: header ? 'dialog' : undefined,\n    onKeyDown: onKeyDown,\n    \"aria-modal\": showDismissButton && variant !== 'annotation' ? true : undefined,\n    \"aria-labelledby\": header ? labelledById : undefined\n  }, React.createElement(FocusLock, {\n    disabled: variant === 'annotation' || !showDismissButton,\n    autoFocus: true,\n    returnFocus: returnFocus\n  }, header && React.createElement(\"div\", {\n    className: clsx(styles['header-row'], showDismissButton && styles['has-dismiss'])\n  }, dismissButton, React.createElement(\"div\", {\n    className: styles.header,\n    id: labelledById\n  }, React.createElement(\"h2\", null, header))), React.createElement(\"div\", {\n    className: !header && showDismissButton ? styles['has-dismiss'] : undefined\n  }, !header && dismissButton, React.createElement(\"div\", {\n    className: clsx(styles.content, (_c = {}, _c[styles['content-overflow-visible']] = !!overflowVisible, _c))\n  }, children))));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,SAAS,MAAM,kBAAkB;AAExC,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,WAAW,QAAQ,iCAAiC;AAE7D,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,OAAOC,MAAM,MAAM,iBAAiB;AAkBpC,eAAc,SAAUC,WAAW,CAACC,EAWjB;;MAVFC,iBAAiB;IAChCC,gBAAgB;IAChBC,MAAM;IACNC,QAAQ;IACRC,SAAS;IACTC,OAAO;IACPC,mBAAkB;IAAlBC,WAAW,mBAAG,IAAI;IAClBC,eAAe;IACfC,gBAAgB;IAChBC,SAAS;EAET,IAAMC,YAAY,GAAGhB,WAAW,CAAC,gBAAgB,CAAC;EAElD,IAAMiB,SAAS,GAAGrB,WAAW,CAC3B,UAACsB,KAA0B;IACzB,IAAIA,KAAK,CAACC,OAAO,KAAKpB,OAAO,CAACqB,MAAM,EAAE;MACpCX,SAAS,EAAE;;EAEf,CAAC,EACD,CAACA,SAAS,CAAC,CACZ;EAED,IAAMY,aAAa,GAAG,CAAChB,iBAAiB,aAAjBA,iBAAiB,cAAjBA,iBAAiB,GAAI,IAAI,KAC9CV;IAAKoB,SAAS,EAAEb,MAAM,CAACoB;EAAO,GAC5B3B,oBAACM,cAAc;IACbS,OAAO,EAAC,MAAM;IACda,UAAU,EAAC,MAAM;IACjBC,QAAQ,EAAC,OAAO;IAChBT,SAAS,EAAEb,MAAM,CAAC,iBAAiB,CAAC;IACpCuB,SAAS,EAAEnB,gBAAgB;IAC3BoB,OAAO,EAAE;MAAM,gBAAS,EAAE;IAAX,CAAW;IAC1BC,GAAG,EAAEb;EAAgB,EACrB,CAEL;EAED,OACEnB;IACEoB,SAAS,EAAElB,IAAI,CAACK,MAAM,CAAC0B,IAAI,EAAEb,SAAS,YACpCc,GAAC3B,MAAM,CAAC,uBAAuB,CAAC,IAAGW,eAAe,KAAK,MAAM,MAC7D;IACFiB,IAAI,EAAEvB,MAAM,GAAG,QAAQ,GAAGwB,SAAS;IACnCd,SAAS,EAAEA,SAAS;IAAA,cACRZ,iBAAiB,IAAIK,OAAO,KAAK,YAAY,GAAG,IAAI,GAAGqB,SAAS;IAAA,mBAC3DxB,MAAM,GAAGS,YAAY,GAAGe;EAAS,GAElDpC,oBAACG,SAAS;IAACkC,QAAQ,EAAEtB,OAAO,KAAK,YAAY,IAAI,CAACL,iBAAiB;IAAE4B,SAAS,EAAE,IAAI;IAAErB,WAAW,EAAEA;EAAW,GAC3GL,MAAM,IACLZ;IAAKoB,SAAS,EAAElB,IAAI,CAACK,MAAM,CAAC,YAAY,CAAC,EAAEG,iBAAiB,IAAIH,MAAM,CAAC,aAAa,CAAC;EAAC,GACnFmB,aAAa,EACd1B;IAAKoB,SAAS,EAAEb,MAAM,CAACK,MAAM;IAAE2B,EAAE,EAAElB;EAAY,GAC7CrB,gCAAKY,MAAM,CAAM,CACb,CAET,EACDZ;IAAKoB,SAAS,EAAE,CAACR,MAAM,IAAIF,iBAAiB,GAAGH,MAAM,CAAC,aAAa,CAAC,GAAG6B;EAAS,GAC7E,CAACxB,MAAM,IAAIc,aAAa,EACzB1B;IAAKoB,SAAS,EAAElB,IAAI,CAACK,MAAM,CAACiC,OAAO,YAAIC,GAAClC,MAAM,CAAC,0BAA0B,CAAC,IAAG,CAAC,CAACW,eAAe;EAAG,GAC9FL,QAAQ,CACL,CACF,CACI,CACR;AAEV","names":["React","useCallback","clsx","FocusLock","KeyCode","useUniqueId","InternalButton","styles","PopoverBody","_a","showDismissButton","dismissAriaLabel","header","children","onDismiss","variant","_d","returnFocus","overflowVisible","dismissButtonRef","className","labelledById","onKeyDown","event","keyCode","escape","dismissButton","dismiss","formAction","iconName","ariaLabel","onClick","ref","body","_b","role","undefined","disabled","autoFocus","id","content","_c"],"sources":["/Users/dcastro/node_modules/src/popover/body.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport clsx from 'clsx';\nimport FocusLock from 'react-focus-lock';\n\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\n\nimport styles from './styles.css.js';\n\nexport interface PopoverBodyProps {\n  dismissButton: boolean;\n  dismissAriaLabel: string | undefined;\n  onDismiss: () => void;\n\n  header: React.ReactNode | undefined;\n  children: React.ReactNode;\n  variant?: 'annotation';\n  returnFocus?: boolean;\n  overflowVisible?: 'content' | 'both';\n\n  dismissButtonRef?: React.Ref<ButtonProps.Ref>;\n\n  className?: string;\n}\n\nexport default function PopoverBody({\n  dismissButton: showDismissButton,\n  dismissAriaLabel,\n  header,\n  children,\n  onDismiss,\n  variant,\n  returnFocus = true,\n  overflowVisible,\n  dismissButtonRef,\n  className,\n}: PopoverBodyProps) {\n  const labelledById = useUniqueId('awsui-popover-');\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.keyCode === KeyCode.escape) {\n        onDismiss();\n      }\n    },\n    [onDismiss]\n  );\n\n  const dismissButton = (showDismissButton ?? null) && (\n    <div className={styles.dismiss}>\n      <InternalButton\n        variant=\"icon\"\n        formAction=\"none\"\n        iconName=\"close\"\n        className={styles['dismiss-control']}\n        ariaLabel={dismissAriaLabel}\n        onClick={() => onDismiss()}\n        ref={dismissButtonRef}\n      />\n    </div>\n  );\n\n  return (\n    <div\n      className={clsx(styles.body, className, {\n        [styles['body-overflow-visible']]: overflowVisible === 'both',\n      })}\n      role={header ? 'dialog' : undefined}\n      onKeyDown={onKeyDown}\n      aria-modal={showDismissButton && variant !== 'annotation' ? true : undefined}\n      aria-labelledby={header ? labelledById : undefined}\n    >\n      <FocusLock disabled={variant === 'annotation' || !showDismissButton} autoFocus={true} returnFocus={returnFocus}>\n        {header && (\n          <div className={clsx(styles['header-row'], showDismissButton && styles['has-dismiss'])}>\n            {dismissButton}\n            <div className={styles.header} id={labelledById}>\n              <h2>{header}</h2>\n            </div>\n          </div>\n        )}\n        <div className={!header && showDismissButton ? styles['has-dismiss'] : undefined}>\n          {!header && dismissButton}\n          <div className={clsx(styles.content, { [styles['content-overflow-visible']]: !!overflowVisible })}>\n            {children}\n          </div>\n        </div>\n      </FocusLock>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}