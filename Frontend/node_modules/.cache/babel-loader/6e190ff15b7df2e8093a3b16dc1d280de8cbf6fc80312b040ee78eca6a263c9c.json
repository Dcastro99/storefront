{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect } from 'react';\n/**\n * This hook provides access to the value of any variable\n * from the previous render frame.\n * Even if multiple effects are flushed in a single render\n * loop, this hook still keeps the original value.\n */\nexport var usePreviousFrameValue = function (value) {\n  var ref = useRef();\n  useEffect(function () {\n    var handle = requestAnimationFrame(function () {\n      ref.current = value;\n    });\n    return function () {\n      return cancelAnimationFrame(handle);\n    };\n  });\n  return ref.current;\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEzC;;;;;;AAMA,OAAO,IAAMC,qBAAqB,GAAG,UAAIC,KAAQ;EAC/C,IAAMC,GAAG,GAAGJ,MAAM,EAAK;EACvBC,SAAS,CAAC;IACR,IAAMI,MAAM,GAAGC,qBAAqB,CAAC;MACnCF,GAAG,CAACG,OAAO,GAAGJ,KAAK;IACrB,CAAC,CAAC;IACF,OAAO;MAAM,2BAAoB,CAACE,MAAM,CAAC;IAA5B,CAA4B;EAC3C,CAAC,CAAC;EACF,OAAOD,GAAG,CAACG,OAAO;AACpB,CAAC","names":["useRef","useEffect","usePreviousFrameValue","value","ref","handle","requestAnimationFrame","current"],"sources":["/Users/dcastro/node_modules/src/internal/hooks/use-previous-frame/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect } from 'react';\n\n/**\n * This hook provides access to the value of any variable\n * from the previous render frame.\n * Even if multiple effects are flushed in a single render\n * loop, this hook still keeps the original value.\n */\nexport const usePreviousFrameValue = <T>(value: T) => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    const handle = requestAnimationFrame(() => {\n      ref.current = value;\n    });\n    return () => cancelAnimationFrame(handle);\n  });\n  return ref.current;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}