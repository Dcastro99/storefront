{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport InternalCalendar from '../calendar/internal';\nimport { normalizeLocale } from '../calendar/utils/locales';\nimport { getDateLabel, renderMonthAndYear } from '../calendar/utils/intl';\nimport { memoizedDate } from '../calendar/utils/memoized-date';\nimport { KeyCode } from '../internal/keycode';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport Dropdown from '../internal/components/dropdown';\nimport InternalDateInput from '../date-input/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name.js';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker.js';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalButton } from '../button/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport FocusLock from '../internal/components/focus-lock';\nimport useFocusVisible from '../internal/hooks/focus-visible/index.js';\nimport LiveRegion from '../internal/components/live-region';\nvar DatePicker = React.forwardRef(function (_a, ref) {\n  var _b = _a.locale,\n    locale = _b === void 0 ? '' : _b,\n    startOfWeek = _a.startOfWeek,\n    isDateEnabled = _a.isDateEnabled,\n    nextMonthAriaLabel = _a.nextMonthAriaLabel,\n    previousMonthAriaLabel = _a.previousMonthAriaLabel,\n    todayAriaLabel = _a.todayAriaLabel,\n    _c = _a.placeholder,\n    placeholder = _c === void 0 ? '' : _c,\n    _d = _a.value,\n    value = _d === void 0 ? '' : _d,\n    _e = _a.readOnly,\n    readOnly = _e === void 0 ? false : _e,\n    _f = _a.disabled,\n    disabled = _f === void 0 ? false : _f,\n    onBlur = _a.onBlur,\n    _g = _a.autoFocus,\n    autoFocus = _g === void 0 ? false : _g,\n    onChange = _a.onChange,\n    onFocus = _a.onFocus,\n    name = _a.name,\n    ariaLabel = _a.ariaLabel,\n    ariaRequired = _a.ariaRequired,\n    ariaLabelledby = _a.ariaLabelledby,\n    ariaDescribedby = _a.ariaDescribedby,\n    controlId = _a.controlId,\n    invalid = _a.invalid,\n    openCalendarAriaLabel = _a.openCalendarAriaLabel,\n    expandToViewport = _a.expandToViewport,\n    rest = __rest(_a, [\"locale\", \"startOfWeek\", \"isDateEnabled\", \"nextMonthAriaLabel\", \"previousMonthAriaLabel\", \"todayAriaLabel\", \"placeholder\", \"value\", \"readOnly\", \"disabled\", \"onBlur\", \"autoFocus\", \"onChange\", \"onFocus\", \"name\", \"ariaLabel\", \"ariaRequired\", \"ariaLabelledby\", \"ariaDescribedby\", \"controlId\", \"invalid\", \"openCalendarAriaLabel\", \"expandToViewport\"]);\n  var __internalRootRef = useBaseComponent('DatePicker').__internalRootRef;\n  checkControlled('DatePicker', 'value', value, 'onChange', onChange);\n  var baseProps = getBaseProps(rest);\n  var _h = useState(false),\n    isDropDownOpen = _h[0],\n    setIsDropDownOpen = _h[1];\n  var normalizedLocale = normalizeLocale('DatePicker', locale);\n  var focusVisible = useFocusVisible();\n  var internalInputRef = useRef(null);\n  var buttonRef = useRef(null);\n  useForwardFocus(ref, internalInputRef);\n  var rootRef = useRef(null);\n  var dropdownId = useUniqueId('calender');\n  var calendarDescriptionId = useUniqueId('calendar-description-');\n  var mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  useFocusTracker({\n    rootRef: rootRef,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    viewportId: expandToViewport ? dropdownId : ''\n  });\n  var onDropdownCloseHandler = useCallback(function () {\n    return setIsDropDownOpen(false);\n  }, [setIsDropDownOpen]);\n  var onButtonClickHandler = function () {\n    if (!isDropDownOpen) {\n      setIsDropDownOpen(true);\n    }\n  };\n  var onWrapperKeyDownHandler = function (event) {\n    var _a;\n    if (event.keyCode === KeyCode.escape && isDropDownOpen) {\n      (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      setIsDropDownOpen(false);\n    }\n  };\n  var onInputChangeHandler = function (event) {\n    fireNonCancelableEvent(onChange, {\n      value: event.detail.value\n    });\n  };\n  var onInputBlurHandler = function () {\n    if (!isDropDownOpen) {\n      setIsDropDownOpen(false);\n    }\n  };\n  var memoizedValue = memoizedDate('value', value);\n  var baseDate = memoizedValue || new Date();\n  var trigger = React.createElement(\"div\", {\n    className: styles['date-picker-trigger']\n  }, React.createElement(\"div\", {\n    className: styles['date-picker-input']\n  }, React.createElement(InternalDateInput, {\n    name: name,\n    invalid: invalid,\n    controlId: controlId,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    ariaLabel: ariaLabel,\n    ariaRequired: ariaRequired,\n    value: value,\n    disabled: disabled,\n    readOnly: readOnly,\n    onChange: onInputChangeHandler,\n    onBlur: onInputBlurHandler,\n    placeholder: placeholder,\n    ref: internalInputRef,\n    autoFocus: autoFocus\n  })), React.createElement(\"div\", null, React.createElement(InternalButton, {\n    iconName: \"calendar\",\n    className: styles['open-calendar-button'],\n    onClick: onButtonClickHandler,\n    ref: buttonRef,\n    ariaLabel: openCalendarAriaLabel && openCalendarAriaLabel(value.length === 10 ? getDateLabel(normalizedLocale, memoizedValue) : null),\n    disabled: disabled || readOnly,\n    formAction: \"none\"\n  })));\n  baseProps.className = clsx(baseProps.className, styles.root, styles['date-picker-container']);\n  var handleMouseDown = function (event) {\n    // prevent currently focused element from losing it\n    event.preventDefault();\n  };\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    ref: mergedRef,\n    onKeyDown: !disabled && !readOnly ? onWrapperKeyDownHandler : undefined\n  }), disabled || readOnly ? trigger : React.createElement(Dropdown, {\n    stretchWidth: true,\n    stretchHeight: true,\n    open: isDropDownOpen,\n    onDropdownClose: onDropdownCloseHandler,\n    onMouseDown: handleMouseDown,\n    trigger: trigger,\n    expandToViewport: expandToViewport,\n    scrollable: false,\n    dropdownId: dropdownId\n  }, isDropDownOpen && React.createElement(FocusLock, {\n    autoFocus: true\n  }, React.createElement(\"div\", __assign({}, focusVisible, {\n    tabIndex: 0,\n    className: styles.calendar,\n    role: \"dialog\",\n    \"aria-describedby\": calendarDescriptionId,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby\n  }), React.createElement(InternalCalendar, {\n    value: value,\n    onChange: function (e) {\n      var _a;\n      fireNonCancelableEvent(onChange, e.detail);\n      (_a = buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      setIsDropDownOpen(false);\n    },\n    locale: normalizedLocale,\n    startOfWeek: startOfWeek,\n    isDateEnabled: isDateEnabled,\n    todayAriaLabel: todayAriaLabel,\n    nextMonthAriaLabel: nextMonthAriaLabel,\n    previousMonthAriaLabel: previousMonthAriaLabel\n  }), React.createElement(LiveRegion, {\n    id: calendarDescriptionId\n  }, renderMonthAndYear(normalizedLocale, baseDate))))));\n});\napplyDisplayName(DatePicker, 'DatePicker');\nexport default DatePicker;","map":{"version":3,"mappings":"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","names":["clsx","React","useCallback","useRef","useState","styles","InternalCalendar","normalizeLocale","getDateLabel","renderMonthAndYear","memoizedDate","KeyCode","fireNonCancelableEvent","Dropdown","InternalDateInput","getBaseProps","applyDisplayName","checkControlled","useFocusTracker","useForwardFocus","InternalButton","useBaseComponent","useUniqueId","useMergeRefs","FocusLock","useFocusVisible","LiveRegion","DatePicker","forwardRef","_a","ref","locale","startOfWeek","isDateEnabled","nextMonthAriaLabel","previousMonthAriaLabel","todayAriaLabel","_c","placeholder","_d","value","_e","readOnly","_f","disabled","onBlur","_g","autoFocus","onChange","onFocus","name","ariaLabel","ariaRequired","ariaLabelledby","ariaDescribedby","controlId","invalid","openCalendarAriaLabel","expandToViewport","rest","baseProps","isDropDownOpen","setIsDropDownOpen","normalizedLocale","focusVisible","internalInputRef","buttonRef","rootRef","dropdownId","calendarDescriptionId","mergedRef","__internalRootRef","viewportId","onDropdownCloseHandler","onButtonClickHandler","onWrapperKeyDownHandler","event","keyCode","escape","current","focus","onInputChangeHandler","detail","onInputBlurHandler","memoizedValue","baseDate","Date","trigger","className","iconName","onClick","length","formAction","root","handleMouseDown","preventDefault","onKeyDown","undefined","stretchWidth","stretchHeight","open","onDropdownClose","onMouseDown","scrollable","tabIndex","calendar","role","e","id"],"sources":["/Users/dcastro/node_modules/src/date-picker/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { Ref, useCallback, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport { DatePickerProps } from './interfaces';\nimport InternalCalendar from '../calendar/internal';\nimport { normalizeLocale } from '../calendar/utils/locales';\nimport { getDateLabel, renderMonthAndYear } from '../calendar/utils/intl';\nimport { memoizedDate } from '../calendar/utils/memoized-date';\nimport { InputProps } from '../input/interfaces';\nimport { KeyCode } from '../internal/keycode';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport Dropdown from '../internal/components/dropdown';\nimport InternalDateInput from '../date-input/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name.js';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker.js';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport FocusLock from '../internal/components/focus-lock';\nimport useFocusVisible from '../internal/hooks/focus-visible/index.js';\nimport LiveRegion from '../internal/components/live-region';\n\nexport { DatePickerProps };\n\nconst DatePicker = React.forwardRef(\n  (\n    {\n      locale = '',\n      startOfWeek,\n      isDateEnabled,\n      nextMonthAriaLabel,\n      previousMonthAriaLabel,\n      todayAriaLabel,\n      placeholder = '',\n      value = '',\n      readOnly = false,\n      disabled = false,\n      onBlur,\n      autoFocus = false,\n      onChange,\n      onFocus,\n      name,\n      ariaLabel,\n      ariaRequired,\n      ariaLabelledby,\n      ariaDescribedby,\n      controlId,\n      invalid,\n      openCalendarAriaLabel,\n      expandToViewport,\n      ...rest\n    }: DatePickerProps,\n    ref: Ref<DatePickerProps.Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('DatePicker');\n    checkControlled('DatePicker', 'value', value, 'onChange', onChange);\n\n    const baseProps = getBaseProps(rest);\n    const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n    const normalizedLocale = normalizeLocale('DatePicker', locale);\n    const focusVisible = useFocusVisible();\n\n    const internalInputRef = useRef<HTMLInputElement>(null);\n    const buttonRef = useRef<ButtonProps.Ref>(null);\n    useForwardFocus(ref, internalInputRef);\n\n    const rootRef = useRef<HTMLDivElement>(null);\n    const dropdownId = useUniqueId('calender');\n    const calendarDescriptionId = useUniqueId('calendar-description-');\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    useFocusTracker({ rootRef, onBlur, onFocus, viewportId: expandToViewport ? dropdownId : '' });\n\n    const onDropdownCloseHandler = useCallback(() => setIsDropDownOpen(false), [setIsDropDownOpen]);\n\n    const onButtonClickHandler = () => {\n      if (!isDropDownOpen) {\n        setIsDropDownOpen(true);\n      }\n    };\n\n    const onWrapperKeyDownHandler = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.keyCode === KeyCode.escape && isDropDownOpen) {\n        buttonRef.current?.focus();\n        setIsDropDownOpen(false);\n      }\n    };\n\n    const onInputChangeHandler: InputProps['onChange'] = event => {\n      fireNonCancelableEvent(onChange, { value: event.detail.value });\n    };\n\n    const onInputBlurHandler: InputProps['onBlur'] = () => {\n      if (!isDropDownOpen) {\n        setIsDropDownOpen(false);\n      }\n    };\n\n    const memoizedValue = memoizedDate('value', value);\n    const baseDate = memoizedValue || new Date();\n\n    const trigger = (\n      <div className={styles['date-picker-trigger']}>\n        <div className={styles['date-picker-input']}>\n          <InternalDateInput\n            name={name}\n            invalid={invalid}\n            controlId={controlId}\n            ariaLabelledby={ariaLabelledby}\n            ariaDescribedby={ariaDescribedby}\n            ariaLabel={ariaLabel}\n            ariaRequired={ariaRequired}\n            value={value}\n            disabled={disabled}\n            readOnly={readOnly}\n            onChange={onInputChangeHandler}\n            onBlur={onInputBlurHandler}\n            placeholder={placeholder}\n            ref={internalInputRef}\n            autoFocus={autoFocus}\n          />\n        </div>\n        <div>\n          <InternalButton\n            iconName=\"calendar\"\n            className={styles['open-calendar-button']}\n            onClick={onButtonClickHandler}\n            ref={buttonRef}\n            ariaLabel={\n              openCalendarAriaLabel &&\n              openCalendarAriaLabel(value.length === 10 ? getDateLabel(normalizedLocale, memoizedValue!) : null)\n            }\n            disabled={disabled || readOnly}\n            formAction=\"none\"\n          />\n        </div>\n      </div>\n    );\n\n    baseProps.className = clsx(baseProps.className, styles.root, styles['date-picker-container']);\n\n    const handleMouseDown = (event: React.MouseEvent) => {\n      // prevent currently focused element from losing it\n      event.preventDefault();\n    };\n\n    return (\n      <div {...baseProps} ref={mergedRef} onKeyDown={!disabled && !readOnly ? onWrapperKeyDownHandler : undefined}>\n        {disabled || readOnly ? (\n          trigger\n        ) : (\n          <Dropdown\n            stretchWidth={true}\n            stretchHeight={true}\n            open={isDropDownOpen}\n            onDropdownClose={onDropdownCloseHandler}\n            onMouseDown={handleMouseDown}\n            trigger={trigger}\n            expandToViewport={expandToViewport}\n            scrollable={false}\n            dropdownId={dropdownId}\n          >\n            {isDropDownOpen && (\n              <FocusLock autoFocus={true}>\n                <div\n                  {...focusVisible}\n                  tabIndex={0}\n                  className={styles.calendar}\n                  role=\"dialog\"\n                  aria-describedby={calendarDescriptionId}\n                  aria-label={ariaLabel}\n                  aria-labelledby={ariaLabelledby}\n                >\n                  <InternalCalendar\n                    value={value}\n                    onChange={e => {\n                      fireNonCancelableEvent(onChange, e.detail);\n                      buttonRef?.current?.focus();\n                      setIsDropDownOpen(false);\n                    }}\n                    locale={normalizedLocale}\n                    startOfWeek={startOfWeek}\n                    isDateEnabled={isDateEnabled}\n                    todayAriaLabel={todayAriaLabel}\n                    nextMonthAriaLabel={nextMonthAriaLabel}\n                    previousMonthAriaLabel={previousMonthAriaLabel}\n                  />\n                  <LiveRegion id={calendarDescriptionId}>{renderMonthAndYear(normalizedLocale, baseDate)}</LiveRegion>\n                </div>\n              </FocusLock>\n            )}\n          </Dropdown>\n        )}\n      </div>\n    );\n  }\n);\n\napplyDisplayName(DatePicker, 'DatePicker');\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}