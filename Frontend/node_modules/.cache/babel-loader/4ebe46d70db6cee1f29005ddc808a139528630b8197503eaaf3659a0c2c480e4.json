{"ast":null,"code":"var isGroup = function (option) {\n  return 'type' in option && option.type === 'parent';\n};\nvar popLastGroup = function (options) {\n  if (options.length) {\n    var lastOption = options[options.length - 1];\n    if (isGroup(lastOption)) {\n      options.pop();\n    }\n  }\n};\nexport var filterOptions = function (options, text) {\n  var filteredOptions = options.reduce(function (filteredIn, option) {\n    if (isGroup(option)) {\n      popLastGroup(filteredIn);\n      filteredIn.push(option);\n    } else if (matchSingleOption(option, text)) {\n      filteredIn.push(option);\n    }\n    return filteredIn;\n  }, []);\n  popLastGroup(filteredOptions);\n  return filteredOptions;\n};\nvar matchSingleOption = function (option, text) {\n  var searchableFields = ['value', 'label', 'description', 'labelTag'];\n  var searchableTagFields = ['tags', 'filteringTags'];\n  var searchText = text.toLowerCase();\n  var searchStrFieldsFn = function (attr) {\n    return matchString(option[attr], searchText);\n  };\n  var searchTagsFieldsFn = function (attr) {\n    var _a;\n    return (_a = option[attr]) === null || _a === void 0 ? void 0 : _a.some(function (value) {\n      return matchString(value, searchText);\n    });\n  };\n  return searchableFields.some(searchStrFieldsFn) || searchableTagFields.some(searchTagsFieldsFn);\n};\nvar matchString = function (value, searchText) {\n  return value && value.toLowerCase().indexOf(searchText) !== -1;\n};","map":{"version":3,"mappings":"AAOA,IAAMA,OAAO,GAAG,UAACC,MAAuB;EAAK,aAAM,IAAIA,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAK,QAAQ;AAA5C,CAA4C;AAEzF,IAAMC,YAAY,GAAG,UAACC,OAA0B;EAC9C,IAAIA,OAAO,CAACC,MAAM,EAAE;IAClB,IAAMC,UAAU,GAAGF,OAAO,CAACA,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;IAC9C,IAAIL,OAAO,CAACM,UAAU,CAAC,EAAE;MACvBF,OAAO,CAACG,GAAG,EAAE;;;AAGnB,CAAC;AAED,OAAO,IAAMC,aAAa,GAAG,UAACJ,OAA0B,EAAEK,IAAY;EACpE,IAAMC,eAAe,GAAGN,OAAO,CAACO,MAAM,CAAoB,UAACC,UAAU,EAAEX,MAAM;IAC3E,IAAID,OAAO,CAACC,MAAM,CAAC,EAAE;MACnBE,YAAY,CAACS,UAAU,CAAC;MACxBA,UAAU,CAACC,IAAI,CAACZ,MAAM,CAAC;KACxB,MAAM,IAAIa,iBAAiB,CAACb,MAAM,EAAEQ,IAAI,CAAC,EAAE;MAC1CG,UAAU,CAACC,IAAI,CAACZ,MAAM,CAAC;;IAEzB,OAAOW,UAAU;EACnB,CAAC,EAAE,EAAE,CAAC;EACNT,YAAY,CAACO,eAAe,CAAC;EAC7B,OAAOA,eAAe;AACxB,CAAC;AAED,IAAMI,iBAAiB,GAAG,UAACb,MAAuB,EAAEQ,IAAY;EAC9D,IAAMM,gBAAgB,GAAuB,CAAC,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,CAAC;EAC1F,IAAMC,mBAAmB,GAA0B,CAAC,MAAM,EAAE,eAAe,CAAC;EAE5E,IAAMC,UAAU,GAAGR,IAAI,CAACS,WAAW,EAAE;EAErC,IAAMC,iBAAiB,GAAG,UAACC,IAAsB;IAAK,kBAAW,CAACnB,MAAM,CAACmB,IAAI,CAAC,EAAEH,UAAU,CAAC;EAArC,CAAqC;EAC3F,IAAMI,kBAAkB,GAAG,UAACD,IAAyB;IAAA;IAAK,mBAAM,CAACA,IAAI,CAAC,0CAAEE,IAAI,CAAC,eAAK;MAAI,kBAAW,CAACC,KAAK,EAAEN,UAAU,CAAC;IAA9B,CAA8B,CAAC;EAAA;EAErH,OAAOF,gBAAgB,CAACO,IAAI,CAACH,iBAAiB,CAAC,IAAIH,mBAAmB,CAACM,IAAI,CAACD,kBAAkB,CAAC;AACjG,CAAC;AAED,IAAMG,WAAW,GAAG,UAACD,KAAyB,EAAEN,UAAkB;EAChE,OAAOM,KAAK,IAAIA,KAAK,CAACL,WAAW,EAAE,CAACO,OAAO,CAACR,UAAU,CAAC,KAAK,CAAC,CAAC;AAChE,CAAC","names":["isGroup","option","type","popLastGroup","options","length","lastOption","pop","filterOptions","text","filteredOptions","reduce","filteredIn","push","matchSingleOption","searchableFields","searchableTagFields","searchText","toLowerCase","searchStrFieldsFn","attr","searchTagsFieldsFn","some","value","matchString","indexOf"],"sources":["/Users/dcastro/node_modules/src/autosuggest/utils/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AutosuggestItem } from '../interfaces';\n\ntype SearchableFields = 'value' | 'label' | 'description' | 'labelTag';\ntype SearchableTagFields = 'tags' | 'filteringTags';\n\nconst isGroup = (option: AutosuggestItem) => 'type' in option && option.type === 'parent';\n\nconst popLastGroup = (options: AutosuggestItem[]) => {\n  if (options.length) {\n    const lastOption = options[options.length - 1];\n    if (isGroup(lastOption)) {\n      options.pop();\n    }\n  }\n};\n\nexport const filterOptions = (options: AutosuggestItem[], text: string): AutosuggestItem[] => {\n  const filteredOptions = options.reduce<AutosuggestItem[]>((filteredIn, option) => {\n    if (isGroup(option)) {\n      popLastGroup(filteredIn);\n      filteredIn.push(option);\n    } else if (matchSingleOption(option, text)) {\n      filteredIn.push(option);\n    }\n    return filteredIn;\n  }, []);\n  popLastGroup(filteredOptions);\n  return filteredOptions;\n};\n\nconst matchSingleOption = (option: AutosuggestItem, text: string): boolean => {\n  const searchableFields: SearchableFields[] = ['value', 'label', 'description', 'labelTag'];\n  const searchableTagFields: SearchableTagFields[] = ['tags', 'filteringTags'];\n\n  const searchText = text.toLowerCase();\n\n  const searchStrFieldsFn = (attr: SearchableFields) => matchString(option[attr], searchText);\n  const searchTagsFieldsFn = (attr: SearchableTagFields) => option[attr]?.some(value => matchString(value, searchText));\n\n  return searchableFields.some(searchStrFieldsFn) || searchableTagFields.some(searchTagsFieldsFn);\n};\n\nconst matchString = (value: string | undefined, searchText: string) => {\n  return value && value.toLowerCase().indexOf(searchText) !== -1;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}