{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nimport { TokenEditor } from './token-editor';\nimport { getExtendedOperator, getPropertyByKey } from './controller';\nimport FilteringToken from '../internal/components/filtering-token';\nexport var TokenButton = function (_a) {\n  var _b;\n  var token = _a.token,\n    _c = _a.operation,\n    operation = _c === void 0 ? 'and' : _c,\n    first = _a.first,\n    removeToken = _a.removeToken,\n    setToken = _a.setToken,\n    setOperation = _a.setOperation,\n    filteringOptions = _a.filteringOptions,\n    filteringProperties = _a.filteringProperties,\n    asyncProps = _a.asyncProps,\n    onLoadItems = _a.onLoadItems,\n    i18nStrings = _a.i18nStrings,\n    asyncProperties = _a.asyncProperties,\n    hideOperations = _a.hideOperations,\n    customGroupsText = _a.customGroupsText,\n    disabled = _a.disabled,\n    disableFreeTextFiltering = _a.disableFreeTextFiltering,\n    expandToViewport = _a.expandToViewport;\n  var valueFormatter = token.propertyKey && ((_b = getExtendedOperator(filteringProperties, token.propertyKey, token.operator)) === null || _b === void 0 ? void 0 : _b.format);\n  var property = token.propertyKey && getPropertyByKey(filteringProperties, token.propertyKey);\n  var propertyLabel = property && property.propertyLabel;\n  var tokenValue = valueFormatter ? valueFormatter(token.value) : token.value;\n  return React.createElement(FilteringToken, {\n    showOperation: !first && !hideOperations,\n    operation: operation,\n    andText: i18nStrings.operationAndText,\n    orText: i18nStrings.operationOrText,\n    dismissAriaLabel: i18nStrings.removeTokenButtonAriaLabel(token),\n    onChange: setOperation,\n    onDismiss: removeToken,\n    disabled: disabled\n  }, React.createElement(TokenEditor, {\n    setToken: setToken,\n    triggerComponent: React.createElement(\"span\", {\n      className: styles['token-trigger']\n    }, React.createElement(TokenTrigger, {\n      property: propertyLabel,\n      operator: token.operator,\n      value: tokenValue\n    })),\n    filteringOptions: filteringOptions,\n    filteringProperties: filteringProperties,\n    token: token,\n    asyncProps: asyncProps,\n    onLoadItems: onLoadItems,\n    i18nStrings: i18nStrings,\n    asyncProperties: asyncProperties,\n    customGroupsText: customGroupsText,\n    disableFreeTextFiltering: disableFreeTextFiltering,\n    expandToViewport: expandToViewport\n  }));\n};\nvar TokenTrigger = function (_a) {\n  var property = _a.property,\n    operator = _a.operator,\n    value = _a.value;\n  if (property) {\n    property += ' ';\n  }\n  var freeTextContainsToken = operator === ':' && !property;\n  var operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return React.createElement(React.Fragment, null, property, React.createElement(\"span\", {\n    className: styles['token-operator']\n  }, operatorText), value);\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAWzB,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,cAAc;AAEpE,OAAOC,cAAc,MAAM,wCAAwC;AAwBnE,OAAO,IAAMC,WAAW,GAAG,UAACC,EAkBf;;MAjBXC,KAAK;IACLC,iBAAiB;IAAjBC,SAAS,mBAAG,KAAK;IACjBC,KAAK;IACLC,WAAW;IACXC,QAAQ;IACRC,YAAY;IACZC,gBAAgB;IAChBC,mBAAmB;IACnBC,UAAU;IACVC,WAAW;IACXC,WAAW;IACXC,eAAe;IACfC,cAAc;IACdC,gBAAgB;IAChBC,QAAQ;IACRC,wBAAwB;IACxBC,gBAAgB;EAEhB,IAAMC,cAAc,GAClBlB,KAAK,CAACmB,WAAW,KAAI,yBAAmB,CAACX,mBAAmB,EAAER,KAAK,CAACmB,WAAW,EAAEnB,KAAK,CAACoB,QAAQ,CAAC,0CAAEC,MAAM;EAC1G,IAAMC,QAAQ,GAAGtB,KAAK,CAACmB,WAAW,IAAIvB,gBAAgB,CAACY,mBAAmB,EAAER,KAAK,CAACmB,WAAW,CAAC;EAC9F,IAAMI,aAAa,GAAGD,QAAQ,IAAIA,QAAQ,CAACC,aAAa;EACxD,IAAMC,UAAU,GAAGN,cAAc,GAAGA,cAAc,CAAClB,KAAK,CAACyB,KAAK,CAAC,GAAGzB,KAAK,CAACyB,KAAK;EAC7E,OACEjC,oBAACK,cAAc;IACb6B,aAAa,EAAE,CAACvB,KAAK,IAAI,CAACU,cAAc;IACxCX,SAAS,EAAEA,SAAS;IACpByB,OAAO,EAAEhB,WAAW,CAACiB,gBAAgB;IACrCC,MAAM,EAAElB,WAAW,CAACmB,eAAe;IACnCC,gBAAgB,EAAEpB,WAAW,CAACqB,0BAA0B,CAAChC,KAAK,CAAC;IAC/DiC,QAAQ,EAAE3B,YAAY;IACtB4B,SAAS,EAAE9B,WAAW;IACtBW,QAAQ,EAAEA;EAAQ,GAElBvB,oBAACE,WAAW;IACVW,QAAQ,EAAEA,QAAQ;IAClB8B,gBAAgB,EACd3C;MAAM4C,SAAS,EAAE3C,MAAM,CAAC,eAAe;IAAC,GACtCD,oBAAC6C,YAAY;MAACf,QAAQ,EAAEC,aAAa;MAAEH,QAAQ,EAAEpB,KAAK,CAACoB,QAAQ;MAAEK,KAAK,EAAED;IAAU,EAAI,CACjF;IAETjB,gBAAgB,EAAEA,gBAAgB;IAClCC,mBAAmB,EAAEA,mBAAmB;IACxCR,KAAK,EAAEA,KAAK;IACZS,UAAU,EAAEA,UAAU;IACtBC,WAAW,EAAEA,WAAW;IACxBC,WAAW,EAAEA,WAAW;IACxBC,eAAe,EAAEA,eAAe;IAChCE,gBAAgB,EAAEA,gBAAgB;IAClCE,wBAAwB,EAAEA,wBAAwB;IAClDC,gBAAgB,EAAEA;EAAgB,EAClC,CACa;AAErB,CAAC;AAED,IAAMoB,YAAY,GAAG,UAACtC,EAQrB;MAPCuB,QAAQ;IACRF,QAAQ;IACRK,KAAK;EAML,IAAIH,QAAQ,EAAE;IACZA,QAAQ,IAAI,GAAG;;EAEjB,IAAMgB,qBAAqB,GAAGlB,QAAQ,KAAK,GAAG,IAAI,CAACE,QAAQ;EAC3D,IAAMiB,YAAY,GAAGD,qBAAqB,GAAG,EAAE,GAAGlB,QAAQ,GAAG,GAAG;EAChE,OACE5B,0CACG8B,QAAQ,EACT9B;IAAM4C,SAAS,EAAE3C,MAAM,CAAC,gBAAgB;EAAC,GAAG8C,YAAY,CAAQ,EAC/Dd,KAAK,CACL;AAEP,CAAC","names":["React","styles","TokenEditor","getExtendedOperator","getPropertyByKey","FilteringToken","TokenButton","_a","token","_c","operation","first","removeToken","setToken","setOperation","filteringOptions","filteringProperties","asyncProps","onLoadItems","i18nStrings","asyncProperties","hideOperations","customGroupsText","disabled","disableFreeTextFiltering","expandToViewport","valueFormatter","propertyKey","operator","format","property","propertyLabel","tokenValue","value","showOperation","andText","operationAndText","orText","operationOrText","dismissAriaLabel","removeTokenButtonAriaLabel","onChange","onDismiss","triggerComponent","className","TokenTrigger","freeTextContainsToken","operatorText"],"sources":["/Users/dcastro/node_modules/src/property-filter/token.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport {\n  ComparisonOperator,\n  FilteringOption,\n  FilteringProperty,\n  GroupText,\n  I18nStrings,\n  JoinOperation,\n  LoadItemsDetail,\n  Token,\n} from './interfaces';\nimport styles from './styles.css.js';\nimport { TokenEditor } from './token-editor';\nimport { getExtendedOperator, getPropertyByKey } from './controller';\n\nimport FilteringToken from '../internal/components/filtering-token';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\n\ninterface TokenProps {\n  asyncProperties?: boolean;\n  asyncProps: DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disabled?: boolean;\n  disableFreeTextFiltering?: boolean;\n  expandToViewport?: boolean;\n  filteringOptions: readonly FilteringOption[];\n  filteringProperties: readonly FilteringProperty[];\n  first?: boolean;\n  hideOperations?: boolean;\n  i18nStrings: I18nStrings;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  operation: JoinOperation;\n  removeToken: () => void;\n  setOperation: (newOperation: JoinOperation) => void;\n  setToken: (newToken: Token) => void;\n  token: Token;\n}\n\nexport const TokenButton = ({\n  token,\n  operation = 'and',\n  first,\n  removeToken,\n  setToken,\n  setOperation,\n  filteringOptions,\n  filteringProperties,\n  asyncProps,\n  onLoadItems,\n  i18nStrings,\n  asyncProperties,\n  hideOperations,\n  customGroupsText,\n  disabled,\n  disableFreeTextFiltering,\n  expandToViewport,\n}: TokenProps) => {\n  const valueFormatter =\n    token.propertyKey && getExtendedOperator(filteringProperties, token.propertyKey, token.operator)?.format;\n  const property = token.propertyKey && getPropertyByKey(filteringProperties, token.propertyKey);\n  const propertyLabel = property && property.propertyLabel;\n  const tokenValue = valueFormatter ? valueFormatter(token.value) : token.value;\n  return (\n    <FilteringToken\n      showOperation={!first && !hideOperations}\n      operation={operation}\n      andText={i18nStrings.operationAndText}\n      orText={i18nStrings.operationOrText}\n      dismissAriaLabel={i18nStrings.removeTokenButtonAriaLabel(token)}\n      onChange={setOperation}\n      onDismiss={removeToken}\n      disabled={disabled}\n    >\n      <TokenEditor\n        setToken={setToken}\n        triggerComponent={\n          <span className={styles['token-trigger']}>\n            <TokenTrigger property={propertyLabel} operator={token.operator} value={tokenValue} />\n          </span>\n        }\n        filteringOptions={filteringOptions}\n        filteringProperties={filteringProperties}\n        token={token}\n        asyncProps={asyncProps}\n        onLoadItems={onLoadItems}\n        i18nStrings={i18nStrings}\n        asyncProperties={asyncProperties}\n        customGroupsText={customGroupsText}\n        disableFreeTextFiltering={disableFreeTextFiltering}\n        expandToViewport={expandToViewport}\n      />\n    </FilteringToken>\n  );\n};\n\nconst TokenTrigger = ({\n  property,\n  operator,\n  value,\n}: {\n  property?: string;\n  operator?: ComparisonOperator;\n  value: string;\n}) => {\n  if (property) {\n    property += ' ';\n  }\n  const freeTextContainsToken = operator === ':' && !property;\n  const operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return (\n    <>\n      {property}\n      <span className={styles['token-operator']}>{operatorText}</span>\n      {value}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}