{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalAttributeEditor from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar AttributeEditor = React.forwardRef(function (_a, ref) {\n  var _b = _a.items,\n    items = _b === void 0 ? [] : _b,\n    _c = _a.isItemRemovable,\n    isItemRemovable = _c === void 0 ? function () {\n      return true;\n    } : _c,\n    props = __rest(_a, [\"items\", \"isItemRemovable\"]);\n  var baseComponentProps = useBaseComponent('AttributeEditor');\n  return React.createElement(InternalAttributeEditor, __assign({\n    items: items,\n    isItemRemovable: isItemRemovable\n  }, props, baseComponentProps, {\n    ref: ref\n  }));\n});\napplyDisplayName(AttributeEditor, 'AttributeEditor');\nexport default AttributeEditor;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,uBAAuB,MAAM,YAAY;AAChD,OAAOC,gBAAgB,MAAM,sCAAsC;AAEnE,IAAMC,eAAe,GAAGJ,KAAK,CAACK,UAAU,CACtC,UACEC,EAA+E,EAC/EC,GAAwC;EADtC,iBAAU;IAAVC,KAAK,mBAAG,EAAE;IAAEC,uBAA4B;IAA5BC,eAAe,mBAAG;MAAM,WAAI;IAAJ,CAAI;IAAKC,KAAK,cAApD,4BAAsD,CAAF;EAGpD,IAAMC,kBAAkB,GAAGT,gBAAgB,CAAC,iBAAiB,CAAC;EAC9D,OACEH,oBAACE,uBAAuB;IACtBM,KAAK,EAAEA,KAAK;IACZE,eAAe,EAAEA;EAAe,GAC5BC,KAAK,EACLC,kBAAkB;IACtBL,GAAG,EAAEA;EAAG,GACR;AAEN,CAAC,CAC+B;AAElCN,gBAAgB,CAACG,eAAe,EAAE,iBAAiB,CAAC;AAGpD,eAAeA,eAAe","names":["React","applyDisplayName","InternalAttributeEditor","useBaseComponent","AttributeEditor","forwardRef","_a","ref","items","_c","isItemRemovable","props","baseComponentProps"],"sources":["/Users/dcastro/node_modules/src/attribute-editor/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { AttributeEditorForwardRefType, AttributeEditorProps } from './interfaces';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalAttributeEditor from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nconst AttributeEditor = React.forwardRef(\n  <T,>(\n    { items = [], isItemRemovable = () => true, ...props }: AttributeEditorProps<T>,\n    ref: React.Ref<AttributeEditorProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('AttributeEditor');\n    return (\n      <InternalAttributeEditor\n        items={items}\n        isItemRemovable={isItemRemovable}\n        {...props}\n        {...baseComponentProps}\n        ref={ref}\n      />\n    );\n  }\n) as AttributeEditorForwardRefType;\n\napplyDisplayName(AttributeEditor, 'AttributeEditor');\n\nexport { AttributeEditorProps };\nexport default AttributeEditor;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}