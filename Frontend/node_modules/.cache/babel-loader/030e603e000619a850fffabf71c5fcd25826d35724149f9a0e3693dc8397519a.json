{"ast":null,"code":"import { __spreadArray } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport InternalBox from '../../box/internal';\nimport InternalFormField from '../../form-field/internal';\nimport InternalInput from '../../input/internal';\nimport InternalRadioGroup from '../../radio-group/internal';\nimport InternalSelect from '../../select/internal';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport styles from './styles.css.js';\nvar dayUnits = ['day', 'week', 'month', 'year'];\nvar units = __spreadArray(['second', 'minute', 'hour'], dayUnits, true);\nvar CUSTOM_OPTION_SELECT_KEY = 'awsui-internal-custom-duration-key';\nexport default forwardRef(RelativeRangePicker);\nfunction RelativeRangePicker(_a, ref) {\n  var _b, _c;\n  var _d;\n  var dateOnly = _a.dateOnly,\n    _e = _a.options,\n    clientOptions = _e === void 0 ? [] : _e,\n    initialRange = _a.initialSelection,\n    onChangeRangeSize = _a.onChange,\n    i18nStrings = _a.i18nStrings,\n    isSingleGrid = _a.isSingleGrid;\n  var radioOptions = clientOptions.map(function (option) {\n    return {\n      value: option.key,\n      label: i18nStrings.formatRelativeRange(option)\n    };\n  });\n  radioOptions.push({\n    value: CUSTOM_OPTION_SELECT_KEY,\n    label: i18nStrings.customRelativeRangeOptionLabel,\n    description: i18nStrings.customRelativeRangeOptionDescription\n  });\n  var _f = useState(function () {\n      var _a;\n      if (initialRange && !initialRange.key) {\n        return CUSTOM_OPTION_SELECT_KEY;\n      }\n      return (_a = initialRange === null || initialRange === void 0 ? void 0 : initialRange.key) !== null && _a !== void 0 ? _a : null;\n    }),\n    selectedRadio = _f[0],\n    setSelectedRadio = _f[1];\n  var _g = useState(function () {\n      if (initialRange) {\n        return initialRange.amount;\n      }\n      // NaN represents an empty duration\n      return NaN;\n    }),\n    customDuration = _g[0],\n    setCustomDuration = _g[1];\n  var initialCustomTimeUnit = dateOnly ? 'day' : 'minute';\n  var _h = useState((_d = initialRange === null || initialRange === void 0 ? void 0 : initialRange.unit) !== null && _d !== void 0 ? _d : initialCustomTimeUnit),\n    customUnitOfTime = _h[0],\n    setCustomUnitOfTime = _h[1];\n  var showRadioControl = clientOptions.length > 0;\n  var showCustomControls = clientOptions.length === 0 || selectedRadio === CUSTOM_OPTION_SELECT_KEY;\n  var elementRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function () {\n        var _a;\n        if (elementRef.current) {\n          (_a = elementRef.current.querySelector('input')) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n      }\n    };\n  });\n  return React.createElement(\"div\", {\n    ref: elementRef\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"vertical\"\n  }, showRadioControl && React.createElement(InternalFormField, {\n    label: i18nStrings.relativeRangeSelectionHeading\n  }, React.createElement(InternalRadioGroup, {\n    className: styles['relative-range-radio-group'],\n    onChange: function (_a) {\n      var detail = _a.detail;\n      setSelectedRadio(detail.value);\n      if (detail.value === CUSTOM_OPTION_SELECT_KEY) {\n        setCustomDuration(NaN);\n        setCustomUnitOfTime(initialCustomTimeUnit);\n        onChangeRangeSize({\n          amount: NaN,\n          unit: initialCustomTimeUnit,\n          type: 'relative'\n        });\n      } else {\n        var option = clientOptions.filter(function (o) {\n          return o.key === detail.value;\n        })[0];\n        onChangeRangeSize(option);\n      }\n    },\n    value: selectedRadio,\n    items: radioOptions\n  })), showCustomControls && React.createElement(InternalSpaceBetween, {\n    direction: \"vertical\",\n    size: \"xs\"\n  }, !showRadioControl && React.createElement(InternalBox, {\n    fontSize: \"body-m\",\n    color: \"text-body-secondary\"\n  }, i18nStrings.customRelativeRangeOptionDescription), React.createElement(\"div\", {\n    className: clsx(styles['custom-range'], (_b = {}, _b[styles['custom-range--no-padding']] = !showRadioControl, _b))\n  }, React.createElement(\"div\", {\n    className: clsx(styles['custom-range-form-controls'], (_c = {}, _c[styles.vertical] = isSingleGrid, _c))\n  }, React.createElement(\"div\", {\n    className: styles['custom-range-duration']\n  }, React.createElement(InternalFormField, {\n    label: i18nStrings.customRelativeRangeDurationLabel\n  }, React.createElement(InternalInput, {\n    type: \"number\",\n    className: styles['custom-range-duration-input'],\n    value: isNaN(customDuration) || customDuration === 0 ? '' : customDuration === null || customDuration === void 0 ? void 0 : customDuration.toString(),\n    onChange: function (e) {\n      var amount = Number(e.detail.value);\n      setCustomDuration(amount);\n      onChangeRangeSize({\n        amount: amount,\n        unit: customUnitOfTime,\n        type: 'relative'\n      });\n    },\n    placeholder: i18nStrings.customRelativeRangeDurationPlaceholder\n  }))), React.createElement(\"div\", {\n    className: styles['custom-range-unit']\n  }, React.createElement(InternalFormField, {\n    label: i18nStrings.customRelativeRangeUnitLabel\n  }, React.createElement(InternalSelect, {\n    className: styles['custom-range-unit-select'],\n    selectedOption: {\n      value: customUnitOfTime,\n      label: i18nStrings.formatUnit(customUnitOfTime, customDuration)\n    },\n    onChange: function (e) {\n      var unit = e.detail.selectedOption.value;\n      setCustomUnitOfTime(unit);\n      onChangeRangeSize({\n        amount: customDuration,\n        unit: unit,\n        type: 'relative'\n      });\n    },\n    options: (dateOnly ? dayUnits : units).map(function (unit) {\n      return {\n        value: unit,\n        label: i18nStrings.formatUnit(unit, customDuration)\n      };\n    }),\n    renderHighlightedAriaLive: function (option) {\n      return option.label || option.value || '';\n    }\n  }))))))));\n}","map":{"version":3,"mappings":"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","names":["clsx","React","forwardRef","useImperativeHandle","useRef","useState","InternalBox","InternalFormField","InternalInput","InternalRadioGroup","InternalSelect","InternalSpaceBetween","styles","dayUnits","units","CUSTOM_OPTION_SELECT_KEY","RelativeRangePicker","_a","ref","dateOnly","_e","clientOptions","initialRange","onChangeRangeSize","i18nStrings","isSingleGrid","radioOptions","map","value","option","key","label","formatRelativeRange","push","customRelativeRangeOptionLabel","description","customRelativeRangeOptionDescription","selectedRadio","setSelectedRadio","amount","NaN","customDuration","setCustomDuration","initialCustomTimeUnit","unit","customUnitOfTime","setCustomUnitOfTime","showRadioControl","length","showCustomControls","elementRef","focus","current","querySelector","size","direction","relativeRangeSelectionHeading","className","onChange","detail","type","filter","items","fontSize","color","_b","_c","vertical","customRelativeRangeDurationLabel","isNaN","toString","Number","e","placeholder","customRelativeRangeDurationPlaceholder","customRelativeRangeUnitLabel","selectedOption","formatUnit","options","renderHighlightedAriaLive"],"sources":["/Users/dcastro/node_modules/src/date-range-picker/relative-range/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { DateRangePickerProps, Focusable } from '../interfaces';\nimport InternalBox from '../../box/internal';\nimport InternalFormField from '../../form-field/internal';\nimport InternalInput from '../../input/internal';\nimport { RadioGroupProps } from '../../radio-group/interfaces';\nimport InternalRadioGroup from '../../radio-group/internal';\nimport InternalSelect from '../../select/internal';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport styles from './styles.css.js';\n\nexport interface RelativeRangePickerProps {\n  dateOnly: boolean;\n  options: ReadonlyArray<DateRangePickerProps.RelativeOption>;\n  initialSelection: DateRangePickerProps.RelativeValue | null;\n  onChange: (range: DateRangePickerProps.RelativeValue) => void;\n  i18nStrings: DateRangePickerProps.I18nStrings;\n  isSingleGrid: boolean;\n}\n\ninterface UnitSelectOption {\n  value: DateRangePickerProps.TimeUnit;\n  label: string;\n}\n\nconst dayUnits: ReadonlyArray<DateRangePickerProps.TimeUnit> = ['day', 'week', 'month', 'year'];\nconst units: ReadonlyArray<DateRangePickerProps.TimeUnit> = ['second', 'minute', 'hour', ...dayUnits];\n\nconst CUSTOM_OPTION_SELECT_KEY = 'awsui-internal-custom-duration-key';\n\nexport default forwardRef(RelativeRangePicker);\n\nfunction RelativeRangePicker(\n  {\n    dateOnly,\n    options: clientOptions = [],\n    initialSelection: initialRange,\n    onChange: onChangeRangeSize,\n    i18nStrings,\n    isSingleGrid,\n  }: RelativeRangePickerProps,\n  ref: React.Ref<Focusable>\n) {\n  const radioOptions: RadioGroupProps.RadioButtonDefinition[] = clientOptions.map(option => ({\n    value: option.key,\n    label: i18nStrings.formatRelativeRange(option),\n  }));\n  radioOptions.push({\n    value: CUSTOM_OPTION_SELECT_KEY,\n    label: i18nStrings.customRelativeRangeOptionLabel,\n    description: i18nStrings.customRelativeRangeOptionDescription,\n  });\n\n  const [selectedRadio, setSelectedRadio] = useState(() => {\n    if (initialRange && !initialRange.key) {\n      return CUSTOM_OPTION_SELECT_KEY;\n    }\n    return initialRange?.key ?? null;\n  });\n\n  const [customDuration, setCustomDuration] = useState(() => {\n    if (initialRange) {\n      return initialRange.amount;\n    }\n    // NaN represents an empty duration\n    return NaN;\n  });\n\n  const initialCustomTimeUnit = dateOnly ? 'day' : 'minute';\n  const [customUnitOfTime, setCustomUnitOfTime] = useState<DateRangePickerProps.TimeUnit>(\n    initialRange?.unit ?? initialCustomTimeUnit\n  );\n\n  const showRadioControl = clientOptions.length > 0;\n  const showCustomControls = clientOptions.length === 0 || selectedRadio === CUSTOM_OPTION_SELECT_KEY;\n\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useImperativeHandle(ref, () => ({\n    focus() {\n      if (elementRef.current) {\n        elementRef.current.querySelector('input')?.focus();\n      }\n    },\n  }));\n\n  return (\n    <div ref={elementRef}>\n      <InternalSpaceBetween size=\"xs\" direction=\"vertical\">\n        {showRadioControl && (\n          <InternalFormField label={i18nStrings.relativeRangeSelectionHeading}>\n            <InternalRadioGroup\n              className={styles['relative-range-radio-group']}\n              onChange={({ detail }) => {\n                setSelectedRadio(detail.value);\n\n                if (detail.value === CUSTOM_OPTION_SELECT_KEY) {\n                  setCustomDuration(NaN);\n                  setCustomUnitOfTime(initialCustomTimeUnit);\n                  onChangeRangeSize({\n                    amount: NaN,\n                    unit: initialCustomTimeUnit,\n                    type: 'relative',\n                  });\n                } else {\n                  const option = clientOptions.filter(o => o.key === detail.value)[0];\n                  onChangeRangeSize(option);\n                }\n              }}\n              value={selectedRadio}\n              items={radioOptions}\n            />\n          </InternalFormField>\n        )}\n\n        {showCustomControls && (\n          <InternalSpaceBetween direction=\"vertical\" size=\"xs\">\n            {!showRadioControl && (\n              <InternalBox fontSize=\"body-m\" color=\"text-body-secondary\">\n                {i18nStrings.customRelativeRangeOptionDescription}\n              </InternalBox>\n            )}\n\n            <div\n              className={clsx(styles['custom-range'], {\n                [styles['custom-range--no-padding']]: !showRadioControl,\n              })}\n            >\n              <div\n                className={clsx(styles['custom-range-form-controls'], {\n                  [styles.vertical]: isSingleGrid,\n                })}\n              >\n                <div className={styles['custom-range-duration']}>\n                  <InternalFormField label={i18nStrings.customRelativeRangeDurationLabel}>\n                    <InternalInput\n                      type=\"number\"\n                      className={styles['custom-range-duration-input']}\n                      value={isNaN(customDuration) || customDuration === 0 ? '' : customDuration?.toString()}\n                      onChange={e => {\n                        const amount = Number(e.detail.value);\n\n                        setCustomDuration(amount);\n                        onChangeRangeSize({ amount, unit: customUnitOfTime, type: 'relative' });\n                      }}\n                      placeholder={i18nStrings.customRelativeRangeDurationPlaceholder}\n                    />\n                  </InternalFormField>\n                </div>\n\n                <div className={styles['custom-range-unit']}>\n                  <InternalFormField label={i18nStrings.customRelativeRangeUnitLabel}>\n                    <InternalSelect\n                      className={styles['custom-range-unit-select']}\n                      selectedOption={\n                        {\n                          value: customUnitOfTime,\n                          label: i18nStrings.formatUnit(customUnitOfTime, customDuration),\n                        } as UnitSelectOption\n                      }\n                      onChange={e => {\n                        const { value: unit } = e.detail.selectedOption as UnitSelectOption;\n\n                        setCustomUnitOfTime(unit);\n                        onChangeRangeSize({ amount: customDuration, unit, type: 'relative' });\n                      }}\n                      options={(dateOnly ? dayUnits : units).map(unit => ({\n                        value: unit,\n                        label: i18nStrings.formatUnit(unit, customDuration),\n                      }))}\n                      renderHighlightedAriaLive={option => option.label || option.value || ''}\n                    />\n                  </InternalFormField>\n                </div>\n              </div>\n            </div>\n          </InternalSpaceBetween>\n        )}\n      </InternalSpaceBetween>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}