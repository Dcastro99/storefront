{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport { getDaysInMonth } from 'date-fns';\nimport React from 'react';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { displayToIso, isoToDisplay, parseDate } from '../internal/utils/date-time';\nimport MaskedInput from '../internal/components/masked-input';\nimport styles from './styles.css.js';\nfunction daysMax(value) {\n  // force to first day in month, as new Date('2018-02-30') -> March 2nd 2018\n  var baseDate = displayToIso(value).substring(0, 7);\n  return getDaysInMonth(parseDate(baseDate));\n}\nvar maskArgs = {\n  separator: '/',\n  inputSeparators: ['-', '.', ' '],\n  segments: [{\n    min: 0,\n    max: 9999,\n    \"default\": 2000,\n    length: 4\n  }, {\n    min: 1,\n    max: 12,\n    length: 2\n  }, {\n    min: 1,\n    max: daysMax,\n    length: 2\n  }]\n};\nvar InternalDateInput = React.forwardRef(function (_a, ref) {\n  var value = _a.value,\n    onChange = _a.onChange,\n    _b = _a.__internalRootRef,\n    __internalRootRef = _b === void 0 ? null : _b,\n    props = __rest(_a, [\"value\", \"onChange\", \"__internalRootRef\"]);\n  return React.createElement(MaskedInput, __assign({\n    ref: ref\n  }, props, {\n    value: isoToDisplay(value || ''),\n    onChange: function (event) {\n      return fireNonCancelableEvent(onChange, {\n        value: displayToIso(event.detail.value)\n      });\n    },\n    className: clsx(styles.root, props.className),\n    mask: maskArgs,\n    autofix: true,\n    autoComplete: false,\n    disableAutocompleteOnBlur: false,\n    disableBrowserAutocorrect: true,\n    __internalRootRef: __internalRootRef\n  }));\n});\nexport default InternalDateInput;","map":{"version":3,"mappings":"AAAA;AACA;;AAEA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAASC,cAAc,QAAQ,UAAU;AACzC,OAAOC,KAAc,MAAM,OAAO;AAClC,SAASC,sBAAsB,QAAQ,oBAAoB;AAC3D,SAASC,YAAY,EAAEC,YAAY,EAAEC,SAAS,QAAQ,6BAA6B;AAEnF,OAAOC,WAAW,MAAM,qCAAqC;AAG7D,OAAOC,MAAM,MAAM,iBAAiB;AAMpC,SAASC,OAAO,CAACC,KAAa;EAC5B;EACA,IAAMC,QAAQ,GAAGP,YAAY,CAACM,KAAK,CAAC,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EACpD,OAAOX,cAAc,CAACK,SAAS,CAACK,QAAQ,CAAC,CAAC;AAC5C;AAEA,IAAME,QAAQ,GAAa;EACzBC,SAAS,EAAE,GAAG;EACdC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCC,QAAQ,EAAE,CACR;IAAEC,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,IAAI;IAAE,SAAO,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAC,CAAE,EAC/C;IAAEF,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAC,CAAE,EAC9B;IAAEF,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAET,OAAO;IAAEU,MAAM,EAAE;EAAC,CAAE;CAEtC;AAED,IAAMC,iBAAiB,GAAGlB,KAAK,CAACmB,UAAU,CACxC,UAACC,EAA+E,EAAEC,GAA0B;EAAzG,SAAK;IAAEC,QAAQ;IAAEC,yBAAwB;IAAxBC,iBAAiB,mBAAG,IAAI;IAAKC,KAAK,cAArD,0CAAuD,CAAF;EACpD,OACEzB,oBAACK,WAAW;IACVgB,GAAG,EAAEA;EAAG,GACJI,KAAK;IACTjB,KAAK,EAAEL,YAAY,CAACK,KAAK,IAAI,EAAE,CAAC;IAChCc,QAAQ,EAAE,eAAK;MAAI,6BAAsB,CAACA,QAAQ,EAAE;QAAEd,KAAK,EAAEN,YAAY,CAACwB,KAAK,CAACC,MAAM,CAACnB,KAAK;MAAC,CAAE,CAAC;IAA7E,CAA6E;IAChGoB,SAAS,EAAE9B,IAAI,CAACQ,MAAM,CAACuB,IAAI,EAAEJ,KAAK,CAACG,SAAS,CAAC;IAC7CE,IAAI,EAAEnB,QAAQ;IACdoB,OAAO,EAAE,IAAI;IACbC,YAAY,EAAE,KAAK;IACnBC,yBAAyB,EAAE,KAAK;IAChCC,yBAAyB,EAAE,IAAI;IAC/BV,iBAAiB,EAAEA;EAAiB,GACpC;AAEN,CAAC,CACF;AAED,eAAeN,iBAAiB","names":["clsx","getDaysInMonth","React","fireNonCancelableEvent","displayToIso","isoToDisplay","parseDate","MaskedInput","styles","daysMax","value","baseDate","substring","maskArgs","separator","inputSeparators","segments","min","max","length","InternalDateInput","forwardRef","_a","ref","onChange","_b","__internalRootRef","props","event","detail","className","root","mask","autofix","autoComplete","disableAutocompleteOnBlur","disableBrowserAutocorrect"],"sources":["/Users/dcastro/node_modules/src/date-input/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport { getDaysInMonth } from 'date-fns';\nimport React, { Ref } from 'react';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { displayToIso, isoToDisplay, parseDate } from '../internal/utils/date-time';\n\nimport MaskedInput from '../internal/components/masked-input';\nimport { MaskArgs } from '../internal/components/masked-input/utils/mask-format';\n\nimport styles from './styles.css.js';\nimport { DateInputProps } from './interfaces';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\ntype InternalDateInputProps = DateInputProps & InternalBaseComponentProps;\n\nfunction daysMax(value: string): number {\n  // force to first day in month, as new Date('2018-02-30') -> March 2nd 2018\n  const baseDate = displayToIso(value).substring(0, 7);\n  return getDaysInMonth(parseDate(baseDate));\n}\n\nconst maskArgs: MaskArgs = {\n  separator: '/',\n  inputSeparators: ['-', '.', ' '],\n  segments: [\n    { min: 0, max: 9999, default: 2000, length: 4 },\n    { min: 1, max: 12, length: 2 },\n    { min: 1, max: daysMax, length: 2 },\n  ],\n};\n\nconst InternalDateInput = React.forwardRef(\n  ({ value, onChange, __internalRootRef = null, ...props }: InternalDateInputProps, ref: Ref<HTMLInputElement>) => {\n    return (\n      <MaskedInput\n        ref={ref}\n        {...props}\n        value={isoToDisplay(value || '')}\n        onChange={event => fireNonCancelableEvent(onChange, { value: displayToIso(event.detail.value) })}\n        className={clsx(styles.root, props.className)}\n        mask={maskArgs}\n        autofix={true}\n        autoComplete={false}\n        disableAutocompleteOnBlur={false}\n        disableBrowserAutocorrect={true}\n        __internalRootRef={__internalRootRef}\n      />\n    );\n  }\n);\n\nexport default InternalDateInput;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}