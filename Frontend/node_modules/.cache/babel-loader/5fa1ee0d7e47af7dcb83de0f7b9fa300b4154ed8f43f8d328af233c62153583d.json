{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport InternalIcon from '../icon/internal';\nimport styles from './styles.css.js';\nexport var TabButton = React.forwardRef(function (_a, ref) {\n  var _b;\n  var active = _a.active,\n    disabled = _a.disabled,\n    iconName = _a.iconName,\n    onClick = _a.onClick,\n    onFocus = _a.onFocus,\n    onBlur = _a.onBlur,\n    tabIndex = _a.tabIndex,\n    ariaHidden = _a.ariaHidden,\n    ariaLabel = _a.ariaLabel,\n    paneId = _a.paneId,\n    isRefresh = _a.isRefresh,\n    text = _a.text,\n    className = _a.className;\n  var focusVisible = useFocusVisible();\n  return React.createElement(\"button\", __assign({\n    className: clsx([styles['tab-button'], className], (_b = {}, _b[styles['tab-button--active']] = active, _b[styles['tab-button--disabled']] = disabled, _b[styles['tab-button--refresh']] = isRefresh, _b)),\n    onClick: onClick,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    disabled: disabled,\n    ref: ref,\n    tabIndex: tabIndex,\n    role: \"tab\",\n    \"aria-selected\": active,\n    \"aria-controls\": paneId,\n    \"aria-hidden\": ariaHidden,\n    \"aria-label\": ariaLabel\n  }, focusVisible), React.createElement(InternalIcon, {\n    name: iconName\n  }), \" \", text);\n});","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,eAAe,MAAM,iCAAiC;AAE7D,OAAOC,YAAY,MAAM,kBAAkB;AAE3C,OAAOC,MAAM,MAAM,iBAAiB;AAoBpC,OAAO,IAAMC,SAAS,GAAGL,KAAK,CAACM,UAAU,CACvC,UACEC,EAciB,EACjBC,GAAiC;;MAd/BC,MAAM;IACNC,QAAQ;IACRC,QAAQ;IACRC,OAAO;IACPC,OAAO;IACPC,MAAM;IACNC,QAAQ;IACRC,UAAU;IACVC,SAAS;IACTC,MAAM;IACNC,SAAS;IACTC,IAAI;IACJC,SAAS;EAIX,IAAMC,YAAY,GAAGpB,eAAe,EAAE;EACtC,OACEF;IACEqB,SAAS,EAAEpB,IAAI,CAAC,CAACG,MAAM,CAAC,YAAY,CAAC,EAAEiB,SAAS,CAAC,YAC/CE,GAACnB,MAAM,CAAC,oBAAoB,CAAC,IAAGK,MAAM,EACtCc,GAACnB,MAAM,CAAC,sBAAsB,CAAC,IAAGM,QAAQ,EAC1Ca,GAACnB,MAAM,CAAC,qBAAqB,CAAC,IAAGe,SAAS,MAC1C;IACFP,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,MAAM,EAAEA,MAAM;IACdJ,QAAQ,EAAEA,QAAQ;IAClBF,GAAG,EAAEA,GAAG;IACRO,QAAQ,EAAEA,QAAQ;IAClBS,IAAI,EAAC,KAAK;IAAA,iBACKf,MAAM;IAAA,iBACNS,MAAM;IAAA,eACRF,UAAU;IAAA,cACXC;EAAS,GACjBK,YAAY,GAEhBtB,oBAACG,YAAY;IAACsB,IAAI,EAAEd;EAAQ,EAAI,OAAES,IAAI,CAC/B;AAEb,CAAC,CACF","names":["React","clsx","useFocusVisible","InternalIcon","styles","TabButton","forwardRef","_a","ref","active","disabled","iconName","onClick","onFocus","onBlur","tabIndex","ariaHidden","ariaLabel","paneId","isRefresh","text","className","focusVisible","_b","role","name"],"sources":["/Users/dcastro/node_modules/src/code-editor/tab-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { IconProps } from '../icon/interfaces';\nimport InternalIcon from '../icon/internal';\n\nimport styles from './styles.css.js';\n\ninterface TabButtonProps {\n  text: string;\n  iconName: IconProps.Name;\n  active: boolean;\n  disabled: boolean;\n  tabIndex?: number;\n  ariaHidden?: boolean;\n  ariaLabel?: string;\n  paneId: string;\n  isRefresh: boolean;\n\n  className: string;\n\n  onClick: () => void;\n  onFocus?: React.FocusEventHandler<HTMLButtonElement>;\n  onBlur?: React.FocusEventHandler<HTMLButtonElement>;\n}\n\nexport const TabButton = React.forwardRef(\n  (\n    {\n      active,\n      disabled,\n      iconName,\n      onClick,\n      onFocus,\n      onBlur,\n      tabIndex,\n      ariaHidden,\n      ariaLabel,\n      paneId,\n      isRefresh,\n      text,\n      className,\n    }: TabButtonProps,\n    ref: React.Ref<HTMLButtonElement>\n  ) => {\n    const focusVisible = useFocusVisible();\n    return (\n      <button\n        className={clsx([styles['tab-button'], className], {\n          [styles['tab-button--active']]: active,\n          [styles['tab-button--disabled']]: disabled,\n          [styles['tab-button--refresh']]: isRefresh,\n        })}\n        onClick={onClick}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        disabled={disabled}\n        ref={ref}\n        tabIndex={tabIndex}\n        role=\"tab\"\n        aria-selected={active}\n        aria-controls={paneId}\n        aria-hidden={ariaHidden}\n        aria-label={ariaLabel}\n        {...focusVisible}\n      >\n        <InternalIcon name={iconName} /> {text}\n      </button>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}