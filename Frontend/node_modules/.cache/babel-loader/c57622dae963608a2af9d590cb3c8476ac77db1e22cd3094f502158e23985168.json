{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalButtonDropdown from './internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar ButtonDropdown = React.forwardRef(function (_a, ref) {\n  var items = _a.items,\n    _b = _a.variant,\n    variant = _b === void 0 ? 'normal' : _b,\n    _c = _a.loading,\n    loading = _c === void 0 ? false : _c,\n    _d = _a.disabled,\n    disabled = _d === void 0 ? false : _d,\n    _e = _a.expandableGroups,\n    expandableGroups = _e === void 0 ? false : _e,\n    _f = _a.expandToViewport,\n    expandToViewport = _f === void 0 ? false : _f,\n    ariaLabel = _a.ariaLabel,\n    children = _a.children,\n    onItemClick = _a.onItemClick,\n    onItemFollow = _a.onItemFollow,\n    props = __rest(_a, [\"items\", \"variant\", \"loading\", \"disabled\", \"expandableGroups\", \"expandToViewport\", \"ariaLabel\", \"children\", \"onItemClick\", \"onItemFollow\"]);\n  var baseComponentProps = useBaseComponent('ButtonDropdown');\n  var baseProps = getBaseProps(props);\n  return React.createElement(InternalButtonDropdown, __assign({}, baseProps, baseComponentProps, {\n    ref: ref,\n    items: items,\n    variant: variant,\n    loading: loading,\n    disabled: disabled,\n    expandableGroups: expandableGroups,\n    expandToViewport: expandToViewport,\n    ariaLabel: ariaLabel,\n    onItemClick: onItemClick,\n    onItemFollow: onItemFollow\n  }), children);\n});\napplyDisplayName(ButtonDropdown, 'ButtonDropdown');\nexport default ButtonDropdown;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,sBAAsB,MAAM,YAAY;AAC/C,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,gBAAgB,MAAM,sCAAsC;AAInE,IAAMC,cAAc,GAAGL,KAAK,CAACM,UAAU,CACrC,UACEC,EAYsB,EACtBC,GAAuC;EAZrC,SAAK;IACLC,eAAkB;IAAlBC,OAAO,mBAAG,QAAQ;IAClBC,eAAe;IAAfC,OAAO,mBAAG,KAAK;IACfC,gBAAgB;IAAhBC,QAAQ,mBAAG,KAAK;IAChBC,wBAAwB;IAAxBC,gBAAgB,mBAAG,KAAK;IACxBC,wBAAwB;IAAxBC,gBAAgB,mBAAG,KAAK;IACxBC,SAAS;IACTC,QAAQ;IACRC,WAAW;IACXC,YAAY;IACTC,KAAK,cAXV,2IAYC,CADS;EAIV,IAAMC,kBAAkB,GAAGpB,gBAAgB,CAAC,gBAAgB,CAAC;EAC7D,IAAMqB,SAAS,GAAGvB,YAAY,CAACqB,KAAK,CAAC;EACrC,OACEvB,oBAACC,sBAAsB,eACjBwB,SAAS,EACTD,kBAAkB;IACtBhB,GAAG,EAAEA,GAAG;IACRkB,KAAK,EAAEA,KAAK;IACZhB,OAAO,EAAEA,OAAO;IAChBE,OAAO,EAAEA,OAAO;IAChBE,QAAQ,EAAEA,QAAQ;IAClBE,gBAAgB,EAAEA,gBAAgB;IAClCE,gBAAgB,EAAEA,gBAAgB;IAClCC,SAAS,EAAEA,SAAS;IACpBE,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA;EAAY,IAEzBF,QAAQ,CACc;AAE7B,CAAC,CACF;AAEDjB,gBAAgB,CAACE,cAAc,EAAE,gBAAgB,CAAC;AAClD,eAAeA,cAAc","names":["React","InternalButtonDropdown","getBaseProps","applyDisplayName","useBaseComponent","ButtonDropdown","forwardRef","_a","ref","_b","variant","_c","loading","_d","disabled","_e","expandableGroups","_f","expandToViewport","ariaLabel","children","onItemClick","onItemFollow","props","baseComponentProps","baseProps","items"],"sources":["/Users/dcastro/node_modules/src/button-dropdown/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { ButtonDropdownProps } from './interfaces';\nimport InternalButtonDropdown from './internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { ButtonDropdownProps };\n\nconst ButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      disabled = false,\n      expandableGroups = false,\n      expandToViewport = false,\n      ariaLabel,\n      children,\n      onItemClick,\n      onItemFollow,\n      ...props\n    }: ButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('ButtonDropdown');\n    const baseProps = getBaseProps(props);\n    return (\n      <InternalButtonDropdown\n        {...baseProps}\n        {...baseComponentProps}\n        ref={ref}\n        items={items}\n        variant={variant}\n        loading={loading}\n        disabled={disabled}\n        expandableGroups={expandableGroups}\n        expandToViewport={expandToViewport}\n        ariaLabel={ariaLabel}\n        onItemClick={onItemClick}\n        onItemFollow={onItemFollow}\n      >\n        {children}\n      </InternalButtonDropdown>\n    );\n  }\n);\n\napplyDisplayName(ButtonDropdown, 'ButtonDropdown');\nexport default ButtonDropdown;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}