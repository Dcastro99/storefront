{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport flattenChildren from 'react-keyed-flatten-children';\nexport default function InternalSpaceBetween(_a) {\n  var _b = _a.direction,\n    direction = _b === void 0 ? 'vertical' : _b,\n    size = _a.size,\n    children = _a.children,\n    __internalRootRef = _a.__internalRootRef,\n    props = __rest(_a, [\"direction\", \"size\", \"children\", \"__internalRootRef\"]);\n  var baseProps = getBaseProps(props);\n  /*\n   Flattening the children allows us to \"see through\" React Fragments and nested arrays.\n   */\n  var flattenedChildren = flattenChildren(children);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root, styles[direction], styles[\"\".concat(direction, \"-\").concat(size)]),\n    ref: __internalRootRef\n  }), flattenedChildren.map(function (child) {\n    // If this react child is a primitive value, the key will be undefined\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var key = child.key;\n    return React.createElement(\"div\", {\n      key: key,\n      className: clsx(styles.child, styles[\"child-\".concat(direction, \"-\").concat(size)])\n    }, child);\n  }));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,eAAe,MAAM,8BAA8B;AAM1D,eAAc,SAAUC,oBAAoB,CAACC,EAMjB;EAL1B,qBAAsB;IAAtBC,SAAS,mBAAG,UAAU;IACtBC,IAAI;IACJC,QAAQ;IACRC,iBAAiB;IACdC,KAAK,cALmC,sDAM5C,CADS;EAER,IAAMC,SAAS,GAAGV,YAAY,CAACS,KAAK,CAAC;EAErC;;;EAGA,IAAME,iBAAiB,GAAGT,eAAe,CAACK,QAAQ,CAAC;EAEnD,OACER,wCACMW,SAAS;IACbE,SAAS,EAAEd,IAAI,CAACY,SAAS,CAACE,SAAS,EAAEX,MAAM,CAACY,IAAI,EAAEZ,MAAM,CAACI,SAAS,CAAC,EAAEJ,MAAM,CAAC,UAAGI,SAAS,cAAIC,IAAI,CAAE,CAAC,CAAC;IACpGQ,GAAG,EAAEN;EAAiB,IAErBG,iBAAiB,CAACI,GAAG,CAAC,eAAK;IAC1B;IACA;IACA,IAAMC,GAAG,GAAIC,KAAa,CAACD,GAAG;IAE9B,OACEjB;MAAKiB,GAAG,EAAEA,GAAG;MAAEJ,SAAS,EAAEd,IAAI,CAACG,MAAM,CAACgB,KAAK,EAAEhB,MAAM,CAAC,gBAASI,SAAS,cAAIC,IAAI,CAAE,CAAC;IAAC,GAC/EW,KAAK,CACF;EAEV,CAAC,CAAC,CACE;AAEV","names":["clsx","React","getBaseProps","styles","flattenChildren","InternalSpaceBetween","_a","direction","size","children","__internalRootRef","props","baseProps","flattenedChildren","className","root","ref","map","key","child"],"sources":["/Users/dcastro/node_modules/src/space-between/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport flattenChildren from 'react-keyed-flatten-children';\nimport { SpaceBetweenProps } from './interfaces';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\ntype InternalSpaceBetweenProps = SpaceBetweenProps & InternalBaseComponentProps;\n\nexport default function InternalSpaceBetween({\n  direction = 'vertical',\n  size,\n  children,\n  __internalRootRef,\n  ...props\n}: InternalSpaceBetweenProps) {\n  const baseProps = getBaseProps(props);\n\n  /*\n   Flattening the children allows us to \"see through\" React Fragments and nested arrays.\n   */\n  const flattenedChildren = flattenChildren(children);\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.root, styles[direction], styles[`${direction}-${size}`])}\n      ref={__internalRootRef}\n    >\n      {flattenedChildren.map(child => {\n        // If this react child is a primitive value, the key will be undefined\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const key = (child as any).key;\n\n        return (\n          <div key={key} className={clsx(styles.child, styles[`child-${direction}-${size}`])}>\n            {child}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}