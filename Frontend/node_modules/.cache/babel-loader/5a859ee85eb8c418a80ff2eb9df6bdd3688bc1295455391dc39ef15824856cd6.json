{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { Drawer } from './drawer';\nimport { SplitPanelWrapper } from './split-panel-wrapper';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nexport function ToolsAndSplitPanel(_a) {\n  var _b;\n  var ariaLabels = _a.ariaLabels,\n    drawerWidth = _a.drawerWidth,\n    footerHeight = _a.footerHeight,\n    headerHeight = _a.headerHeight,\n    isHidden = _a.isHidden,\n    isMobile = _a.isMobile,\n    onToolsToggle = _a.onToolsToggle,\n    panelHeightStyle = _a.panelHeightStyle,\n    splitPanel = _a.splitPanel,\n    splitPanelContext = _a.splitPanelContext,\n    toggleRefs = _a.toggleRefs,\n    onLoseToolsFocus = _a.onLoseToolsFocus,\n    tools = _a.tools,\n    toolsHide = _a.toolsHide,\n    toolsOpen = _a.toolsOpen,\n    toolsWidth = _a.toolsWidth,\n    splitPanelOpen = _a.splitPanelOpen;\n  var splitPanelVisible = splitPanelOpen && Boolean(splitPanel);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      width: drawerWidth\n    }\n  }, React.createElement(\"div\", {\n    className: clsx(styles['panel-wrapper-outer'], (_b = {}, _b[styles.mobile] = isMobile, _b[styles.open] = toolsOpen, _b)),\n    style: __assign({}, isMobile ? {\n      top: headerHeight,\n      bottom: footerHeight\n    } : panelHeightStyle)\n  }, splitPanel && React.createElement(SplitPanelWrapper, {\n    context: splitPanelContext\n  }, splitPanel), !toolsHide && React.createElement(Drawer, {\n    type: \"tools\",\n    isMobile: isMobile,\n    width: toolsWidth,\n    isOpen: toolsOpen,\n    onToggle: onToolsToggle,\n    toggleRefs: toggleRefs,\n    onLoseFocus: onLoseToolsFocus,\n    isHidden: isHidden,\n    externalizedToggle: Boolean(splitPanel),\n    contentClassName: clsx(styles.tools, testutilStyles.tools),\n    closeClassName: clsx(styles['tools-close'], testutilStyles['tools-close']),\n    toggleClassName: clsx(styles['tools-toggle'], testutilStyles['tools-toggle']),\n    topOffset: headerHeight,\n    bottomOffset: footerHeight,\n    ariaLabels: ariaLabels,\n    extendRight: 0,\n    hasDividerWithSplitPanel: splitPanelVisible\n  }, tools))));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAA6BC,MAAM,QAAQ,UAAU;AAErD,SAASC,iBAAiB,QAAQ,uBAAuB;AAEzD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,cAAc,MAAM,8BAA8B;AAqCzD,OAAM,SAAUC,kBAAkB,CAACC,EAkBT;;MAjBxBC,UAAU;IACVC,WAAW;IACXC,YAAY;IACZC,YAAY;IACZC,QAAQ;IACRC,QAAQ;IACRC,aAAa;IACbC,gBAAgB;IAChBC,UAAU;IACVC,iBAAiB;IACjBC,UAAU;IACVC,gBAAgB;IAChBC,KAAK;IACLC,SAAS;IACTC,SAAS;IACTC,UAAU;IACVC,cAAc;EAEd,IAAMC,iBAAiB,GAAGD,cAAc,IAAIE,OAAO,CAACV,UAAU,CAAC;EAE/D,OACEf,0CACEA;IACE0B,KAAK,EAAE;MACLC,KAAK,EAAEnB;;EACR,GAEDR;IACE4B,SAAS,EAAE7B,IAAI,CAACI,MAAM,CAAC,qBAAqB,CAAC,YAC3C0B,GAAC1B,MAAM,CAAC2B,MAAM,IAAGlB,QAAQ,EACzBiB,GAAC1B,MAAM,CAAC4B,IAAI,IAAGV,SAAS,MACxB;IACFK,KAAK,eACCd,QAAQ,GAAG;MAAEoB,GAAG,EAAEtB,YAAY;MAAEuB,MAAM,EAAExB;IAAY,CAAE,GAAGK,gBAAgB;EAAC,GAG/EC,UAAU,IAAIf,oBAACE,iBAAiB;IAACgC,OAAO,EAAElB;EAAiB,GAAGD,UAAU,CAAqB,EAC7F,CAACK,SAAS,IACTpB,oBAACC,MAAM;IACLkC,IAAI,EAAC,OAAO;IACZvB,QAAQ,EAAEA,QAAQ;IAClBe,KAAK,EAAEL,UAAU;IACjBc,MAAM,EAAEf,SAAS;IACjBgB,QAAQ,EAAExB,aAAa;IACvBI,UAAU,EAAEA,UAAU;IACtBqB,WAAW,EAAEpB,gBAAgB;IAC7BP,QAAQ,EAAEA,QAAQ;IAClB4B,kBAAkB,EAAEd,OAAO,CAACV,UAAU,CAAC;IACvCyB,gBAAgB,EAAEzC,IAAI,CAACI,MAAM,CAACgB,KAAK,EAAEf,cAAc,CAACe,KAAK,CAAC;IAC1DsB,cAAc,EAAE1C,IAAI,CAACI,MAAM,CAAC,aAAa,CAAC,EAAEC,cAAc,CAAC,aAAa,CAAC,CAAC;IAC1EsC,eAAe,EAAE3C,IAAI,CAACI,MAAM,CAAC,cAAc,CAAC,EAAEC,cAAc,CAAC,cAAc,CAAC,CAAC;IAC7EuC,SAAS,EAAEjC,YAAY;IACvBkC,YAAY,EAAEnC,YAAY;IAC1BF,UAAU,EAAEA,UAAU;IACtBsC,WAAW,EAAE,CAAC;IACdC,wBAAwB,EAAEtB;EAAiB,GAE1CL,KAAK,CAET,CACG,CACF,CACL;AAEP","names":["clsx","React","Drawer","SplitPanelWrapper","styles","testutilStyles","ToolsAndSplitPanel","_a","ariaLabels","drawerWidth","footerHeight","headerHeight","isHidden","isMobile","onToolsToggle","panelHeightStyle","splitPanel","splitPanelContext","toggleRefs","onLoseToolsFocus","tools","toolsHide","toolsOpen","toolsWidth","splitPanelOpen","splitPanelVisible","Boolean","style","width","className","_b","mobile","open","top","bottom","context","type","isOpen","onToggle","onLoseFocus","externalizedToggle","contentClassName","closeClassName","toggleClassName","topOffset","bottomOffset","extendRight","hasDividerWithSplitPanel"],"sources":["/Users/dcastro/node_modules/src/app-layout/tools-and-split-panel.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { DesktopDrawerProps, Drawer } from './drawer';\nimport { AppLayoutProps } from './interfaces';\nimport { SplitPanelWrapper } from './split-panel-wrapper';\nimport useContentHeight from './utils/use-content-height';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nimport { SplitPanelContextProps } from '../internal/context/split-panel-context';\n\ninterface ToolsAndSplitPanelProps {\n  toolsHide: boolean;\n  toolsOpen: boolean;\n  isHidden: DesktopDrawerProps['isHidden'];\n\n  splitPanelOpen: boolean;\n\n  drawerWidth: number;\n  toolsWidth: number;\n  splitPanelReportedSize: number;\n  closedDrawerWidth: number;\n\n  headerHeight: DesktopDrawerProps['topOffset'];\n  footerHeight: DesktopDrawerProps['bottomOffset'];\n  panelHeightStyle: ReturnType<typeof useContentHeight>['panelHeightStyle'];\n  contentHeightStyle: ReturnType<typeof useContentHeight>['contentHeightStyle'];\n\n  tools: React.ReactNode;\n  splitPanel?: React.ReactNode;\n  splitPanelContext: SplitPanelContextProps;\n\n  ariaLabels: AppLayoutProps['ariaLabels'];\n\n  disableContentPaddings: AppLayoutProps['disableContentPaddings'];\n  isMobile: boolean;\n  isMotionEnabled: boolean;\n\n  onToolsToggle: DesktopDrawerProps['onToggle'];\n\n  toggleRefs: DesktopDrawerProps['toggleRefs'];\n\n  onLoseToolsFocus: (event: React.FocusEvent) => void;\n}\n\nexport function ToolsAndSplitPanel({\n  ariaLabels,\n  drawerWidth,\n  footerHeight,\n  headerHeight,\n  isHidden,\n  isMobile,\n  onToolsToggle,\n  panelHeightStyle,\n  splitPanel,\n  splitPanelContext,\n  toggleRefs,\n  onLoseToolsFocus,\n  tools,\n  toolsHide,\n  toolsOpen,\n  toolsWidth,\n  splitPanelOpen,\n}: ToolsAndSplitPanelProps) {\n  const splitPanelVisible = splitPanelOpen && Boolean(splitPanel);\n\n  return (\n    <>\n      <div\n        style={{\n          width: drawerWidth,\n        }}\n      >\n        <div\n          className={clsx(styles['panel-wrapper-outer'], {\n            [styles.mobile]: isMobile,\n            [styles.open]: toolsOpen,\n          })}\n          style={{\n            ...(isMobile ? { top: headerHeight, bottom: footerHeight } : panelHeightStyle),\n          }}\n        >\n          {splitPanel && <SplitPanelWrapper context={splitPanelContext}>{splitPanel}</SplitPanelWrapper>}\n          {!toolsHide && (\n            <Drawer\n              type=\"tools\"\n              isMobile={isMobile}\n              width={toolsWidth}\n              isOpen={toolsOpen}\n              onToggle={onToolsToggle}\n              toggleRefs={toggleRefs}\n              onLoseFocus={onLoseToolsFocus}\n              isHidden={isHidden}\n              externalizedToggle={Boolean(splitPanel)}\n              contentClassName={clsx(styles.tools, testutilStyles.tools)}\n              closeClassName={clsx(styles['tools-close'], testutilStyles['tools-close'])}\n              toggleClassName={clsx(styles['tools-toggle'], testutilStyles['tools-toggle'])}\n              topOffset={headerHeight}\n              bottomOffset={footerHeight}\n              ariaLabels={ariaLabels}\n              extendRight={0}\n              hasDividerWithSplitPanel={splitPanelVisible}\n            >\n              {tools}\n            </Drawer>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}