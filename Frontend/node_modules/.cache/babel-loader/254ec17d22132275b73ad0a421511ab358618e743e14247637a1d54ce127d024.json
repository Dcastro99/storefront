{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __rest } from \"tslib\";\nimport React, { useRef, useState, useImperativeHandle, useEffect } from 'react';\nimport Dropdown from '../dropdown';\nimport { useFormFieldContext } from '../../context/form-field-context';\nimport { getBaseProps } from '../../base-component';\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../../events';\nimport InternalInput from '../../../input/internal';\nimport { getFocusables } from '../focus-lock/utils';\nimport { KeyCode } from '../../keycode';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nvar AutosuggestInput = React.forwardRef(function (_a, ref) {\n  var value = _a.value,\n    onChange = _a.onChange,\n    onBlur = _a.onBlur,\n    onFocus = _a.onFocus,\n    onKeyUp = _a.onKeyUp,\n    onKeyDown = _a.onKeyDown,\n    name = _a.name,\n    placeholder = _a.placeholder,\n    disabled = _a.disabled,\n    readOnly = _a.readOnly,\n    autoFocus = _a.autoFocus,\n    ariaLabel = _a.ariaLabel,\n    ariaRequired = _a.ariaRequired,\n    _b = _a.disableBrowserAutocorrect,\n    disableBrowserAutocorrect = _b === void 0 ? false : _b,\n    expandToViewport = _a.expandToViewport,\n    ariaControls = _a.ariaControls,\n    ariaActivedescendant = _a.ariaActivedescendant,\n    _c = _a.dropdownExpanded,\n    dropdownExpanded = _c === void 0 ? true : _c,\n    dropdownContentKey = _a.dropdownContentKey,\n    _d = _a.dropdownContentFocusable,\n    dropdownContentFocusable = _d === void 0 ? false : _d,\n    _e = _a.dropdownContent,\n    dropdownContent = _e === void 0 ? null : _e,\n    _f = _a.dropdownFooter,\n    dropdownFooter = _f === void 0 ? null : _f,\n    dropdownWidth = _a.dropdownWidth,\n    onCloseDropdown = _a.onCloseDropdown,\n    onDelayedInput = _a.onDelayedInput,\n    onPressArrowDown = _a.onPressArrowDown,\n    onPressArrowUp = _a.onPressArrowUp,\n    onPressEnter = _a.onPressEnter,\n    __internalRootRef = _a.__internalRootRef,\n    restProps = __rest(_a, [\"value\", \"onChange\", \"onBlur\", \"onFocus\", \"onKeyUp\", \"onKeyDown\", \"name\", \"placeholder\", \"disabled\", \"readOnly\", \"autoFocus\", \"ariaLabel\", \"ariaRequired\", \"disableBrowserAutocorrect\", \"expandToViewport\", \"ariaControls\", \"ariaActivedescendant\", \"dropdownExpanded\", \"dropdownContentKey\", \"dropdownContentFocusable\", \"dropdownContent\", \"dropdownFooter\", \"dropdownWidth\", \"onCloseDropdown\", \"onDelayedInput\", \"onPressArrowDown\", \"onPressArrowUp\", \"onPressEnter\", \"__internalRootRef\"]);\n  var baseProps = getBaseProps(restProps);\n  var formFieldContext = useFormFieldContext(restProps);\n  var inputRef = useRef(null);\n  var dropdownContentRef = useRef(null);\n  var dropdownFooterRef = useRef(null);\n  var preventOpenOnFocusRef = useRef(false);\n  var preventCloseOnBlurRef = useRef(false);\n  var _g = useState(false),\n    open = _g[0],\n    setOpen = _g[1];\n  var openDropdown = function () {\n    return !readOnly && setOpen(true);\n  };\n  var closeDropdown = function () {\n    setOpen(false);\n    fireNonCancelableEvent(onCloseDropdown, null);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function (options) {\n        var _a;\n        if (options === null || options === void 0 ? void 0 : options.preventDropdown) {\n          preventOpenOnFocusRef.current = true;\n        }\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      select: function () {\n        var _a;\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n      },\n      open: openDropdown,\n      close: closeDropdown\n    };\n  });\n  var handleBlur = function (event) {\n    var _a, _b;\n    if (event.currentTarget.contains(event.relatedTarget) || ((_a = dropdownContentRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget)) || ((_b = dropdownFooterRef.current) === null || _b === void 0 ? void 0 : _b.contains(event.relatedTarget))) {\n      return;\n    }\n    if (!preventCloseOnBlurRef.current) {\n      closeDropdown();\n      fireNonCancelableEvent(onBlur, null);\n    }\n  };\n  var handleFocus = function () {\n    if (!preventOpenOnFocusRef.current) {\n      openDropdown();\n      fireNonCancelableEvent(onFocus, null);\n    }\n    preventOpenOnFocusRef.current = false;\n  };\n  var handleKeyDown = function (e) {\n    switch (e.detail.keyCode) {\n      case KeyCode.down:\n        {\n          onPressArrowDown === null || onPressArrowDown === void 0 ? void 0 : onPressArrowDown();\n          openDropdown();\n          e.preventDefault();\n          break;\n        }\n      case KeyCode.up:\n        {\n          onPressArrowUp === null || onPressArrowUp === void 0 ? void 0 : onPressArrowUp();\n          openDropdown();\n          e.preventDefault();\n          break;\n        }\n      case KeyCode.enter:\n        {\n          if (open) {\n            if (!(onPressEnter === null || onPressEnter === void 0 ? void 0 : onPressEnter())) {\n              closeDropdown();\n            }\n            e.preventDefault();\n          }\n          fireCancelableEvent(onKeyDown, e.detail);\n          break;\n        }\n      case KeyCode.escape:\n        {\n          if (open) {\n            closeDropdown();\n          } else if (value) {\n            fireNonCancelableEvent(onChange, {\n              value: ''\n            });\n          }\n          e.preventDefault();\n          fireCancelableEvent(onKeyDown, e.detail);\n          break;\n        }\n      default:\n        {\n          fireCancelableEvent(onKeyDown, e.detail);\n        }\n    }\n  };\n  var handleChange = function (value) {\n    openDropdown();\n    fireNonCancelableEvent(onChange, {\n      value: value\n    });\n  };\n  var handleDelayedInput = function (value) {\n    fireNonCancelableEvent(onDelayedInput, {\n      value: value\n    });\n  };\n  var handleDropdownMouseDown = function (event) {\n    // Prevent currently focused element from losing focus.\n    if (!dropdownContentFocusable) {\n      event.preventDefault();\n    }\n    // Prevent closing dropdown on click inside.\n    else {\n      preventCloseOnBlurRef.current = true;\n      requestAnimationFrame(function () {\n        preventCloseOnBlurRef.current = false;\n      });\n    }\n  };\n  var expanded = open && dropdownExpanded;\n  var nativeAttributes = {\n    name: name,\n    placeholder: placeholder,\n    autoFocus: autoFocus,\n    onClick: openDropdown,\n    role: 'combobox',\n    'aria-autocomplete': 'list',\n    'aria-expanded': expanded,\n    'aria-controls': ariaControls,\n    // 'aria-owns' needed for safari+vo to announce activedescendant content\n    'aria-owns': ariaControls,\n    'aria-label': ariaLabel,\n    'aria-activedescendant': ariaActivedescendant\n  };\n  var _h = useState(false),\n    trapDropdownFocus = _h[0],\n    setTrapDropdownFocus = _h[1];\n  // Run this effect on every render to determine if necessary to trap focus around input and dropdown.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(function () {\n    setTrapDropdownFocus((dropdownFooterRef.current ? getFocusables(dropdownFooterRef.current).length > 0 : false) || (dropdownContentRef.current ? getFocusables(dropdownContentRef.current).length > 0 : false));\n  });\n  // Closes dropdown when outside click is detected.\n  // Similar to the internal dropdown implementation but includes the target as well.\n  useEffect(function () {\n    if (!open) {\n      return;\n    }\n    var clickListener = function (event) {\n      var _a, _b, _c;\n      if (!((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.target)) && !((_b = dropdownContentRef.current) === null || _b === void 0 ? void 0 : _b.contains(event.target)) && !((_c = dropdownFooterRef.current) === null || _c === void 0 ? void 0 : _c.contains(event.target))) {\n        closeDropdown();\n      }\n    };\n    window.addEventListener('mousedown', clickListener);\n    return function () {\n      window.removeEventListener('mousedown', clickListener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef,\n    onBlur: handleBlur\n  }), React.createElement(Dropdown, {\n    minWidth: dropdownWidth,\n    stretchWidth: !dropdownWidth,\n    contentKey: dropdownContentKey,\n    trigger: React.createElement(InternalInput, __assign({\n      type: \"visualSearch\",\n      value: value,\n      onChange: function (event) {\n        return handleChange(event.detail.value);\n      },\n      __onDelayedInput: function (event) {\n        return handleDelayedInput(event.detail.value);\n      },\n      onFocus: handleFocus,\n      onKeyDown: handleKeyDown,\n      onKeyUp: onKeyUp,\n      disabled: disabled,\n      disableBrowserAutocorrect: disableBrowserAutocorrect,\n      readOnly: readOnly,\n      ariaRequired: ariaRequired,\n      ref: inputRef,\n      autoComplete: false,\n      __nativeAttributes: nativeAttributes\n    }, formFieldContext)),\n    onMouseDown: handleDropdownMouseDown,\n    open: open,\n    footer: dropdownFooterRef && React.createElement(\"div\", {\n      ref: dropdownFooterRef,\n      className: styles['dropdown-footer']\n    }, dropdownFooter),\n    expandToViewport: expandToViewport,\n    trapFocus: trapDropdownFocus\n  }, open && dropdownContent ? React.createElement(\"div\", {\n    ref: dropdownContentRef,\n    className: styles['dropdown-content']\n  }, dropdownContent) : null));\n});\nexport default AutosuggestInput;","map":{"version":3,"mappings":"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","names":["React","useRef","useState","useImperativeHandle","useEffect","Dropdown","useFormFieldContext","getBaseProps","fireCancelableEvent","fireNonCancelableEvent","InternalInput","getFocusables","KeyCode","styles","clsx","AutosuggestInput","forwardRef","_a","ref","onChange","onBlur","onFocus","onKeyUp","onKeyDown","name","placeholder","disabled","readOnly","autoFocus","ariaLabel","ariaRequired","_b","disableBrowserAutocorrect","expandToViewport","ariaControls","ariaActivedescendant","_c","dropdownExpanded","dropdownContentKey","_d","dropdownContentFocusable","_e","dropdownContent","_f","dropdownFooter","dropdownWidth","onCloseDropdown","onDelayedInput","onPressArrowDown","onPressArrowUp","onPressEnter","__internalRootRef","restProps","baseProps","formFieldContext","inputRef","dropdownContentRef","dropdownFooterRef","preventOpenOnFocusRef","preventCloseOnBlurRef","open","setOpen","openDropdown","closeDropdown","focus","options","preventDropdown","current","select","close","handleBlur","event","currentTarget","contains","relatedTarget","handleFocus","handleKeyDown","e","detail","keyCode","down","preventDefault","up","enter","escape","value","handleChange","handleDelayedInput","handleDropdownMouseDown","requestAnimationFrame","expanded","nativeAttributes","onClick","role","trapDropdownFocus","setTrapDropdownFocus","length","clickListener","target","window","addEventListener","removeEventListener","className","root","minWidth","stretchWidth","contentKey","trigger","type","__onDelayedInput","autoComplete","__nativeAttributes","onMouseDown","footer","trapFocus"],"sources":["/Users/dcastro/node_modules/src/internal/components/autosuggest-input/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { Ref, useRef, useState, useImperativeHandle, useEffect } from 'react';\n\nimport Dropdown from '../dropdown';\n\nimport { FormFieldValidationControlProps, useFormFieldContext } from '../../context/form-field-context';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport { BaseKeyDetail, fireCancelableEvent, fireNonCancelableEvent, NonCancelableEventHandler } from '../../events';\nimport InternalInput from '../../../input/internal';\nimport {\n  BaseChangeDetail,\n  BaseInputProps,\n  InputAutoCorrect,\n  InputKeyEvents,\n  InputProps,\n} from '../../../input/interfaces';\nimport { getFocusables } from '../focus-lock/utils';\nimport { ExpandToViewport } from '../dropdown/interfaces';\nimport { InternalBaseComponentProps } from '../../hooks/use-base-component';\nimport { KeyCode } from '../../keycode';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\n\nexport interface AutosuggestInputProps\n  extends BaseComponentProps,\n    BaseInputProps,\n    InputAutoCorrect,\n    InputKeyEvents,\n    FormFieldValidationControlProps,\n    ExpandToViewport,\n    InternalBaseComponentProps {\n  ariaControls?: string;\n  ariaActivedescendant?: string;\n  dropdownExpanded?: boolean;\n  dropdownContentKey?: string;\n  dropdownContentFocusable?: boolean;\n  dropdownContent?: React.ReactNode;\n  dropdownFooter?: React.ReactNode;\n  dropdownWidth?: number;\n  onCloseDropdown?: NonCancelableEventHandler<null>;\n  onDelayedInput?: NonCancelableEventHandler<BaseChangeDetail>;\n  onPressArrowDown?: () => void;\n  onPressArrowUp?: () => void;\n  onPressEnter?: () => boolean;\n}\n\nexport interface AutosuggestInputFocusOptions {\n  preventDropdown?: boolean;\n}\n\nexport interface AutosuggestInputRef extends InputProps.Ref {\n  focus(options?: AutosuggestInputFocusOptions): void;\n  open(): void;\n  close(): void;\n}\n\nconst AutosuggestInput = React.forwardRef(\n  (\n    {\n      value,\n      onChange,\n      onBlur,\n      onFocus,\n      onKeyUp,\n      onKeyDown,\n      name,\n      placeholder,\n      disabled,\n      readOnly,\n      autoFocus,\n      ariaLabel,\n      ariaRequired,\n      disableBrowserAutocorrect = false,\n      expandToViewport,\n      ariaControls,\n      ariaActivedescendant,\n      dropdownExpanded = true,\n      dropdownContentKey,\n      dropdownContentFocusable = false,\n      dropdownContent = null,\n      dropdownFooter = null,\n      dropdownWidth,\n      onCloseDropdown,\n      onDelayedInput,\n      onPressArrowDown,\n      onPressArrowUp,\n      onPressEnter,\n      __internalRootRef,\n      ...restProps\n    }: AutosuggestInputProps,\n    ref: Ref<AutosuggestInputRef>\n  ) => {\n    const baseProps = getBaseProps(restProps);\n    const formFieldContext = useFormFieldContext(restProps);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n    const dropdownContentRef = useRef<HTMLDivElement>(null);\n    const dropdownFooterRef = useRef<HTMLDivElement>(null);\n    const preventOpenOnFocusRef = useRef(false);\n    const preventCloseOnBlurRef = useRef(false);\n\n    const [open, setOpen] = useState(false);\n\n    const openDropdown = () => !readOnly && setOpen(true);\n\n    const closeDropdown = () => {\n      setOpen(false);\n      fireNonCancelableEvent(onCloseDropdown, null);\n    };\n\n    useImperativeHandle(ref, () => ({\n      focus(options?: AutosuggestInputFocusOptions) {\n        if (options?.preventDropdown) {\n          preventOpenOnFocusRef.current = true;\n        }\n        inputRef.current?.focus();\n      },\n      select() {\n        inputRef.current?.select();\n      },\n      open: openDropdown,\n      close: closeDropdown,\n    }));\n\n    const handleBlur: React.FocusEventHandler = event => {\n      if (\n        event.currentTarget.contains(event.relatedTarget) ||\n        dropdownContentRef.current?.contains(event.relatedTarget) ||\n        dropdownFooterRef.current?.contains(event.relatedTarget)\n      ) {\n        return;\n      }\n      if (!preventCloseOnBlurRef.current) {\n        closeDropdown();\n        fireNonCancelableEvent(onBlur, null);\n      }\n    };\n\n    const handleFocus = () => {\n      if (!preventOpenOnFocusRef.current) {\n        openDropdown();\n        fireNonCancelableEvent(onFocus, null);\n      }\n      preventOpenOnFocusRef.current = false;\n    };\n\n    const handleKeyDown = (e: CustomEvent<BaseKeyDetail>) => {\n      switch (e.detail.keyCode) {\n        case KeyCode.down: {\n          onPressArrowDown?.();\n          openDropdown();\n          e.preventDefault();\n          break;\n        }\n        case KeyCode.up: {\n          onPressArrowUp?.();\n          openDropdown();\n          e.preventDefault();\n          break;\n        }\n        case KeyCode.enter: {\n          if (open) {\n            if (!onPressEnter?.()) {\n              closeDropdown();\n            }\n            e.preventDefault();\n          }\n          fireCancelableEvent(onKeyDown, e.detail);\n          break;\n        }\n        case KeyCode.escape: {\n          if (open) {\n            closeDropdown();\n          } else if (value) {\n            fireNonCancelableEvent(onChange, { value: '' });\n          }\n          e.preventDefault();\n          fireCancelableEvent(onKeyDown, e.detail);\n          break;\n        }\n        default: {\n          fireCancelableEvent(onKeyDown, e.detail);\n        }\n      }\n    };\n\n    const handleChange = (value: string) => {\n      openDropdown();\n      fireNonCancelableEvent(onChange, { value });\n    };\n\n    const handleDelayedInput = (value: string) => {\n      fireNonCancelableEvent(onDelayedInput, { value });\n    };\n\n    const handleDropdownMouseDown: React.MouseEventHandler = event => {\n      // Prevent currently focused element from losing focus.\n      if (!dropdownContentFocusable) {\n        event.preventDefault();\n      }\n      // Prevent closing dropdown on click inside.\n      else {\n        preventCloseOnBlurRef.current = true;\n        requestAnimationFrame(() => {\n          preventCloseOnBlurRef.current = false;\n        });\n      }\n    };\n\n    const expanded = open && dropdownExpanded;\n    const nativeAttributes = {\n      name,\n      placeholder,\n      autoFocus,\n      onClick: openDropdown,\n      role: 'combobox',\n      'aria-autocomplete': 'list',\n      'aria-expanded': expanded,\n      'aria-controls': ariaControls,\n      // 'aria-owns' needed for safari+vo to announce activedescendant content\n      'aria-owns': ariaControls,\n      'aria-label': ariaLabel,\n      'aria-activedescendant': ariaActivedescendant,\n    };\n\n    const [trapDropdownFocus, setTrapDropdownFocus] = useState(false);\n\n    // Run this effect on every render to determine if necessary to trap focus around input and dropdown.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => {\n      setTrapDropdownFocus(\n        (dropdownFooterRef.current ? getFocusables(dropdownFooterRef.current).length > 0 : false) ||\n          (dropdownContentRef.current ? getFocusables(dropdownContentRef.current).length > 0 : false)\n      );\n    });\n\n    // Closes dropdown when outside click is detected.\n    // Similar to the internal dropdown implementation but includes the target as well.\n    useEffect(() => {\n      if (!open) {\n        return;\n      }\n\n      const clickListener = (event: MouseEvent) => {\n        if (\n          !inputRef.current?.contains(event.target as Node) &&\n          !dropdownContentRef.current?.contains(event.target as Node) &&\n          !dropdownFooterRef.current?.contains(event.target as Node)\n        ) {\n          closeDropdown();\n        }\n      };\n\n      window.addEventListener('mousedown', clickListener);\n\n      return () => {\n        window.removeEventListener('mousedown', clickListener);\n      };\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [open]);\n\n    return (\n      <div\n        {...baseProps}\n        className={clsx(baseProps.className, styles.root)}\n        ref={__internalRootRef}\n        onBlur={handleBlur}\n      >\n        <Dropdown\n          minWidth={dropdownWidth}\n          stretchWidth={!dropdownWidth}\n          contentKey={dropdownContentKey}\n          trigger={\n            <InternalInput\n              type=\"visualSearch\"\n              value={value}\n              onChange={event => handleChange(event.detail.value)}\n              __onDelayedInput={event => handleDelayedInput(event.detail.value)}\n              onFocus={handleFocus}\n              onKeyDown={handleKeyDown}\n              onKeyUp={onKeyUp}\n              disabled={disabled}\n              disableBrowserAutocorrect={disableBrowserAutocorrect}\n              readOnly={readOnly}\n              ariaRequired={ariaRequired}\n              ref={inputRef}\n              autoComplete={false}\n              __nativeAttributes={nativeAttributes}\n              {...formFieldContext}\n            />\n          }\n          onMouseDown={handleDropdownMouseDown}\n          open={open}\n          footer={\n            dropdownFooterRef && (\n              <div ref={dropdownFooterRef} className={styles['dropdown-footer']}>\n                {dropdownFooter}\n              </div>\n            )\n          }\n          expandToViewport={expandToViewport}\n          trapFocus={trapDropdownFocus}\n        >\n          {open && dropdownContent ? (\n            <div ref={dropdownContentRef} className={styles['dropdown-content']}>\n              {dropdownContent}\n            </div>\n          ) : null}\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\nexport default AutosuggestInput;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}