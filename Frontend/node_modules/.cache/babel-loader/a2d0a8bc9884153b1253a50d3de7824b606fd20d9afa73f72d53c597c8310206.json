{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalMixedLineBarChart from '../mixed-line-bar-chart/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nfunction LineChart(_a) {\n  var _b = _a.series,\n    series = _b === void 0 ? [] : _b,\n    _c = _a.height,\n    height = _c === void 0 ? 500 : _c,\n    _d = _a.xScaleType,\n    xScaleType = _d === void 0 ? 'linear' : _d,\n    _e = _a.yScaleType,\n    yScaleType = _e === void 0 ? 'linear' : _e,\n    _f = _a.detailPopoverSize,\n    detailPopoverSize = _f === void 0 ? 'medium' : _f,\n    _g = _a.statusType,\n    statusType = _g === void 0 ? 'finished' : _g,\n    _h = _a.emphasizeBaselineAxis,\n    emphasizeBaselineAxis = _h === void 0 ? true : _h,\n    props = __rest(_a, [\"series\", \"height\", \"xScaleType\", \"yScaleType\", \"detailPopoverSize\", \"statusType\", \"emphasizeBaselineAxis\"]);\n  var baseComponentProps = useBaseComponent('LineChart');\n  var baseProps = getBaseProps(props);\n  var className = clsx(baseProps.className, styles.root);\n  return React.createElement(InternalMixedLineBarChart, __assign({}, props, baseComponentProps, {\n    className: className,\n    height: height,\n    xScaleType: xScaleType,\n    yScaleType: yScaleType,\n    stackedBars: false,\n    horizontalBars: false,\n    series: series,\n    detailPopoverSize: detailPopoverSize,\n    statusType: statusType,\n    emphasizeBaselineAxis: emphasizeBaselineAxis\n  }));\n}\napplyDisplayName(LineChart, 'LineChart');\nexport default LineChart;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAGvB,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,yBAAyB,MAAM,kCAAkC;AACxE,OAAOC,gBAAgB,MAAM,sCAAsC;AAInE,SAASC,SAAS,CAAmCC,EASjC;EARlB,kBAAW;IAAXC,MAAM,mBAAG,EAAE;IACXC,cAAY;IAAZC,MAAM,mBAAG,GAAG;IACZC,kBAAqB;IAArBC,UAAU,mBAAG,QAAQ;IACrBC,kBAAqB;IAArBC,UAAU,mBAAG,QAAQ;IACrBC,yBAA4B;IAA5BC,iBAAiB,mBAAG,QAAQ;IAC5BC,kBAAuB;IAAvBC,UAAU,mBAAG,UAAU;IACvBC,6BAA4B;IAA5BC,qBAAqB,mBAAG,IAAI;IACzBC,KAAK,cAR2C,4GASpD,CADS;EAER,IAAMC,kBAAkB,GAAGjB,gBAAgB,CAAC,WAAW,CAAC;EACxD,IAAMkB,SAAS,GAAGrB,YAAY,CAACmB,KAAK,CAAC;EACrC,IAAMG,SAAS,GAAGxB,IAAI,CAACuB,SAAS,CAACC,SAAS,EAAErB,MAAM,CAACsB,IAAI,CAAC;EAExD,OACE1B,oBAACK,yBAAyB,eACpBiB,KAAK,EACLC,kBAAkB;IACtBE,SAAS,EAAEA,SAAS;IACpBd,MAAM,EAAEA,MAAM;IACdE,UAAU,EAAEA,UAAU;IACtBE,UAAU,EAAEA,UAAU;IACtBY,WAAW,EAAE,KAAK;IAClBC,cAAc,EAAE,KAAK;IACrBnB,MAAM,EAAEA,MAAM;IACdQ,iBAAiB,EAAEA,iBAAiB;IACpCE,UAAU,EAAEA,UAAU;IACtBE,qBAAqB,EAAEA;EAAqB,GAC5C;AAEN;AAEAnB,gBAAgB,CAACK,SAAS,EAAE,WAAW,CAAC;AAExC,eAAeA,SAAS","names":["React","clsx","applyDisplayName","getBaseProps","styles","InternalMixedLineBarChart","useBaseComponent","LineChart","_a","series","_c","height","_d","xScaleType","_e","yScaleType","_f","detailPopoverSize","_g","statusType","_h","emphasizeBaselineAxis","props","baseComponentProps","baseProps","className","root","stackedBars","horizontalBars"],"sources":["/Users/dcastro/node_modules/src/line-chart/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { LineChartProps } from './interfaces';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalMixedLineBarChart from '../mixed-line-bar-chart/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { LineChartProps };\n\nfunction LineChart<T extends number | string | Date>({\n  series = [],\n  height = 500,\n  xScaleType = 'linear',\n  yScaleType = 'linear',\n  detailPopoverSize = 'medium',\n  statusType = 'finished',\n  emphasizeBaselineAxis = true,\n  ...props\n}: LineChartProps<T>) {\n  const baseComponentProps = useBaseComponent('LineChart');\n  const baseProps = getBaseProps(props);\n  const className = clsx(baseProps.className, styles.root);\n\n  return (\n    <InternalMixedLineBarChart\n      {...props}\n      {...baseComponentProps}\n      className={className}\n      height={height}\n      xScaleType={xScaleType}\n      yScaleType={yScaleType}\n      stackedBars={false}\n      horizontalBars={false}\n      series={series}\n      detailPopoverSize={detailPopoverSize}\n      statusType={statusType}\n      emphasizeBaselineAxis={emphasizeBaselineAxis}\n    />\n  );\n}\n\napplyDisplayName(LineChart, 'LineChart');\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}