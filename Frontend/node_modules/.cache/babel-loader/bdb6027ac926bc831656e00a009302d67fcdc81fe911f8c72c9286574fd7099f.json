{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback } from 'react';\nimport styles from '../styles.css.js';\nexport var usePointerEvents = function (_a) {\n  var position = _a.position,\n    splitPanelRef = _a.splitPanelRef,\n    handleRef = _a.handleRef,\n    setSidePanelWidth = _a.setSidePanelWidth,\n    setBottomPanelHeight = _a.setBottomPanelHeight;\n  var onDocumentPointerMove = useCallback(function (event) {\n    if (!splitPanelRef || !splitPanelRef.current || !handleRef || !handleRef.current) {\n      return;\n    }\n    if (position === 'side') {\n      var mouseClientX = event.clientX;\n      // The handle offset aligns the cursor with the middle of the resize handle.\n      var handleOffset = handleRef.current.getBoundingClientRect().width / 2;\n      var width = splitPanelRef.current.getBoundingClientRect().right - mouseClientX + handleOffset;\n      setSidePanelWidth(width);\n    } else {\n      var mouseClientY = event.clientY;\n      // The handle offset aligns the cursor with the middle of the resize handle.\n      var handleOffset = handleRef.current.getBoundingClientRect().height / 2;\n      var height = splitPanelRef.current.getBoundingClientRect().bottom - mouseClientY + handleOffset;\n      setBottomPanelHeight(height);\n    }\n  }, [position, splitPanelRef, handleRef, setSidePanelWidth, setBottomPanelHeight]);\n  var onDocumentPointerUp = useCallback(function () {\n    document.body.classList.remove(styles['resize-active']);\n    document.body.classList.remove(styles[\"resize-\".concat(position)]);\n    document.removeEventListener('pointerup', onDocumentPointerUp);\n    document.removeEventListener('pointermove', onDocumentPointerMove);\n  }, [onDocumentPointerMove, position]);\n  var onSliderPointerDown = useCallback(function () {\n    document.body.classList.add(styles['resize-active']);\n    document.body.classList.add(styles[\"resize-\".concat(position)]);\n    document.addEventListener('pointerup', onDocumentPointerUp);\n    document.addEventListener('pointermove', onDocumentPointerMove);\n  }, [onDocumentPointerMove, onDocumentPointerUp, position]);\n  return onSliderPointerDown;\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAOC,MAAM,MAAM,kBAAkB;AAErC,OAAO,IAAMC,gBAAgB,GAAG,UAACC,EAMd;MALjBC,QAAQ;IACRC,aAAa;IACbC,SAAS;IACTC,iBAAiB;IACjBC,oBAAoB;EAEpB,IAAMC,qBAAqB,GAAGT,WAAW,CACvC,UAACU,KAAmB;IAClB,IAAI,CAACL,aAAa,IAAI,CAACA,aAAa,CAACM,OAAO,IAAI,CAACL,SAAS,IAAI,CAACA,SAAS,CAACK,OAAO,EAAE;MAChF;;IAGF,IAAIP,QAAQ,KAAK,MAAM,EAAE;MACvB,IAAMQ,YAAY,GAAGF,KAAK,CAACG,OAAO;MAElC;MACA,IAAMC,YAAY,GAAGR,SAAS,CAACK,OAAO,CAACI,qBAAqB,EAAE,CAACC,KAAK,GAAG,CAAC;MACxE,IAAMA,KAAK,GAAGX,aAAa,CAACM,OAAO,CAACI,qBAAqB,EAAE,CAACE,KAAK,GAAGL,YAAY,GAAGE,YAAY;MAE/FP,iBAAiB,CAACS,KAAK,CAAC;KACzB,MAAM;MACL,IAAME,YAAY,GAAGR,KAAK,CAACS,OAAO;MAElC;MACA,IAAML,YAAY,GAAGR,SAAS,CAACK,OAAO,CAACI,qBAAqB,EAAE,CAACK,MAAM,GAAG,CAAC;MACzE,IAAMA,MAAM,GAAGf,aAAa,CAACM,OAAO,CAACI,qBAAqB,EAAE,CAACM,MAAM,GAAGH,YAAY,GAAGJ,YAAY;MAEjGN,oBAAoB,CAACY,MAAM,CAAC;;EAEhC,CAAC,EACD,CAAChB,QAAQ,EAAEC,aAAa,EAAEC,SAAS,EAAEC,iBAAiB,EAAEC,oBAAoB,CAAC,CAC9E;EAED,IAAMc,mBAAmB,GAAGtB,WAAW,CAAC;IACtCuB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAACzB,MAAM,CAAC,eAAe,CAAC,CAAC;IACvDsB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAACzB,MAAM,CAAC,iBAAUG,QAAQ,CAAE,CAAC,CAAC;IAC5DmB,QAAQ,CAACI,mBAAmB,CAAC,WAAW,EAAEL,mBAAmB,CAAC;IAC9DC,QAAQ,CAACI,mBAAmB,CAAC,aAAa,EAAElB,qBAAqB,CAAC;EACpE,CAAC,EAAE,CAACA,qBAAqB,EAAEL,QAAQ,CAAC,CAAC;EAErC,IAAMwB,mBAAmB,GAAG5B,WAAW,CAAC;IACtCuB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACI,GAAG,CAAC5B,MAAM,CAAC,eAAe,CAAC,CAAC;IACpDsB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACI,GAAG,CAAC5B,MAAM,CAAC,iBAAUG,QAAQ,CAAE,CAAC,CAAC;IACzDmB,QAAQ,CAACO,gBAAgB,CAAC,WAAW,EAAER,mBAAmB,CAAC;IAC3DC,QAAQ,CAACO,gBAAgB,CAAC,aAAa,EAAErB,qBAAqB,CAAC;EACjE,CAAC,EAAE,CAACA,qBAAqB,EAAEa,mBAAmB,EAAElB,QAAQ,CAAC,CAAC;EAE1D,OAAOwB,mBAAmB;AAC5B,CAAC","names":["useCallback","styles","usePointerEvents","_a","position","splitPanelRef","handleRef","setSidePanelWidth","setBottomPanelHeight","onDocumentPointerMove","event","current","mouseClientX","clientX","handleOffset","getBoundingClientRect","width","right","mouseClientY","clientY","height","bottom","onDocumentPointerUp","document","body","classList","remove","removeEventListener","onSliderPointerDown","add","addEventListener"],"sources":["/Users/dcastro/node_modules/src/split-panel/utils/use-pointer-events.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback } from 'react';\nimport { SizeControlProps } from '../interfaces';\nimport styles from '../styles.css.js';\n\nexport const usePointerEvents = ({\n  position,\n  splitPanelRef,\n  handleRef,\n  setSidePanelWidth,\n  setBottomPanelHeight,\n}: SizeControlProps) => {\n  const onDocumentPointerMove = useCallback(\n    (event: PointerEvent) => {\n      if (!splitPanelRef || !splitPanelRef.current || !handleRef || !handleRef.current) {\n        return;\n      }\n\n      if (position === 'side') {\n        const mouseClientX = event.clientX;\n\n        // The handle offset aligns the cursor with the middle of the resize handle.\n        const handleOffset = handleRef.current.getBoundingClientRect().width / 2;\n        const width = splitPanelRef.current.getBoundingClientRect().right - mouseClientX + handleOffset;\n\n        setSidePanelWidth(width);\n      } else {\n        const mouseClientY = event.clientY;\n\n        // The handle offset aligns the cursor with the middle of the resize handle.\n        const handleOffset = handleRef.current.getBoundingClientRect().height / 2;\n        const height = splitPanelRef.current.getBoundingClientRect().bottom - mouseClientY + handleOffset;\n\n        setBottomPanelHeight(height);\n      }\n    },\n    [position, splitPanelRef, handleRef, setSidePanelWidth, setBottomPanelHeight]\n  );\n\n  const onDocumentPointerUp = useCallback(() => {\n    document.body.classList.remove(styles['resize-active']);\n    document.body.classList.remove(styles[`resize-${position}`]);\n    document.removeEventListener('pointerup', onDocumentPointerUp);\n    document.removeEventListener('pointermove', onDocumentPointerMove);\n  }, [onDocumentPointerMove, position]);\n\n  const onSliderPointerDown = useCallback(() => {\n    document.body.classList.add(styles['resize-active']);\n    document.body.classList.add(styles[`resize-${position}`]);\n    document.addEventListener('pointerup', onDocumentPointerUp);\n    document.addEventListener('pointermove', onDocumentPointerMove);\n  }, [onDocumentPointerMove, onDocumentPointerUp, position]);\n\n  return onSliderPointerDown;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}