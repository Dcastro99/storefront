{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { data as allProducts } from '../assets/dummyData/data';\nimport Chance from 'chance';\nconst chance = new Chance();\nconst initialState = {\n  detailItems: [],\n  productSelected: allProducts,\n  category: '',\n  allProducts,\n  inventory: ''\n};\nexport const productSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    selectCategory(state, action) {\n      state.category = action.payload;\n      state.productSelected = state.category === 'all' ? state.allProducts : state.allProducts.filter(x => x.category === state.category);\n    },\n    productDecrement(state, action) {\n      let item = state.allProducts.find(x => x.id === action.payload.id);\n      item.inventory--;\n      state.productSelected = state.category === 'all' ? state.allProducts : state.allProducts.filter(x => x.category === state.category);\n      for (const product of action.payload) {}\n    },\n    productIncrement(state, action) {\n      let item = state.allProducts.find(x => x.id === action.payload.id);\n      item.inventory++;\n      state.productSelected = state.category === 'all' ? state.allProducts : state.allProducts.filter(x => x.category === state.category);\n    },\n    showDetail(state, action) {\n      state.detailItems.push(action.payload);\n    }\n  }\n});\nexport const {\n  productIncrement\n} = productSlice.actions;\nexport const {\n  showDetail\n} = productSlice.actions;\nexport const {\n  selectCategory,\n  productDecrement\n} = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","data","allProducts","Chance","chance","initialState","detailItems","productSelected","category","inventory","productSlice","name","reducers","selectCategory","state","action","payload","filter","x","productDecrement","item","find","id","product","productIncrement","showDetail","push","actions","reducer"],"sources":["/Users/dcastro/CodeFellows-projects/storefront/Frontend/src/store/productSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { data as allProducts } from '../assets/dummyData/data';\nimport Chance from 'chance';\nconst chance = new Chance();\n\n\n\n\nconst initialState = {\n  detailItems: [],\n  productSelected: allProducts,\n  category: '',\n  allProducts,\n  inventory: ''\n}\n\nexport const productSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    selectCategory(state, action) {\n\n      state.category = action.payload;\n\n      state.productSelected = state.category === 'all' ? state.allProducts : state.allProducts.filter\n        ((x) => x.category === state.category);\n    },\n\n\n    productDecrement(state, action) {\n\n\n      let item = state.allProducts.find(x => x.id === action.payload.id);\n      item.inventory--;\n\n      state.productSelected = state.category === 'all' ? state.allProducts : state.allProducts.filter\n        ((x) => x.category === state.category);\n\n      for (const product of action.payload) {\n\n      }\n    },\n\n    productIncrement(state, action) {\n      let item = state.allProducts.find(x => x.id === action.payload.id);\n      item.inventory++;\n\n      state.productSelected = state.category === 'all' ? state.allProducts : state.allProducts.filter\n        ((x) => x.category === state.category);\n\n    },\n\n    showDetail(state, action) {\n      state.detailItems.push(action.payload);\n    },\n\n\n\n  }\n});\n\nexport const { productIncrement } = productSlice.actions;\nexport const { showDetail } = productSlice.actions;\nexport const { selectCategory, productDecrement } = productSlice.actions;\n\nexport default productSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,IAAIC,WAAW,QAAQ,0BAA0B;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,MAAMC,MAAM,GAAG,IAAID,MAAM,EAAE;AAK3B,MAAME,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,eAAe,EAAEL,WAAW;EAC5BM,QAAQ,EAAE,EAAE;EACZN,WAAW;EACXO,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGV,WAAW,CAAC;EACtCW,IAAI,EAAE,UAAU;EAChBN,YAAY;EACZO,QAAQ,EAAE;IACRC,cAAc,CAACC,KAAK,EAAEC,MAAM,EAAE;MAE5BD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO;MAE/BF,KAAK,CAACP,eAAe,GAAGO,KAAK,CAACN,QAAQ,KAAK,KAAK,GAAGM,KAAK,CAACZ,WAAW,GAAGY,KAAK,CAACZ,WAAW,CAACe,MAAM,CAC3FC,CAAC,IAAKA,CAAC,CAACV,QAAQ,KAAKM,KAAK,CAACN,QAAQ,CAAC;IAC1C,CAAC;IAGDW,gBAAgB,CAACL,KAAK,EAAEC,MAAM,EAAE;MAG9B,IAAIK,IAAI,GAAGN,KAAK,CAACZ,WAAW,CAACmB,IAAI,CAACH,CAAC,IAAIA,CAAC,CAACI,EAAE,KAAKP,MAAM,CAACC,OAAO,CAACM,EAAE,CAAC;MAClEF,IAAI,CAACX,SAAS,EAAE;MAEhBK,KAAK,CAACP,eAAe,GAAGO,KAAK,CAACN,QAAQ,KAAK,KAAK,GAAGM,KAAK,CAACZ,WAAW,GAAGY,KAAK,CAACZ,WAAW,CAACe,MAAM,CAC3FC,CAAC,IAAKA,CAAC,CAACV,QAAQ,KAAKM,KAAK,CAACN,QAAQ,CAAC;MAExC,KAAK,MAAMe,OAAO,IAAIR,MAAM,CAACC,OAAO,EAAE,CAEtC;IACF,CAAC;IAEDQ,gBAAgB,CAACV,KAAK,EAAEC,MAAM,EAAE;MAC9B,IAAIK,IAAI,GAAGN,KAAK,CAACZ,WAAW,CAACmB,IAAI,CAACH,CAAC,IAAIA,CAAC,CAACI,EAAE,KAAKP,MAAM,CAACC,OAAO,CAACM,EAAE,CAAC;MAClEF,IAAI,CAACX,SAAS,EAAE;MAEhBK,KAAK,CAACP,eAAe,GAAGO,KAAK,CAACN,QAAQ,KAAK,KAAK,GAAGM,KAAK,CAACZ,WAAW,GAAGY,KAAK,CAACZ,WAAW,CAACe,MAAM,CAC3FC,CAAC,IAAKA,CAAC,CAACV,QAAQ,KAAKM,KAAK,CAACN,QAAQ,CAAC;IAE1C,CAAC;IAEDiB,UAAU,CAACX,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACR,WAAW,CAACoB,IAAI,CAACX,MAAM,CAACC,OAAO,CAAC;IACxC;EAIF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ;AAAiB,CAAC,GAAGd,YAAY,CAACiB,OAAO;AACxD,OAAO,MAAM;EAAEF;AAAW,CAAC,GAAGf,YAAY,CAACiB,OAAO;AAClD,OAAO,MAAM;EAAEd,cAAc;EAAEM;AAAiB,CAAC,GAAGT,YAAY,CAACiB,OAAO;AAExE,eAAejB,YAAY,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}