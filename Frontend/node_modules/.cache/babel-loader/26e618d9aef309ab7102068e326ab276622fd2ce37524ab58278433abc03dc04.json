{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalLink from '../link/internal';\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nvar Statuses;\n(function (Statuses) {\n  Statuses[\"Active\"] = \"active\";\n  Statuses[\"Unvisited\"] = \"unvisited\";\n  Statuses[\"Visited\"] = \"visited\";\n  Statuses[\"Next\"] = \"next\";\n})(Statuses || (Statuses = {}));\nexport default function Navigation(_a) {\n  var activeStepIndex = _a.activeStepIndex,\n    farthestStepIndex = _a.farthestStepIndex,\n    allowSkipTo = _a.allowSkipTo,\n    hidden = _a.hidden,\n    i18nStrings = _a.i18nStrings,\n    isVisualRefresh = _a.isVisualRefresh,\n    isLoadingNextStep = _a.isLoadingNextStep,\n    onStepClick = _a.onStepClick,\n    onSkipToClick = _a.onSkipToClick,\n    steps = _a.steps;\n  return React.createElement(\"nav\", {\n    className: clsx(styles.navigation, hidden && styles.hidden, isVisualRefresh && styles.refresh),\n    \"aria-label\": i18nStrings.navigationAriaLabel\n  }, React.createElement(\"ul\", null, steps.map(function (step, index) {\n    return isVisualRefresh ? React.createElement(NavigationStepVisualRefresh, {\n      i18nStrings: i18nStrings,\n      index: index,\n      key: index,\n      onStepClick: onStepClick,\n      onSkipToClick: onSkipToClick,\n      status: getStatus(index),\n      step: step\n    }) : React.createElement(NavigationStepClassic, {\n      i18nStrings: i18nStrings,\n      index: index,\n      key: index,\n      onStepClick: onStepClick,\n      onSkipToClick: onSkipToClick,\n      status: getStatus(index),\n      step: step\n    });\n  })));\n  function getStatus(index) {\n    if (activeStepIndex === index) {\n      return Statuses.Active;\n    }\n    if (isLoadingNextStep) {\n      return Statuses.Unvisited;\n    }\n    if (farthestStepIndex >= index) {\n      return Statuses.Visited;\n    }\n    if (allowSkipTo && canSkip(activeStepIndex + 1, index)) {\n      return Statuses.Next;\n    }\n    return Statuses.Unvisited;\n  }\n  function canSkip(fromIndex, toIndex) {\n    var index = fromIndex;\n    do {\n      if (!steps[index].isOptional) {\n        return false;\n      }\n      index++;\n    } while (index < toIndex);\n    return true;\n  }\n}\nfunction NavigationStepVisualRefresh(_a) {\n  var _b;\n  var i18nStrings = _a.i18nStrings,\n    index = _a.index,\n    onStepClick = _a.onStepClick,\n    onSkipToClick = _a.onSkipToClick,\n    status = _a.status,\n    step = _a.step;\n  function handleStepInteraction() {\n    if (status === Statuses.Visited) {\n      onStepClick(index);\n    }\n    if (status === Statuses.Next) {\n      onSkipToClick(index);\n    }\n  }\n  var state = {\n    active: 'active',\n    unvisited: 'disabled',\n    visited: 'enabled',\n    next: 'enabled'\n  }[status];\n  var linkClassName = clsx(styles['navigation-link'], (_b = {}, _b[styles['navigation-link-active']] = status === Statuses.Active, _b[styles['navigation-link-disabled']] = status === Statuses.Unvisited, _b));\n  return React.createElement(\"li\", {\n    className: clsx(styles[\"\".concat(state)], styles['navigation-link-item'])\n  }, React.createElement(\"hr\", null), React.createElement(\"span\", {\n    className: clsx(styles.number, styles['navigation-link-label'])\n  }, i18nStrings.stepNumberLabel && i18nStrings.stepNumberLabel(index + 1), step.isOptional && React.createElement(\"i\", null, \" - \".concat(i18nStrings.optional))), React.createElement(\"a\", {\n    className: linkClassName,\n    \"aria-current\": status === Statuses.Active ? 'step' : undefined,\n    \"aria-disabled\": status === Statuses.Unvisited ? 'true' : undefined,\n    onClick: function (event) {\n      event.preventDefault();\n      handleStepInteraction();\n    },\n    onKeyDown: function (event) {\n      if (event.key === ' ' || event.key === 'Enter') {\n        event.preventDefault();\n      }\n      // Enter activates the button on key down instead of key up.\n      if (event.key === 'Enter') {\n        handleStepInteraction();\n      }\n    },\n    onKeyUp: function (event) {\n      // Emulate button behavior, which also fires on space.\n      if (event.key === ' ') {\n        handleStepInteraction();\n      }\n    },\n    role: \"button\",\n    tabIndex: status === Statuses.Visited || status === Statuses.Next ? 0 : undefined\n  }, React.createElement(\"div\", {\n    className: clsx(styles.circle)\n  }), React.createElement(\"span\", {\n    className: clsx(styles.title)\n  }, step.title)));\n}\nfunction NavigationStepClassic(_a) {\n  var i18nStrings = _a.i18nStrings,\n    index = _a.index,\n    onStepClick = _a.onStepClick,\n    onSkipToClick = _a.onSkipToClick,\n    status = _a.status,\n    step = _a.step;\n  var spanClassName = clsx(styles['navigation-link'], status === Statuses.Active ? styles['navigation-link-active'] : styles['navigation-link-disabled']);\n  return React.createElement(\"li\", {\n    className: styles['navigation-link-item']\n  }, React.createElement(InternalBox, {\n    variant: \"small\",\n    className: styles['navigation-link-label'],\n    display: \"block\",\n    margin: {\n      bottom: 'xxs'\n    }\n  }, i18nStrings.stepNumberLabel && i18nStrings.stepNumberLabel(index + 1), step.isOptional && React.createElement(\"i\", null, \" - \".concat(i18nStrings.optional))), React.createElement(\"div\", null, status === Statuses.Visited || status === Statuses.Next ? React.createElement(InternalLink, {\n    className: clsx(styles['navigation-link']),\n    onFollow: function (evt) {\n      evt.preventDefault();\n      status === Statuses.Visited ? onStepClick(index) : onSkipToClick(index);\n    }\n  }, step.title) : React.createElement(\"span\", {\n    className: spanClassName,\n    \"aria-current\": status === Statuses.Active ? 'step' : undefined,\n    \"aria-disabled\": status === Statuses.Active ? undefined : 'true'\n  }, step.title)));\n}","map":{"version":3,"mappings":"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","names":["React","clsx","InternalLink","InternalBox","styles","Statuses","Navigation","_a","activeStepIndex","farthestStepIndex","allowSkipTo","hidden","i18nStrings","isVisualRefresh","isLoadingNextStep","onStepClick","onSkipToClick","steps","className","navigation","refresh","navigationAriaLabel","map","step","index","NavigationStepVisualRefresh","key","status","getStatus","NavigationStepClassic","Active","Unvisited","Visited","canSkip","Next","fromIndex","toIndex","isOptional","handleStepInteraction","state","active","unvisited","visited","next","linkClassName","_b","number","stepNumberLabel","optional","undefined","onClick","event","preventDefault","onKeyDown","onKeyUp","role","tabIndex","circle","title","spanClassName","variant","display","margin","bottom","onFollow","evt"],"sources":["/Users/dcastro/node_modules/src/wizard/wizard-navigation.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalLink from '../link/internal';\nimport InternalBox from '../box/internal';\nimport { WizardProps } from './interfaces';\nimport styles from './styles.css.js';\n\ninterface NavigationProps {\n  activeStepIndex: number;\n  farthestStepIndex: number;\n  allowSkipTo: boolean;\n  hidden: boolean;\n  i18nStrings: WizardProps.I18nStrings;\n  isVisualRefresh: boolean;\n  isLoadingNextStep: boolean;\n  onStepClick: (stepIndex: number) => void;\n  onSkipToClick: (stepIndex: number) => void;\n  steps: ReadonlyArray<WizardProps.Step>;\n}\n\ninterface NavigationStepProps {\n  i18nStrings: WizardProps.I18nStrings;\n  index: number;\n  onStepClick: (stepIndex: number) => void;\n  onSkipToClick: (stepIndex: number) => void;\n  status: string;\n  step: WizardProps.Step;\n}\n\nenum Statuses {\n  Active = 'active',\n  Unvisited = 'unvisited',\n  Visited = 'visited',\n  Next = 'next',\n}\n\nexport default function Navigation({\n  activeStepIndex,\n  farthestStepIndex,\n  allowSkipTo,\n  hidden,\n  i18nStrings,\n  isVisualRefresh,\n  isLoadingNextStep,\n  onStepClick,\n  onSkipToClick,\n  steps,\n}: NavigationProps) {\n  return (\n    <nav\n      className={clsx(styles.navigation, hidden && styles.hidden, isVisualRefresh && styles.refresh)}\n      aria-label={i18nStrings.navigationAriaLabel}\n    >\n      <ul>\n        {steps.map((step, index: number) =>\n          isVisualRefresh ? (\n            <NavigationStepVisualRefresh\n              i18nStrings={i18nStrings}\n              index={index}\n              key={index}\n              onStepClick={onStepClick}\n              onSkipToClick={onSkipToClick}\n              status={getStatus(index)}\n              step={step}\n            />\n          ) : (\n            <NavigationStepClassic\n              i18nStrings={i18nStrings}\n              index={index}\n              key={index}\n              onStepClick={onStepClick}\n              onSkipToClick={onSkipToClick}\n              status={getStatus(index)}\n              step={step}\n            />\n          )\n        )}\n      </ul>\n    </nav>\n  );\n\n  function getStatus(index: number) {\n    if (activeStepIndex === index) {\n      return Statuses.Active;\n    }\n    if (isLoadingNextStep) {\n      return Statuses.Unvisited;\n    }\n    if (farthestStepIndex >= index) {\n      return Statuses.Visited;\n    }\n    if (allowSkipTo && canSkip(activeStepIndex + 1, index)) {\n      return Statuses.Next;\n    }\n    return Statuses.Unvisited;\n  }\n\n  function canSkip(fromIndex: number, toIndex: number) {\n    let index = fromIndex;\n    do {\n      if (!steps[index].isOptional) {\n        return false;\n      }\n      index++;\n    } while (index < toIndex);\n    return true;\n  }\n}\n\nfunction NavigationStepVisualRefresh({\n  i18nStrings,\n  index,\n  onStepClick,\n  onSkipToClick,\n  status,\n  step,\n}: NavigationStepProps) {\n  function handleStepInteraction() {\n    if (status === Statuses.Visited) {\n      onStepClick(index);\n    }\n    if (status === Statuses.Next) {\n      onSkipToClick(index);\n    }\n  }\n\n  const state = {\n    active: 'active',\n    unvisited: 'disabled',\n    visited: 'enabled',\n    next: 'enabled',\n  }[status];\n\n  const linkClassName = clsx(styles['navigation-link'], {\n    [styles['navigation-link-active']]: status === Statuses.Active,\n    [styles['navigation-link-disabled']]: status === Statuses.Unvisited,\n  });\n\n  return (\n    <li className={clsx(styles[`${state}`], styles['navigation-link-item'])}>\n      <hr />\n\n      <span className={clsx(styles.number, styles['navigation-link-label'])}>\n        {i18nStrings.stepNumberLabel && i18nStrings.stepNumberLabel(index + 1)}\n        {step.isOptional && <i>{` - ${i18nStrings.optional}`}</i>}\n      </span>\n\n      <a\n        className={linkClassName}\n        aria-current={status === Statuses.Active ? 'step' : undefined}\n        aria-disabled={status === Statuses.Unvisited ? 'true' : undefined}\n        onClick={event => {\n          event.preventDefault();\n          handleStepInteraction();\n        }}\n        onKeyDown={event => {\n          if (event.key === ' ' || event.key === 'Enter') {\n            event.preventDefault();\n          }\n          // Enter activates the button on key down instead of key up.\n          if (event.key === 'Enter') {\n            handleStepInteraction();\n          }\n        }}\n        onKeyUp={event => {\n          // Emulate button behavior, which also fires on space.\n          if (event.key === ' ') {\n            handleStepInteraction();\n          }\n        }}\n        role=\"button\"\n        tabIndex={status === Statuses.Visited || status === Statuses.Next ? 0 : undefined}\n      >\n        <div className={clsx(styles.circle)} />\n\n        <span className={clsx(styles.title)}>{step.title}</span>\n      </a>\n    </li>\n  );\n}\n\nfunction NavigationStepClassic({ i18nStrings, index, onStepClick, onSkipToClick, status, step }: NavigationStepProps) {\n  const spanClassName = clsx(\n    styles['navigation-link'],\n    status === Statuses.Active ? styles['navigation-link-active'] : styles['navigation-link-disabled']\n  );\n\n  return (\n    <li className={styles['navigation-link-item']}>\n      <InternalBox\n        variant=\"small\"\n        className={styles['navigation-link-label']}\n        display=\"block\"\n        margin={{ bottom: 'xxs' }}\n      >\n        {i18nStrings.stepNumberLabel && i18nStrings.stepNumberLabel(index + 1)}\n        {step.isOptional && <i>{` - ${i18nStrings.optional}`}</i>}\n      </InternalBox>\n      <div>\n        {status === Statuses.Visited || status === Statuses.Next ? (\n          <InternalLink\n            className={clsx(styles['navigation-link'])}\n            onFollow={evt => {\n              evt.preventDefault();\n              status === Statuses.Visited ? onStepClick(index) : onSkipToClick(index);\n            }}\n          >\n            {step.title}\n          </InternalLink>\n        ) : (\n          <span\n            className={spanClassName}\n            aria-current={status === Statuses.Active ? 'step' : undefined}\n            aria-disabled={status === Statuses.Active ? undefined : 'true'}\n          >\n            {step.title}\n          </span>\n        )}\n      </div>\n    </li>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}