{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport RadioButton from '../radio-group/radio-button';\nimport styles from './styles.css.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar COLUMN_TRIGGERS = ['default', 'xxs', 'xs'];\nexport default function InternalTiles(_a) {\n  var value = _a.value,\n    items = _a.items,\n    ariaLabel = _a.ariaLabel,\n    ariaRequired = _a.ariaRequired,\n    columns = _a.columns,\n    onChange = _a.onChange,\n    _b = _a.__internalRootRef,\n    __internalRootRef = _b === void 0 ? null : _b,\n    rest = __rest(_a, [\"value\", \"items\", \"ariaLabel\", \"ariaRequired\", \"columns\", \"onChange\", \"__internalRootRef\"]);\n  var getColumns = function () {\n    if (columns) {\n      return columns;\n    }\n    var nItems = items ? items.length : 0;\n    var columnsLookup = {\n      0: 1,\n      1: 1,\n      2: 2,\n      4: 2,\n      8: 2\n    };\n    return columnsLookup[nItems] || 3;\n  };\n  var _c = useFormFieldContext(rest),\n    ariaDescribedby = _c.ariaDescribedby,\n    ariaLabelledby = _c.ariaLabelledby;\n  var baseProps = getBaseProps(rest);\n  var generatedName = useUniqueId('awsui-tiles-');\n  var nColumns = getColumns();\n  var _d = useContainerBreakpoints(COLUMN_TRIGGERS),\n    breakpoint = _d[0],\n    ref = _d[1];\n  var mergedRef = useMergeRefs(ref, __internalRootRef);\n  return React.createElement(\"div\", __assign({\n    role: \"radiogroup\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-required\": ariaRequired\n  }, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(\"div\", {\n    className: clsx(styles.columns, styles[\"column-\".concat(nColumns)])\n  }, items && items.map(function (item) {\n    var _a, _b, _c, _d, _e;\n    var controlId = item.controlId || \"\".concat(generatedName, \"-value-\").concat(item.value);\n    return React.createElement(\"label\", {\n      className: clsx(styles['tile-container'], (_a = {}, _a[styles['has-metadata']] = item.description || item.image, _a), (_b = {}, _b[styles.selected] = item.value === value, _b), (_c = {}, _c[styles.disabled] = !!item.disabled, _c), styles[\"breakpoint-\".concat(breakpoint)]),\n      key: item.value,\n      \"data-value\": item.value,\n      htmlFor: controlId,\n      id: \"\".concat(controlId, \"-wrapper\")\n    }, React.createElement(\"div\", {\n      className: clsx(styles.control, (_d = {}, _d[styles['no-image']] = !item.image, _d))\n    }, React.createElement(RadioButton, {\n      checked: item.value === value,\n      name: generatedName,\n      withoutLabel: true,\n      value: item.value,\n      label: item.label,\n      description: item.description,\n      disabled: item.disabled,\n      onChange: onChange,\n      controlId: controlId\n    })), item.image && React.createElement(\"div\", {\n      className: clsx(styles.image, (_e = {}, _e[styles.disabled] = !!item.disabled, _e))\n    }, item.image));\n  })));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,YAAY,QAAQ,4BAA4B;AAEzD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,SAASC,mBAAmB,QAAQ,wCAAwC;AAC5E,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,uBAAuB,QAAQ,qCAAqC;AAE7E,SAASC,YAAY,QAAQ,kCAAkC;AAE/D,IAAMC,eAAe,GAA4B,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC;AAIzE,eAAc,SAAUC,aAAa,CAACC,EASjB;EARnB,SAAK;IACLC,KAAK;IACLC,SAAS;IACTC,YAAY;IACZC,OAAO;IACPC,QAAQ;IACRC,yBAAwB;IAAxBC,iBAAiB,mBAAG,IAAI;IACrBC,IAAI,cAR6B,2FASrC,CADQ;EAEP,IAAMC,UAAU,GAAG;IACjB,IAAIL,OAAO,EAAE;MACX,OAAOA,OAAO;;IAGhB,IAAMM,MAAM,GAAGT,KAAK,GAAGA,KAAK,CAACU,MAAM,GAAG,CAAC;IACvC,IAAMC,aAAa,GAA2B;MAC5C,CAAC,EAAE,CAAC;MACJ,CAAC,EAAE,CAAC;MACJ,CAAC,EAAE,CAAC;MACJ,CAAC,EAAE,CAAC;MACJ,CAAC,EAAE;KACJ;IACD,OAAOA,aAAa,CAACF,MAAM,CAAC,IAAI,CAAC;EACnC,CAAC;EACK,SAAsChB,mBAAmB,CAACc,IAAI,CAAC;IAA7DK,eAAe;IAAEC,cAAc,oBAA8B;EACrE,IAAMC,SAAS,GAAGxB,YAAY,CAACiB,IAAI,CAAC;EACpC,IAAMQ,aAAa,GAAGrB,WAAW,CAAC,cAAc,CAAC;EACjD,IAAMsB,QAAQ,GAAGR,UAAU,EAAE;EACvB,SAAoBb,uBAAuB,CAACE,eAAe,CAAC;IAA3DoB,UAAU;IAAEC,GAAG,QAA4C;EAClE,IAAMC,SAAS,GAAGvB,YAAY,CAACsB,GAAG,EAAEZ,iBAAiB,CAAC;EAEtD,OACEjB;IACE+B,IAAI,EAAC,YAAY;IAAA,cACLnB,SAAS;IAAA,mBACJY,cAAc;IAAA,oBACbD,eAAe;IAAA,iBAClBV;EAAY,GACvBY,SAAS;IACbO,SAAS,EAAEjC,IAAI,CAAC0B,SAAS,CAACO,SAAS,EAAE7B,MAAM,CAAC8B,IAAI,CAAC;IACjDJ,GAAG,EAAEC;EAAS,IAEd9B;IAAKgC,SAAS,EAAEjC,IAAI,CAACI,MAAM,CAACW,OAAO,EAAEX,MAAM,CAAC,iBAAUwB,QAAQ,CAAE,CAAC;EAAC,GAC/DhB,KAAK,IACJA,KAAK,CAACuB,GAAG,CAAC,cAAI;;IACZ,IAAMC,SAAS,GAAGC,IAAI,CAACD,SAAS,IAAI,UAAGT,aAAa,oBAAUU,IAAI,CAACC,KAAK,CAAE;IAC1E,OACErC;MACEgC,SAAS,EAAEjC,IAAI,CACbI,MAAM,CAAC,gBAAgB,CAAC,YACtBO,GAACP,MAAM,CAAC,cAAc,CAAC,IAAGiC,IAAI,CAACE,WAAW,IAAIF,IAAI,CAACG,KAAK,iBACxDvB,GAACb,MAAM,CAACqC,QAAQ,IAAGJ,IAAI,CAACC,KAAK,KAAKA,KAAK,iBACvCI,GAACtC,MAAM,CAACuC,QAAQ,IAAG,CAAC,CAACN,IAAI,CAACM,QAAQ,OACpCvC,MAAM,CAAC,qBAAcyB,UAAU,CAAE,CAAC,CACnC;MACDe,GAAG,EAAEP,IAAI,CAACC,KAAK;MAAA,cACHD,IAAI,CAACC,KAAK;MACtBO,OAAO,EAAET,SAAS;MAClBU,EAAE,EAAE,UAAGV,SAAS;IAAU,GAE1BnC;MAAKgC,SAAS,EAAEjC,IAAI,CAACI,MAAM,CAAC2C,OAAO,YAAIC,GAAC5C,MAAM,CAAC,UAAU,CAAC,IAAG,CAACiC,IAAI,CAACG,KAAK;IAAG,GACzEvC,oBAACE,WAAW;MACV8C,OAAO,EAAEZ,IAAI,CAACC,KAAK,KAAKA,KAAK;MAC7BY,IAAI,EAAEvB,aAAa;MACnBwB,YAAY,EAAE,IAAI;MAClBb,KAAK,EAAED,IAAI,CAACC,KAAK;MACjBc,KAAK,EAAEf,IAAI,CAACe,KAAK;MACjBb,WAAW,EAAEF,IAAI,CAACE,WAAW;MAC7BI,QAAQ,EAAEN,IAAI,CAACM,QAAQ;MACvB3B,QAAQ,EAAEA,QAAQ;MAClBoB,SAAS,EAAEA;IAAS,EACpB,CACE,EACLC,IAAI,CAACG,KAAK,IACTvC;MAAKgC,SAAS,EAAEjC,IAAI,CAACI,MAAM,CAACoC,KAAK,YAAIa,GAACjD,MAAM,CAACuC,QAAQ,IAAG,CAAC,CAACN,IAAI,CAACM,QAAQ;IAAG,GAAGN,IAAI,CAACG,KAAK,CACxF,CACK;EAEZ,CAAC,CAAC,CACA,CACF;AAEV","names":["clsx","React","getBaseProps","RadioButton","styles","useFormFieldContext","useUniqueId","useContainerBreakpoints","useMergeRefs","COLUMN_TRIGGERS","InternalTiles","_a","items","ariaLabel","ariaRequired","columns","onChange","_b","__internalRootRef","rest","getColumns","nItems","length","columnsLookup","ariaDescribedby","ariaLabelledby","baseProps","generatedName","nColumns","breakpoint","ref","mergedRef","role","className","root","map","controlId","item","value","description","image","selected","_c","disabled","key","htmlFor","id","control","_d","checked","name","withoutLabel","label","_e"],"sources":["/Users/dcastro/node_modules/src/tiles/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { TilesProps } from './interfaces';\nimport RadioButton from '../radio-group/radio-button';\nimport styles from './styles.css.js';\n\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nconst COLUMN_TRIGGERS: TilesProps.Breakpoint[] = ['default', 'xxs', 'xs'];\n\ntype InternalTilesProps = TilesProps & InternalBaseComponentProps;\n\nexport default function InternalTiles({\n  value,\n  items,\n  ariaLabel,\n  ariaRequired,\n  columns,\n  onChange,\n  __internalRootRef = null,\n  ...rest\n}: InternalTilesProps) {\n  const getColumns = () => {\n    if (columns) {\n      return columns;\n    }\n\n    const nItems = items ? items.length : 0;\n    const columnsLookup: Record<number, number> = {\n      0: 1,\n      1: 1,\n      2: 2,\n      4: 2,\n      8: 2,\n    };\n    return columnsLookup[nItems] || 3;\n  };\n  const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);\n  const baseProps = getBaseProps(rest);\n  const generatedName = useUniqueId('awsui-tiles-');\n  const nColumns = getColumns();\n  const [breakpoint, ref] = useContainerBreakpoints(COLUMN_TRIGGERS);\n  const mergedRef = useMergeRefs(ref, __internalRootRef);\n\n  return (\n    <div\n      role=\"radiogroup\"\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledby}\n      aria-describedby={ariaDescribedby}\n      aria-required={ariaRequired}\n      {...baseProps}\n      className={clsx(baseProps.className, styles.root)}\n      ref={mergedRef}\n    >\n      <div className={clsx(styles.columns, styles[`column-${nColumns}`])}>\n        {items &&\n          items.map(item => {\n            const controlId = item.controlId || `${generatedName}-value-${item.value}`;\n            return (\n              <label\n                className={clsx(\n                  styles['tile-container'],\n                  { [styles['has-metadata']]: item.description || item.image },\n                  { [styles.selected]: item.value === value },\n                  { [styles.disabled]: !!item.disabled },\n                  styles[`breakpoint-${breakpoint}`]\n                )}\n                key={item.value}\n                data-value={item.value}\n                htmlFor={controlId}\n                id={`${controlId}-wrapper`}\n              >\n                <div className={clsx(styles.control, { [styles['no-image']]: !item.image })}>\n                  <RadioButton\n                    checked={item.value === value}\n                    name={generatedName}\n                    withoutLabel={true}\n                    value={item.value}\n                    label={item.label}\n                    description={item.description}\n                    disabled={item.disabled}\n                    onChange={onChange}\n                    controlId={controlId}\n                  />\n                </div>\n                {item.image && (\n                  <div className={clsx(styles.image, { [styles.disabled]: !!item.disabled })}>{item.image}</div>\n                )}\n              </label>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}