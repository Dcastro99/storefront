{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useEffect, memo, useRef } from 'react';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport ChartPlot from '../internal/components/chart-plot';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport LeftLabels from '../internal/components/cartesian-chart/left-labels';\nimport BottomLabels from '../internal/components/cartesian-chart/bottom-labels';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport AreaDataSeries from './elements/data-series';\nimport AreaChartPopover from './elements/chart-popover';\nimport AreaHighlightedPoint from './elements/highlighted-point';\nimport AreaVerticalMarker from './elements/vertical-marker';\nimport styles from './styles.css.js';\nimport useHighlightDetails from './elements/use-highlight-details';\nimport useContainerWidth from '../internal/utils/use-container-width';\nvar DEFAULT_CHART_WIDTH = 500;\nvar LEFT_LABELS_MARGIN = 16;\nvar BOTTOM_LABELS_OFFSET = 12;\nexport default memo(ChartContainer);\nfunction ChartContainer(_a) {\n  var model = _a.model,\n    autoWidth = _a.autoWidth,\n    xTitle = _a.xTitle,\n    yTitle = _a.yTitle,\n    detailPopoverSize = _a.detailPopoverSize,\n    ariaLabel = _a.ariaLabel,\n    ariaLabelledby = _a.ariaLabelledby,\n    ariaDescription = _a.ariaDescription,\n    _b = _a.i18nStrings,\n    _c = _b === void 0 ? {} : _b,\n    xTickFormatter = _c.xTickFormatter,\n    yTickFormatter = _c.yTickFormatter,\n    detailTotalFormatter = _c.detailTotalFormatter,\n    detailTotalLabel = _c.detailTotalLabel,\n    chartAriaRoleDescription = _c.chartAriaRoleDescription,\n    xAxisAriaRoleDescription = _c.xAxisAriaRoleDescription,\n    yAxisAriaRoleDescription = _c.yAxisAriaRoleDescription,\n    detailPopoverDismissAriaLabel = _c.detailPopoverDismissAriaLabel;\n  var _d = useState(0),\n    leftLabelsWidth = _d[0],\n    setLeftLabelsWidth = _d[1];\n  var _e = useState(0),\n    bottomLabelsHeight = _e[0],\n    setBottomLabelsHeight = _e[1];\n  var _f = useContainerWidth(DEFAULT_CHART_WIDTH),\n    containerWidth = _f[0],\n    containerWidthRef = _f[1];\n  // Calculate the width of the plot area and tell it to the parent.\n  var plotWidth = Math.max(0, containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN);\n  useEffect(function () {\n    autoWidth(plotWidth);\n  }, [autoWidth, plotWidth]);\n  var highlightDetails = useHighlightDetails({\n    model: model,\n    xTickFormatter: xTickFormatter,\n    yTickFormatter: yTickFormatter,\n    detailTotalFormatter: detailTotalFormatter,\n    detailTotalLabel: detailTotalLabel\n  });\n  var highlightedPointRef = useRef(null);\n  var mergedRef = useMergeRefs(containerWidthRef, model.refs.container);\n  return React.createElement(\"div\", {\n    className: styles['chart-container'],\n    ref: mergedRef\n  }, React.createElement(AxisLabel, {\n    axis: \"y\",\n    position: \"left\",\n    title: yTitle\n  }), React.createElement(\"div\", {\n    className: styles['chart-container__horizontal']\n  }, React.createElement(LabelsMeasure, {\n    scale: model.computed.yScale,\n    ticks: model.computed.yTicks,\n    tickFormatter: yTickFormatter,\n    autoWidth: setLeftLabelsWidth\n  }), React.createElement(\"div\", {\n    className: styles['chart-container__vertical']\n  }, React.createElement(ChartPlot, {\n    ref: model.refs.plot,\n    width: model.width,\n    height: model.height,\n    offsetBottom: bottomLabelsHeight,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescription: ariaDescription,\n    ariaRoleDescription: chartAriaRoleDescription,\n    activeElementKey: !(highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.isPopoverPinned) && (highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.activeLabel),\n    activeElementRef: highlightedPointRef,\n    isClickable: !(highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.isPopoverPinned),\n    onMouseMove: model.handlers.onSVGMouseMove,\n    onMouseOut: model.handlers.onSVGMouseOut,\n    onMouseDown: model.handlers.onSVGMouseDown,\n    onKeyDown: model.handlers.onSVGKeyDown,\n    onFocus: model.handlers.onSVGFocus,\n    onBlur: model.handlers.onSVGBlur\n  }, React.createElement(LeftLabels, {\n    width: model.width,\n    height: model.height,\n    scale: model.computed.yScale,\n    ticks: model.computed.yTicks,\n    tickFormatter: yTickFormatter,\n    title: yTitle,\n    ariaRoleDescription: yAxisAriaRoleDescription\n  }), React.createElement(AreaDataSeries, {\n    model: model\n  }), React.createElement(BottomLabels, {\n    width: model.width,\n    height: model.height,\n    scale: model.computed.xScale,\n    ticks: model.computed.xTicks,\n    tickFormatter: xTickFormatter,\n    title: xTitle,\n    ariaRoleDescription: xAxisAriaRoleDescription,\n    autoHeight: setBottomLabelsHeight,\n    offsetLeft: leftLabelsWidth + BOTTOM_LABELS_OFFSET,\n    offsetRight: BOTTOM_LABELS_OFFSET\n  }), React.createElement(EmphasizedBaseline, {\n    width: model.width,\n    height: model.height,\n    scale: model.computed.yScale\n  }), React.createElement(AreaVerticalMarker, {\n    model: model\n  }), React.createElement(AreaHighlightedPoint, {\n    ref: highlightedPointRef,\n    model: model,\n    ariaLabel: highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.activeLabel\n  })), React.createElement(AxisLabel, {\n    axis: \"x\",\n    position: \"bottom\",\n    title: xTitle\n  })), React.createElement(AreaChartPopover, {\n    model: model,\n    highlightDetails: highlightDetails,\n    dismissAriaLabel: detailPopoverDismissAriaLabel,\n    size: detailPopoverSize\n  })));\n}","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","memo","useRef","useMergeRefs","ChartPlot","AxisLabel","LabelsMeasure","LeftLabels","BottomLabels","EmphasizedBaseline","AreaDataSeries","AreaChartPopover","AreaHighlightedPoint","AreaVerticalMarker","styles","useHighlightDetails","useContainerWidth","DEFAULT_CHART_WIDTH","LEFT_LABELS_MARGIN","BOTTOM_LABELS_OFFSET","ChartContainer","_a","model","autoWidth","xTitle","yTitle","detailPopoverSize","ariaLabel","ariaLabelledby","ariaDescription","_b","_c","xTickFormatter","yTickFormatter","detailTotalFormatter","detailTotalLabel","chartAriaRoleDescription","xAxisAriaRoleDescription","yAxisAriaRoleDescription","detailPopoverDismissAriaLabel","leftLabelsWidth","setLeftLabelsWidth","bottomLabelsHeight","setBottomLabelsHeight","containerWidth","containerWidthRef","plotWidth","Math","max","highlightDetails","highlightedPointRef","mergedRef","refs","container","className","ref","axis","position","title","scale","computed","yScale","ticks","yTicks","tickFormatter","plot","width","height","offsetBottom","ariaRoleDescription","activeElementKey","isPopoverPinned","activeLabel","activeElementRef","isClickable","onMouseMove","handlers","onSVGMouseMove","onMouseOut","onSVGMouseOut","onMouseDown","onSVGMouseDown","onKeyDown","onSVGKeyDown","onFocus","onSVGFocus","onBlur","onSVGBlur","xScale","xTicks","autoHeight","offsetLeft","offsetRight","dismissAriaLabel","size"],"sources":["/Users/dcastro/node_modules/src/area-chart/chart-container.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useEffect, memo, useRef } from 'react';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nimport ChartPlot from '../internal/components/chart-plot';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport LeftLabels from '../internal/components/cartesian-chart/left-labels';\nimport BottomLabels from '../internal/components/cartesian-chart/bottom-labels';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport { AreaChartProps } from './interfaces';\nimport { ChartModel } from './model';\nimport AreaDataSeries from './elements/data-series';\nimport AreaChartPopover from './elements/chart-popover';\nimport AreaHighlightedPoint from './elements/highlighted-point';\nimport AreaVerticalMarker from './elements/vertical-marker';\n\nimport styles from './styles.css.js';\nimport useHighlightDetails from './elements/use-highlight-details';\nimport useContainerWidth from '../internal/utils/use-container-width';\n\nconst DEFAULT_CHART_WIDTH = 500;\nconst LEFT_LABELS_MARGIN = 16;\nconst BOTTOM_LABELS_OFFSET = 12;\n\ntype TickFormatter = undefined | ((value: AreaChartProps.DataTypes) => string);\n\ninterface ChartContainerProps<T extends AreaChartProps.DataTypes>\n  extends Pick<\n    AreaChartProps<T>,\n    'xTitle' | 'yTitle' | 'detailPopoverSize' | 'ariaLabel' | 'ariaLabelledby' | 'ariaDescription' | 'i18nStrings'\n  > {\n  model: ChartModel<T>;\n  autoWidth: (value: number) => void;\n}\n\nexport default memo(ChartContainer) as typeof ChartContainer;\n\nfunction ChartContainer<T extends AreaChartProps.DataTypes>({\n  model,\n  autoWidth,\n  xTitle,\n  yTitle,\n  detailPopoverSize,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  i18nStrings: {\n    xTickFormatter,\n    yTickFormatter,\n    detailTotalFormatter,\n    detailTotalLabel,\n    chartAriaRoleDescription,\n    xAxisAriaRoleDescription,\n    yAxisAriaRoleDescription,\n    detailPopoverDismissAriaLabel,\n  } = {},\n}: ChartContainerProps<T>) {\n  const [leftLabelsWidth, setLeftLabelsWidth] = useState(0);\n  const [bottomLabelsHeight, setBottomLabelsHeight] = useState(0);\n  const [containerWidth, containerWidthRef] = useContainerWidth(DEFAULT_CHART_WIDTH);\n\n  // Calculate the width of the plot area and tell it to the parent.\n  const plotWidth = Math.max(0, containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN);\n  useEffect(() => {\n    autoWidth(plotWidth);\n  }, [autoWidth, plotWidth]);\n\n  const highlightDetails = useHighlightDetails({\n    model,\n    xTickFormatter,\n    yTickFormatter,\n    detailTotalFormatter,\n    detailTotalLabel,\n  });\n\n  const highlightedPointRef = useRef<SVGGElement>(null);\n\n  const mergedRef = useMergeRefs(containerWidthRef, model.refs.container);\n\n  return (\n    <div className={styles['chart-container']} ref={mergedRef}>\n      <AxisLabel axis=\"y\" position=\"left\" title={yTitle} />\n\n      <div className={styles['chart-container__horizontal']}>\n        <LabelsMeasure\n          scale={model.computed.yScale}\n          ticks={model.computed.yTicks}\n          tickFormatter={yTickFormatter as TickFormatter}\n          autoWidth={setLeftLabelsWidth}\n        />\n\n        <div className={styles['chart-container__vertical']}>\n          <ChartPlot\n            ref={model.refs.plot}\n            width={model.width}\n            height={model.height}\n            offsetBottom={bottomLabelsHeight}\n            ariaLabel={ariaLabel}\n            ariaLabelledby={ariaLabelledby}\n            ariaDescription={ariaDescription}\n            ariaRoleDescription={chartAriaRoleDescription}\n            activeElementKey={!highlightDetails?.isPopoverPinned && highlightDetails?.activeLabel}\n            activeElementRef={highlightedPointRef}\n            isClickable={!highlightDetails?.isPopoverPinned}\n            onMouseMove={model.handlers.onSVGMouseMove}\n            onMouseOut={model.handlers.onSVGMouseOut}\n            onMouseDown={model.handlers.onSVGMouseDown}\n            onKeyDown={model.handlers.onSVGKeyDown}\n            onFocus={model.handlers.onSVGFocus}\n            onBlur={model.handlers.onSVGBlur}\n          >\n            <LeftLabels\n              width={model.width}\n              height={model.height}\n              scale={model.computed.yScale}\n              ticks={model.computed.yTicks}\n              tickFormatter={yTickFormatter}\n              title={yTitle}\n              ariaRoleDescription={yAxisAriaRoleDescription}\n            />\n\n            <AreaDataSeries model={model} />\n\n            <BottomLabels\n              width={model.width}\n              height={model.height}\n              scale={model.computed.xScale}\n              ticks={model.computed.xTicks}\n              tickFormatter={xTickFormatter as TickFormatter}\n              title={xTitle}\n              ariaRoleDescription={xAxisAriaRoleDescription}\n              autoHeight={setBottomLabelsHeight}\n              offsetLeft={leftLabelsWidth + BOTTOM_LABELS_OFFSET}\n              offsetRight={BOTTOM_LABELS_OFFSET}\n            />\n\n            <EmphasizedBaseline width={model.width} height={model.height} scale={model.computed.yScale} />\n\n            <AreaVerticalMarker model={model} />\n\n            <AreaHighlightedPoint ref={highlightedPointRef} model={model} ariaLabel={highlightDetails?.activeLabel} />\n          </ChartPlot>\n\n          <AxisLabel axis=\"x\" position=\"bottom\" title={xTitle} />\n        </div>\n\n        <AreaChartPopover\n          model={model}\n          highlightDetails={highlightDetails}\n          dismissAriaLabel={detailPopoverDismissAriaLabel}\n          size={detailPopoverSize}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}