{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { nodeContains } from '../internal/utils/dom';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { getXTickCount, getYTickCount, createXTicks, createYTicks } from '../internal/components/cartesian-chart/ticks';\nimport ChartPlot from '../internal/components/chart-plot';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport LeftLabels from '../internal/components/cartesian-chart/left-labels';\nimport BottomLabels from '../internal/components/cartesian-chart/bottom-labels';\nimport VerticalGridLines from '../internal/components/cartesian-chart/vertical-grid-lines';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport HighlightedPoint from '../internal/components/cartesian-chart/highlighted-point';\nimport VerticalMarker from '../internal/components/cartesian-chart/vertical-marker';\nimport { ChartScale, NumericChartScale } from '../internal/components/cartesian-chart/scales';\nimport ChartPopover from './chart-popover';\nimport { computeDomainX, computeDomainY } from './domain';\nimport { isXThreshold } from './utils';\nimport makeScaledSeries from './make-scaled-series';\nimport makeScaledBarGroups from './make-scaled-bar-groups';\nimport formatHighlighted from './format-highlighted';\nimport DataSeries from './data-series';\nimport BarGroups from './bar-groups';\nimport { useMouseHover } from './hooks/use-mouse-hover';\nimport { useNavigation } from './hooks/use-navigation';\nimport { usePopover } from './hooks/use-popover';\nimport styles from './styles.css.js';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar LEFT_LABELS_MARGIN = 16;\nvar BOTTOM_LABELS_OFFSET = 12;\nexport default function ChartContainer(_a) {\n  var _b;\n  var plotHeight = _a.height,\n    series = _a.series,\n    visibleSeries = _a.visibleSeries,\n    highlightedSeries = _a.highlightedSeries,\n    onHighlightChange = _a.onHighlightChange,\n    highlightedPoint = _a.highlightedPoint,\n    setHighlightedPoint = _a.setHighlightedPoint,\n    highlightedGroupIndex = _a.highlightedGroupIndex,\n    setHighlightedGroupIndex = _a.setHighlightedGroupIndex,\n    legendSeries = _a.legendSeries,\n    _c = _a.detailPopoverSize,\n    detailPopoverSize = _c === void 0 ? 'medium' : _c,\n    _d = _a.stackedBars,\n    stackedBars = _d === void 0 ? false : _d,\n    _e = _a.horizontalBars,\n    horizontalBars = _e === void 0 ? false : _e,\n    xScaleType = _a.xScaleType,\n    yScaleType = _a.yScaleType,\n    xTickFormatter = _a.xTickFormatter,\n    yTickFormatter = _a.yTickFormatter,\n    emphasizeBaselineAxis = _a.emphasizeBaselineAxis,\n    xTitle = _a.xTitle,\n    yTitle = _a.yTitle,\n    ariaLabel = _a.ariaLabel,\n    ariaLabelledby = _a.ariaLabelledby,\n    ariaDescription = _a.ariaDescription,\n    _f = _a.i18nStrings,\n    i18nStrings = _f === void 0 ? {} : _f,\n    plotContainerRef = _a.plotContainerRef,\n    props = __rest(_a, [\"height\", \"series\", \"visibleSeries\", \"highlightedSeries\", \"onHighlightChange\", \"highlightedPoint\", \"setHighlightedPoint\", \"highlightedGroupIndex\", \"setHighlightedGroupIndex\", \"legendSeries\", \"detailPopoverSize\", \"stackedBars\", \"horizontalBars\", \"xScaleType\", \"yScaleType\", \"xTickFormatter\", \"yTickFormatter\", \"emphasizeBaselineAxis\", \"xTitle\", \"yTitle\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescription\", \"i18nStrings\", \"plotContainerRef\"]);\n  var plotRef = useRef(null);\n  var verticalMarkerRef = useRef(null);\n  var _g = useState(0),\n    leftLabelsWidth = _g[0],\n    setLeftLabelsWidth = _g[1];\n  var _h = useState(0),\n    bottomLabelsHeight = _h[0],\n    setBottomLabelsHeight = _h[1];\n  var _j = useContainerWidth(500),\n    containerWidth = _j[0],\n    containerMeasureRef = _j[1];\n  var plotWidth = containerWidth ? containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN : 500;\n  var containerRefObject = useRef(null);\n  var containerRef = useMergeRefs(containerMeasureRef, containerRefObject);\n  var isRefresh = useVisualRefresh();\n  var linesOnly = series.every(function (_a) {\n    var series = _a.series;\n    return series.type === 'line' || series.type === 'threshold';\n  });\n  var xDomain = props.xDomain || computeDomainX(series, xScaleType);\n  var yDomain = props.yDomain || computeDomainY(series, yScaleType, stackedBars);\n  var xTickCount = getXTickCount(plotWidth);\n  var yTickCount = getYTickCount(plotHeight);\n  var rangeBottomTop = [0, plotHeight];\n  var rangeTopBottom = [plotHeight, 0];\n  var rangeLeftRight = [0, plotWidth];\n  var xScale = new ChartScale(xScaleType, xDomain, horizontalBars ? rangeBottomTop : rangeLeftRight, linesOnly);\n  var yScale = new NumericChartScale(yScaleType, yDomain, horizontalBars ? rangeLeftRight : rangeTopBottom, props.yDomain ? null : yTickCount);\n  var xTicks = createXTicks(xScale, xTickCount);\n  var yTicks = createYTicks(yScale, yTickCount);\n  /**\n   * Interactions\n   */\n  var highlightedPointRef = useRef(null);\n  var highlightedGroupRef = useRef(null);\n  var _k = useState(false),\n    isPlotFocused = _k[0],\n    setPlotFocused = _k[1];\n  // Some chart components are rendered against \"x\" or \"y\" axes,\n  // When \"horizontalBars\" is enabled, the axes are inverted.\n  var x = !horizontalBars ? 'x' : 'y';\n  var y = !horizontalBars ? 'y' : 'x';\n  var xy = {\n    ticks: {\n      x: xTicks,\n      y: yTicks\n    },\n    scale: {\n      x: xScale,\n      y: yScale\n    },\n    tickFormatter: {\n      x: xTickFormatter,\n      y: yTickFormatter\n    },\n    title: {\n      x: xTitle,\n      y: yTitle\n    },\n    ariaRoleDescription: {\n      x: i18nStrings.xAxisAriaRoleDescription,\n      y: i18nStrings.yAxisAriaRoleDescription\n    }\n  };\n  var scaledSeries = makeScaledSeries(visibleSeries, xScale, yScale);\n  var barGroups = makeScaledBarGroups(visibleSeries, xScale, plotWidth, plotHeight, y);\n  var _l = usePopover(),\n    isPopoverOpen = _l.isPopoverOpen,\n    isPopoverPinned = _l.isPopoverPinned,\n    showPopover = _l.showPopover,\n    pinPopover = _l.pinPopover,\n    dismissPopover = _l.dismissPopover;\n  // Allows to add a delay between popover is dismissed and handlers are enabled to prevent immediate popover reopening.\n  var _m = useState(!isPopoverPinned),\n    isHandlersDisabled = _m[0],\n    setHandlersDisabled = _m[1];\n  useEffect(function () {\n    if (isPopoverPinned) {\n      setHandlersDisabled(true);\n    } else {\n      var timeoutId_1 = setTimeout(function () {\n        return setHandlersDisabled(false);\n      }, 25);\n      return function () {\n        return clearTimeout(timeoutId_1);\n      };\n    }\n  }, [isPopoverPinned]);\n  // Highlighted point and highlighted series must be in sync.\n  // TODO: refactor the code so that it is not possible to make series and point highlight out of sync.\n  var highlightPoint = useCallback(function (point) {\n    setHighlightedGroupIndex(null);\n    setHighlightedPoint(point);\n  }, [setHighlightedPoint, setHighlightedGroupIndex]);\n  var highlightSeries = useCallback(function (series) {\n    if (series !== highlightedSeries) {\n      onHighlightChange(series);\n    }\n  }, [highlightedSeries, onHighlightChange]);\n  var highlightGroup = useCallback(function (groupIndex) {\n    highlightSeries(null);\n    setHighlightedPoint(null);\n    setHighlightedGroupIndex(groupIndex);\n  }, [highlightSeries, setHighlightedPoint, setHighlightedGroupIndex]);\n  var clearHighlightedSeries = useCallback(function () {\n    highlightSeries(null);\n    setHighlightedGroupIndex(null);\n    setHighlightedPoint(null);\n    dismissPopover();\n  }, [dismissPopover, highlightSeries, setHighlightedGroupIndex, setHighlightedPoint]);\n  var _o = useNavigation({\n      series: series,\n      visibleSeries: visibleSeries,\n      scaledSeries: scaledSeries,\n      barGroups: barGroups,\n      xScale: xScale,\n      yScale: yScale,\n      highlightedPoint: highlightedPoint,\n      highlightedGroupIndex: highlightedGroupIndex,\n      highlightedSeries: highlightedSeries,\n      legendSeries: legendSeries,\n      isHandlersDisabled: isHandlersDisabled,\n      pinPopover: pinPopover,\n      highlightSeries: highlightSeries,\n      highlightGroup: highlightGroup,\n      highlightPoint: highlightPoint,\n      clearHighlightedSeries: clearHighlightedSeries\n    }),\n    isGroupNavigation = _o.isGroupNavigation,\n    handlers = __rest(_o, [\"isGroupNavigation\"]);\n  var _p = useMouseHover({\n      scaledSeries: scaledSeries,\n      barGroups: barGroups,\n      plotRef: plotRef,\n      highlightSeries: highlightSeries,\n      highlightPoint: highlightPoint,\n      highlightGroup: highlightGroup,\n      clearHighlightedSeries: clearHighlightedSeries,\n      isGroupNavigation: isGroupNavigation,\n      isHandlersDisabled: isHandlersDisabled\n    }),\n    onSVGMouseMove = _p.onSVGMouseMove,\n    onSVGMouseOut = _p.onSVGMouseOut,\n    verticalMarkerLeft = _p.verticalMarkerLeft;\n  // There are multiple ways to indicate what X is selected.\n  // TODO: make a uniform verticalMarkerX state to fit all use-cases.\n  var highlightedX = useMemo(function () {\n    var _a, _b, _c, _d;\n    if (highlightedGroupIndex !== null) {\n      return barGroups[highlightedGroupIndex].x;\n    }\n    if (verticalMarkerLeft !== null) {\n      for (var _i = 0, scaledSeries_1 = scaledSeries; _i < scaledSeries_1.length; _i++) {\n        var series_1 = scaledSeries_1[_i];\n        if (series_1.x === verticalMarkerLeft) {\n          return (_b = (_a = series_1.datum) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : null;\n        }\n      }\n    }\n    if (highlightedPoint !== null) {\n      return (_d = (_c = highlightedPoint === null || highlightedPoint === void 0 ? void 0 : highlightedPoint.datum) === null || _c === void 0 ? void 0 : _c.x) !== null && _d !== void 0 ? _d : null;\n    }\n    return null;\n  }, [highlightedPoint, verticalMarkerLeft, highlightedGroupIndex, scaledSeries, barGroups]);\n  var onPopoverDismiss = function (outsideClick) {\n    dismissPopover();\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(function () {\n        var _a, _b;\n        if (highlightedPoint || highlightedGroupIndex !== null) {\n          (_a = plotRef.current) === null || _a === void 0 ? void 0 : _a.focusApplication();\n        } else {\n          (_b = plotRef.current) === null || _b === void 0 ? void 0 : _b.focusPlot();\n        }\n      }, 0);\n    }\n  };\n  useLayoutEffect(function () {\n    if (highlightedX !== null) {\n      showPopover();\n    }\n  }, [highlightedX, showPopover]);\n  var onSVGMouseDown = function () {\n    if (isPopoverOpen) {\n      if (isPopoverPinned) {\n        dismissPopover();\n      } else {\n        pinPopover();\n      }\n    } else {\n      showPopover();\n    }\n  };\n  var onSVGFocus = function (event, trigger) {\n    setPlotFocused(true);\n    if (trigger === 'keyboard') {\n      handlers.onFocus();\n    } else {\n      // noop: clicks are handled separately\n    }\n  };\n  var onSVGBlur = function (event) {\n    var _a;\n    setPlotFocused(false);\n    var blurTarget = event.relatedTarget || event.target;\n    if (blurTarget === null || !(blurTarget instanceof Element) || !nodeContains(containerRefObject.current, blurTarget)) {\n      setHighlightedPoint(null);\n      if (!((_a = plotContainerRef === null || plotContainerRef === void 0 ? void 0 : plotContainerRef.current) === null || _a === void 0 ? void 0 : _a.contains(blurTarget))) {\n        clearHighlightedSeries();\n      }\n      if (isPopoverOpen && !isPopoverPinned) {\n        dismissPopover();\n      }\n    }\n  };\n  var onSVGKeyDown = handlers.onKeyDown;\n  var xOffset = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;\n  var verticalLineX = null;\n  if (verticalMarkerLeft !== null) {\n    verticalLineX = verticalMarkerLeft;\n  } else if (isGroupNavigation && highlightedGroupIndex !== null) {\n    var x_1 = (_b = xScale.d3Scale(barGroups[highlightedGroupIndex].x)) !== null && _b !== void 0 ? _b : null;\n    if (x_1 !== null) {\n      verticalLineX = xOffset + x_1;\n    }\n  }\n  var point = useMemo(function () {\n    return highlightedPoint ? {\n      key: \"\".concat(highlightedPoint.x, \"-\").concat(highlightedPoint.y),\n      x: highlightedPoint.x,\n      y: highlightedPoint.y,\n      color: highlightedPoint.color\n    } : null;\n  }, [highlightedPoint]);\n  var verticalMarkers = useMemo(function () {\n    return verticalLineX !== null ? scaledSeries.filter(function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      return (x === verticalLineX || isNaN(x)) && !isNaN(y);\n    }).map(function (_a, index) {\n      var x = _a.x,\n        y = _a.y,\n        color = _a.color;\n      return {\n        key: \"\".concat(index, \"-\").concat(x, \"-\").concat(y),\n        x: !horizontalBars ? verticalLineX || 0 : y,\n        y: !horizontalBars ? y : verticalLineX || 0,\n        color: color\n      };\n    }) : [];\n  }, [scaledSeries, verticalLineX, horizontalBars]);\n  var popoverTrackRef = isGroupNavigation ? highlightedGroupRef : highlightedPoint ? highlightedPointRef : verticalMarkerRef;\n  var highlightDetails = useMemo(function () {\n    if (highlightedX === null) {\n      return null;\n    }\n    // When series point is highlighted show the corresponding series and matching x-thresholds.\n    if (highlightedPoint) {\n      var seriesToShow = visibleSeries.filter(function (series) {\n        return series.series === (highlightedPoint === null || highlightedPoint === void 0 ? void 0 : highlightedPoint.series) || isXThreshold(series.series);\n      });\n      return formatHighlighted(highlightedX, seriesToShow, xTickFormatter);\n    }\n    // Otherwise - show all visible series details.\n    return formatHighlighted(highlightedX, visibleSeries, xTickFormatter);\n  }, [highlightedX, highlightedPoint, visibleSeries, xTickFormatter]);\n  var activeAriaLabel = useMemo(function () {\n    return highlightDetails ? \"\".concat(highlightDetails.position, \", \").concat(highlightDetails.details.map(function (d) {\n      return d.key + ' ' + d.value;\n    }).join(',')) : '';\n  }, [highlightDetails]);\n  // Live region is used when nothing is focused e.g. when hovering.\n  var activeLiveRegion = activeAriaLabel && !highlightedPoint && highlightedGroupIndex === null ? activeAriaLabel : '';\n  return React.createElement(\"div\", {\n    className: styles['chart-container'],\n    ref: containerRef\n  }, React.createElement(AxisLabel, {\n    axis: y,\n    position: \"left\",\n    title: xy.title[y]\n  }), React.createElement(\"div\", {\n    className: styles['chart-container__horizontal']\n  }, React.createElement(LabelsMeasure, {\n    ticks: xy.ticks[y],\n    scale: xy.scale[y],\n    tickFormatter: xy.tickFormatter[y],\n    autoWidth: setLeftLabelsWidth\n  }), React.createElement(\"div\", {\n    className: styles['chart-container__vertical']\n  }, React.createElement(ChartPlot, {\n    ref: plotRef,\n    width: plotWidth,\n    height: plotHeight,\n    offsetBottom: bottomLabelsHeight,\n    isClickable: isPopoverOpen && !isPopoverPinned,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescription: ariaDescription,\n    ariaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.chartAriaRoleDescription,\n    ariaLiveRegion: activeLiveRegion,\n    activeElementRef: isGroupNavigation ? highlightedGroupRef : highlightedPointRef,\n    activeElementKey: isPlotFocused && ((highlightedGroupIndex === null || highlightedGroupIndex === void 0 ? void 0 : highlightedGroupIndex.toString()) || (point === null || point === void 0 ? void 0 : point.key)),\n    activeElementFocusOffset: isGroupNavigation ? 0 : 3,\n    onMouseMove: onSVGMouseMove,\n    onMouseOut: onSVGMouseOut,\n    onMouseDown: onSVGMouseDown,\n    onFocus: onSVGFocus,\n    onBlur: onSVGBlur,\n    onKeyDown: onSVGKeyDown\n  }, React.createElement(LeftLabels, {\n    axis: y,\n    ticks: xy.ticks[y],\n    scale: xy.scale[y],\n    tickFormatter: xy.tickFormatter[y],\n    title: xy.title[y],\n    ariaRoleDescription: xy.ariaRoleDescription[y],\n    width: plotWidth,\n    height: plotHeight\n  }), horizontalBars && React.createElement(VerticalGridLines, {\n    scale: yScale,\n    ticks: yTicks,\n    height: plotHeight\n  }), emphasizeBaselineAxis && linesOnly && React.createElement(EmphasizedBaseline, {\n    axis: x,\n    scale: yScale,\n    width: plotWidth,\n    height: plotHeight\n  }), React.createElement(DataSeries, {\n    axis: x,\n    plotWidth: plotWidth,\n    plotHeight: plotHeight,\n    highlightedSeries: highlightedSeries !== null && highlightedSeries !== void 0 ? highlightedSeries : null,\n    highlightedGroupIndex: highlightedGroupIndex,\n    stackedBars: stackedBars,\n    isGroupNavigation: isGroupNavigation,\n    visibleSeries: visibleSeries,\n    xScale: xScale,\n    yScale: yScale\n  }), emphasizeBaselineAxis && !linesOnly && React.createElement(EmphasizedBaseline, {\n    axis: x,\n    scale: yScale,\n    width: plotWidth,\n    height: plotHeight\n  }), React.createElement(VerticalMarker, {\n    key: verticalLineX || '',\n    height: plotHeight,\n    showPoints: highlightedPoint === null,\n    showLine: !isGroupNavigation,\n    points: verticalMarkers,\n    ref: verticalMarkerRef\n  }), highlightedPoint && React.createElement(HighlightedPoint, {\n    ref: highlightedPointRef,\n    point: point,\n    role: \"button\",\n    ariaLabel: activeAriaLabel,\n    ariaHasPopup: true,\n    ariaExpanded: isPopoverPinned\n  }), isGroupNavigation && xScale.isCategorical() && React.createElement(BarGroups, {\n    ariaLabel: activeAriaLabel,\n    isRefresh: isRefresh,\n    isPopoverPinned: isPopoverPinned,\n    barGroups: barGroups,\n    highlightedGroupIndex: highlightedGroupIndex,\n    highlightedGroupRef: highlightedGroupRef\n  }), React.createElement(BottomLabels, {\n    axis: x,\n    ticks: xy.ticks[x],\n    scale: xy.scale[x],\n    tickFormatter: xy.tickFormatter[x],\n    title: xy.title[x],\n    ariaRoleDescription: xy.ariaRoleDescription[x],\n    height: plotHeight,\n    width: plotWidth,\n    offsetLeft: leftLabelsWidth + BOTTOM_LABELS_OFFSET,\n    offsetRight: BOTTOM_LABELS_OFFSET,\n    autoHeight: setBottomLabelsHeight\n  })), React.createElement(AxisLabel, {\n    axis: x,\n    position: \"bottom\",\n    title: xy.title[x]\n  })), React.createElement(ChartPopover, {\n    containerRef: containerRefObject,\n    trackRef: popoverTrackRef,\n    isOpen: isPopoverOpen,\n    isPinned: isPopoverPinned,\n    highlightDetails: highlightDetails,\n    onDismiss: onPopoverDismiss,\n    size: detailPopoverSize,\n    dismissAriaLabel: i18nStrings.detailPopoverDismissAriaLabel\n  })));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,eAAe,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEjG,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,gBAAgB,QAAQ,mCAAmC;AAEpE,SAASC,aAAa,EAAEC,aAAa,EAAEC,YAAY,EAAEC,YAAY,QAAQ,8CAA8C;AACvH,OAAOC,SAA2B,MAAM,mCAAmC;AAC3E,OAAOC,SAAS,MAAM,mDAAmD;AACzE,OAAOC,aAAa,MAAM,uDAAuD;AACjF,OAAOC,UAAU,MAAM,oDAAoD;AAC3E,OAAOC,YAAY,MAAM,sDAAsD;AAC/E,OAAOC,iBAAiB,MAAM,4DAA4D;AAC1F,OAAOC,kBAAkB,MAAM,4DAA4D;AAC3F,OAAOC,gBAAgB,MAAM,0DAA0D;AACvF,OAAOC,cAAc,MAAM,wDAAwD;AACnF,SAASC,UAAU,EAAEC,iBAAiB,QAAQ,+CAA+C;AAC7F,OAAOC,YAAY,MAAM,iBAAiB;AAE1C,SAASC,cAAc,EAAEC,cAAc,QAAQ,UAAU;AACzD,SAASC,YAAY,QAAQ,SAAS;AACtC,OAAOC,gBAAiC,MAAM,sBAAsB;AACpE,OAAOC,mBAAuC,MAAM,0BAA0B;AAC9E,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAOC,iBAAiB,MAAM,uCAAuC;AACrE,SAASC,YAAY,QAAQ,kCAAkC;AAE/D,IAAMC,kBAAkB,GAAG,EAAE;AAC7B,IAAMC,oBAAoB,GAAG,EAAE;AA2C/B,eAAc,SAAUC,cAAc,CAA2BC,EA2BxC;;EA1BvB,IAAQC,UAAU;IAClBC,MAAM;IACNC,aAAa;IACbC,iBAAiB;IACjBC,iBAAiB;IACjBC,gBAAgB;IAChBC,mBAAmB;IACnBC,qBAAqB;IACrBC,wBAAwB;IACxBC,YAAY;IACZC,yBAA4B;IAA5BC,iBAAiB,mBAAG,QAAQ;IAC5BC,mBAAmB;IAAnBC,WAAW,mBAAG,KAAK;IACnBC,sBAAsB;IAAtBC,cAAc,mBAAG,KAAK;IACtBC,UAAU;IACVC,UAAU;IACVC,cAAc;IACdC,cAAc;IACdC,qBAAqB;IACrBC,MAAM;IACNC,MAAM;IACNC,SAAS;IACTC,cAAc;IACdC,eAAe;IACfC,mBAAgB;IAAhBC,WAAW,mBAAG,EAAE;IAChBC,gBAAgB;IACbC,KAAK,cA1BuD,ubA2BhE,CADS;EAER,IAAMC,OAAO,GAAGpE,MAAM,CAAe,IAAI,CAAC;EAC1C,IAAMqE,iBAAiB,GAAGrE,MAAM,CAAiB,IAAI,CAAC;EAEhD,SAAwCC,QAAQ,CAAC,CAAC,CAAC;IAAlDqE,eAAe;IAAEC,kBAAkB,QAAe;EACnD,SAA8CtE,QAAQ,CAAC,CAAC,CAAC;IAAxDuE,kBAAkB;IAAEC,qBAAqB,QAAe;EACzD,SAAwCzC,iBAAiB,CAAC,GAAG,CAAC;IAA7D0C,cAAc;IAAEC,mBAAmB,QAA0B;EACpE,IAAMC,SAAS,GAAGF,cAAc,GAAGA,cAAc,GAAGJ,eAAe,GAAGpC,kBAAkB,GAAG,GAAG;EAC9F,IAAM2C,kBAAkB,GAAG7E,MAAM,CAAC,IAAI,CAAC;EACvC,IAAM8E,YAAY,GAAG7C,YAAY,CAAC0C,mBAAmB,EAAEE,kBAAkB,CAAC;EAE1E,IAAME,SAAS,GAAG5E,gBAAgB,EAAE;EAEpC,IAAM6E,SAAS,GAAGzC,MAAM,CAAC0C,KAAK,CAAC,UAAC5C,EAAU;QAARE,MAAM;IAAO,aAAM,CAAC2C,IAAI,KAAK,MAAM,IAAI3C,MAAM,CAAC2C,IAAI,KAAK,WAAW;EAArD,CAAqD,CAAC;EAErG,IAAMC,OAAO,GAAIhB,KAAK,CAACgB,OAAO,IAAI/D,cAAc,CAACmB,MAAM,EAAEe,UAAU,CAGhD;EACnB,IAAM8B,OAAO,GAAIjB,KAAK,CAACiB,OAAO,IAAI/D,cAAc,CAACkB,MAAM,EAAEgB,UAAU,EAAEJ,WAAW,CAAuB;EAEvG,IAAMkC,UAAU,GAAGjF,aAAa,CAACwE,SAAS,CAAC;EAC3C,IAAMU,UAAU,GAAGjF,aAAa,CAACiC,UAAU,CAAC;EAE5C,IAAMiD,cAAc,GAAqB,CAAC,CAAC,EAAEjD,UAAU,CAAC;EACxD,IAAMkD,cAAc,GAAqB,CAAClD,UAAU,EAAE,CAAC,CAAC;EACxD,IAAMmD,cAAc,GAAqB,CAAC,CAAC,EAAEb,SAAS,CAAC;EACvD,IAAMc,MAAM,GAAG,IAAIzE,UAAU,CAACqC,UAAU,EAAE6B,OAAO,EAAE9B,cAAc,GAAGkC,cAAc,GAAGE,cAAc,EAAET,SAAS,CAAC;EAC/G,IAAMW,MAAM,GAAG,IAAIzE,iBAAiB,CAClCqC,UAAU,EACV6B,OAAO,EACP/B,cAAc,GAAGoC,cAAc,GAAGD,cAAc,EAChDrB,KAAK,CAACiB,OAAO,GAAG,IAAI,GAAGE,UAAU,CAClC;EAED,IAAMM,MAAM,GAAGtF,YAAY,CAACoF,MAAM,EAAEL,UAAU,CAAC;EAC/C,IAAMQ,MAAM,GAAGtF,YAAY,CAACoF,MAAM,EAAEL,UAAU,CAAC;EAE/C;;;EAGA,IAAMQ,mBAAmB,GAAG9F,MAAM,CAAc,IAAI,CAAC;EACrD,IAAM+F,mBAAmB,GAAG/F,MAAM,CAAiB,IAAI,CAAC;EAClD,SAAkCC,QAAQ,CAAC,KAAK,CAAC;IAAhD+F,aAAa;IAAEC,cAAc,QAAmB;EAEvD;EACA;EACA,IAAMC,CAAC,GAAG,CAAC7C,cAAc,GAAG,GAAG,GAAG,GAAG;EACrC,IAAM8C,CAAC,GAAG,CAAC9C,cAAc,GAAG,GAAG,GAAG,GAAG;EACrC,IAAM+C,EAAE,GAAG;IACTC,KAAK,EAAE;MAAEH,CAAC,EAAEN,MAAM;MAAEO,CAAC,EAAEN;IAAM,CAAE;IAC/BS,KAAK,EAAE;MAAEJ,CAAC,EAAER,MAAM;MAAES,CAAC,EAAER;IAAM,CAAE;IAC/BY,aAAa,EAAE;MAAEL,CAAC,EAAE1C,cAAc;MAAE2C,CAAC,EAAE1C;IAAc,CAAE;IACvD+C,KAAK,EAAE;MAAEN,CAAC,EAAEvC,MAAM;MAAEwC,CAAC,EAAEvC;IAAM,CAAE;IAC/B6C,mBAAmB,EAAE;MAAEP,CAAC,EAAEjC,WAAW,CAACyC,wBAAwB;MAAEP,CAAC,EAAElC,WAAW,CAAC0C;IAAwB;GACxG;EAED,IAAMC,YAAY,GAAGrF,gBAAgB,CAACiB,aAAa,EAAEkD,MAAM,EAAEC,MAAM,CAAC;EACpE,IAAMkB,SAAS,GAAwBrF,mBAAmB,CAACgB,aAAa,EAAEkD,MAAM,EAAEd,SAAS,EAAEtC,UAAU,EAAE6D,CAAC,CAAC;EAErG,SAA8ErE,UAAU,EAAE;IAAxFgF,aAAa;IAAEC,eAAe;IAAEC,WAAW;IAAEC,UAAU;IAAEC,cAAc,oBAAiB;EAEhG;EACM,SAA4CjH,QAAQ,CAAC,CAAC8G,eAAe,CAAC;IAArEI,kBAAkB;IAAEC,mBAAmB,QAA8B;EAC5EvH,SAAS,CAAC;IACR,IAAIkH,eAAe,EAAE;MACnBK,mBAAmB,CAAC,IAAI,CAAC;KAC1B,MAAM;MACL,IAAMC,WAAS,GAAGC,UAAU,CAAC;QAAM,0BAAmB,CAAC,KAAK,CAAC;MAA1B,CAA0B,EAAE,EAAE,CAAC;MAClE,OAAO;QAAM,mBAAY,CAACD,WAAS,CAAC;MAAvB,CAAuB;;EAExC,CAAC,EAAE,CAACN,eAAe,CAAC,CAAC;EAErB;EACA;EACA,IAAMQ,cAAc,GAAG3H,WAAW,CAChC,UAAC4H,KAA4B;IAC3B1E,wBAAwB,CAAC,IAAI,CAAC;IAC9BF,mBAAmB,CAAC4E,KAAK,CAAC;EAC5B,CAAC,EACD,CAAC5E,mBAAmB,EAAEE,wBAAwB,CAAC,CAChD;EAED,IAAM2E,eAAe,GAAG7H,WAAW,CACjC,UAAC2C,MAAoD;IACnD,IAAIA,MAAM,KAAKE,iBAAiB,EAAE;MAChCC,iBAAiB,CAACH,MAAM,CAAC;;EAE7B,CAAC,EACD,CAACE,iBAAiB,EAAEC,iBAAiB,CAAC,CACvC;EAED,IAAMgF,cAAc,GAAG9H,WAAW,CAChC,UAAC+H,UAAkB;IACjBF,eAAe,CAAC,IAAI,CAAC;IACrB7E,mBAAmB,CAAC,IAAI,CAAC;IACzBE,wBAAwB,CAAC6E,UAAU,CAAC;EACtC,CAAC,EACD,CAACF,eAAe,EAAE7E,mBAAmB,EAAEE,wBAAwB,CAAC,CACjE;EAED,IAAM8E,sBAAsB,GAAGhI,WAAW,CAAC;IACzC6H,eAAe,CAAC,IAAI,CAAC;IACrB3E,wBAAwB,CAAC,IAAI,CAAC;IAC9BF,mBAAmB,CAAC,IAAI,CAAC;IACzBsE,cAAc,EAAE;EAClB,CAAC,EAAE,CAACA,cAAc,EAAEO,eAAe,EAAE3E,wBAAwB,EAAEF,mBAAmB,CAAC,CAAC;EAEpF,IAAMiF,KAAqChG,aAAa,CAAC;MACvDU,MAAM;MACNC,aAAa;MACboE,YAAY;MACZC,SAAS;MACTnB,MAAM;MACNC,MAAM;MACNhD,gBAAgB;MAChBE,qBAAqB;MACrBJ,iBAAiB;MACjBM,YAAY;MACZoE,kBAAkB;MAClBF,UAAU;MACVQ,eAAe;MACfC,cAAc;MACdH,cAAc;MACdK,sBAAsB;KACvB,CAAC;IAjBME,iBAAiB;IAAKC,QAAQ,cAAhC,qBAAkC,CAiBtC;EAEI,SAAwDnG,aAAa,CAAI;MAC7EgF,YAAY;MACZC,SAAS;MACTzC,OAAO;MACPqD,eAAe;MACfF,cAAc;MACdG,cAAc;MACdE,sBAAsB;MACtBE,iBAAiB;MACjBX,kBAAkB;KACnB,CAAC;IAVMa,cAAc;IAAEC,aAAa;IAAEC,kBAAkB,wBAUvD;EAEF;EACA;EACA,IAAMC,YAAY,GAAGpI,OAAO,CAAC;;IAC3B,IAAI8C,qBAAqB,KAAK,IAAI,EAAE;MAClC,OAAOgE,SAAS,CAAChE,qBAAqB,CAAC,CAACqD,CAAC;;IAE3C,IAAIgC,kBAAkB,KAAK,IAAI,EAAE;MAC/B,KAAqB,UAAY,EAAZE,6BAAY,EAAZC,0BAAY,EAAZA,IAAY,EAAE;QAA9B,IAAMC,QAAM;QACf,IAAIA,QAAM,CAACpC,CAAC,KAAKgC,kBAAkB,EAAE;UACnC,OAAO,oBAAM,CAACK,KAAK,0CAAErC,CAAC,mCAAI,IAAI;;;;IAIpC,IAAIvD,gBAAgB,KAAK,IAAI,EAAE;MAC7B,OAAO,4BAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAE4F,KAAK,0CAAErC,CAAC,mCAAI,IAAI;;IAE3C,OAAO,IAAI;EACb,CAAC,EAAE,CAACvD,gBAAgB,EAAEuF,kBAAkB,EAAErF,qBAAqB,EAAE+D,YAAY,EAAEC,SAAS,CAAC,CAAC;EAE1F,IAAM2B,gBAAgB,GAAG,UAACC,YAAsB;IAC9CvB,cAAc,EAAE;IAEhB,IAAI,CAACuB,YAAY,EAAE;MACjB;MACAnB,UAAU,CAAC;;QACT,IAAI3E,gBAAgB,IAAIE,qBAAqB,KAAK,IAAI,EAAE;UACtD,aAAO,CAAC6F,OAAO,0CAAEC,gBAAgB,EAAE;SACpC,MAAM;UACL,aAAO,CAACD,OAAO,0CAAEE,SAAS,EAAE;;MAEhC,CAAC,EAAE,CAAC,CAAC;;EAET,CAAC;EAED9I,eAAe,CAAC;IACd,IAAIqI,YAAY,KAAK,IAAI,EAAE;MACzBnB,WAAW,EAAE;;EAEjB,CAAC,EAAE,CAACmB,YAAY,EAAEnB,WAAW,CAAC,CAAC;EAE/B,IAAM6B,cAAc,GAAG;IACrB,IAAI/B,aAAa,EAAE;MACjB,IAAIC,eAAe,EAAE;QACnBG,cAAc,EAAE;OACjB,MAAM;QACLD,UAAU,EAAE;;KAEf,MAAM;MACLD,WAAW,EAAE;;EAEjB,CAAC;EAED,IAAM8B,UAAU,GAAG,UAACC,KAAuB,EAAEC,OAA6B;IACxE/C,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI+C,OAAO,KAAK,UAAU,EAAE;MAC1BjB,QAAQ,CAACkB,OAAO,EAAE;KACnB,MAAM;MACL;IAAA;EAEJ,CAAC;EAED,IAAMC,SAAS,GAAG,UAACH,KAAgC;;IACjD9C,cAAc,CAAC,KAAK,CAAC;IACrB,IAAMkD,UAAU,GAAGJ,KAAK,CAACK,aAAa,IAAIL,KAAK,CAACM,MAAM;IACtD,IACEF,UAAU,KAAK,IAAI,IACnB,EAAEA,UAAU,YAAYG,OAAO,CAAC,IAChC,CAACpJ,YAAY,CAAC2E,kBAAkB,CAAC6D,OAAO,EAAES,UAAU,CAAC,EACrD;MACAvG,mBAAmB,CAAC,IAAI,CAAC;MACzB,IAAI,EAAC,sBAAgB,aAAhBsB,gBAAgB,uBAAhBA,gBAAgB,CAAEwE,OAAO,0CAAEa,QAAQ,CAACJ,UAAU,CAAC,GAAE;QACpDvB,sBAAsB,EAAE;;MAG1B,IAAId,aAAa,IAAI,CAACC,eAAe,EAAE;QACrCG,cAAc,EAAE;;;EAGtB,CAAC;EAED,IAAMsC,YAAY,GAAGzB,QAAQ,CAAC0B,SAAS;EAEvC,IAAMC,OAAO,GAAGhE,MAAM,CAACiE,aAAa,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEnE,MAAM,CAACoE,OAAO,CAACC,SAAS,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;EAE5F,IAAIC,aAAa,GAAkB,IAAI;EACvC,IAAI9B,kBAAkB,KAAK,IAAI,EAAE;IAC/B8B,aAAa,GAAG9B,kBAAkB;GACnC,MAAM,IAAIJ,iBAAiB,IAAIjF,qBAAqB,KAAK,IAAI,EAAE;IAC9D,IAAMoH,GAAC,GAAG,YAAM,CAACH,OAAO,CAACjD,SAAS,CAAChE,qBAAqB,CAAC,CAACqD,CAAQ,CAAC,mCAAI,IAAI;IAC3E,IAAI+D,GAAC,KAAK,IAAI,EAAE;MACdD,aAAa,GAAGN,OAAO,GAAGO,GAAC;;;EAI/B,IAAMzC,KAAK,GAAGzH,OAAO,CACnB;IACE,uBAAgB,GACZ;MACEmK,GAAG,EAAE,UAAGvH,gBAAgB,CAACuD,CAAC,cAAIvD,gBAAgB,CAACwD,CAAC,CAAE;MAClDD,CAAC,EAAEvD,gBAAgB,CAACuD,CAAC;MACrBC,CAAC,EAAExD,gBAAgB,CAACwD,CAAC;MACrBgE,KAAK,EAAExH,gBAAgB,CAACwH;KACzB,GACD,IAAI;EAPR,CAOQ,EACV,CAACxH,gBAAgB,CAAC,CACnB;EAED,IAAMyH,eAAe,GAAGrK,OAAO,CAC7B;IACE,oBAAa,KAAK,IAAI,GAClB6G,YAAY,CACTyD,MAAM,CAAC,UAAChI,EAAQ;UAAN6D,CAAC;QAAEC,CAAC;MAAO,QAACD,CAAC,KAAK8D,aAAa,IAAIM,KAAK,CAACpE,CAAC,CAAC,KAAK,CAACoE,KAAK,CAACnE,CAAC,CAAC;IAA9C,CAA8C,CAAC,CACpEoE,GAAG,CAAC,UAAClI,EAAe,EAAEmI,KAAK;UAApBtE,CAAC;QAAEC,CAAC;QAAEgE,KAAK;MAAc,OAAC;QAChCD,GAAG,EAAE,UAAGM,KAAK,cAAItE,CAAC,cAAIC,CAAC,CAAE;QACzBD,CAAC,EAAE,CAAC7C,cAAc,GAAG2G,aAAa,IAAI,CAAC,GAAG7D,CAAC;QAC3CA,CAAC,EAAE,CAAC9C,cAAc,GAAG8C,CAAC,GAAG6D,aAAa,IAAI,CAAC;QAC3CG,KAAK,EAAEA;OACR;IALgC,CAK/B,CAAC,GACL,EAAE;EATN,CASM,EACR,CAACvD,YAAY,EAAEoD,aAAa,EAAE3G,cAAc,CAAC,CAC9C;EAED,IAAMoH,eAAe,GAAG3C,iBAAiB,GACrC/B,mBAAmB,GACnBpD,gBAAgB,GAChBmD,mBAAmB,GACnBzB,iBAAiB;EAErB,IAAMqG,gBAAgB,GAAG3K,OAAO,CAAC;IAC/B,IAAIoI,YAAY,KAAK,IAAI,EAAE;MACzB,OAAO,IAAI;;IAGb;IACA,IAAIxF,gBAAgB,EAAE;MACpB,IAAMgI,YAAY,GAAGnI,aAAa,CAAC6H,MAAM,CACvC,gBAAM;QAAI,aAAM,CAAC9H,MAAM,MAAKI,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEJ,MAAM,KAAIjB,YAAY,CAACiB,MAAM,CAACA,MAAM,CAAC;MAAzE,CAAyE,CACpF;MACD,OAAOd,iBAAiB,CAAC0G,YAAY,EAAEwC,YAAY,EAAEnH,cAAc,CAAC;;IAGtE;IACA,OAAO/B,iBAAiB,CAAC0G,YAAY,EAAE3F,aAAa,EAAEgB,cAAc,CAAC;EACvE,CAAC,EAAE,CAAC2E,YAAY,EAAExF,gBAAgB,EAAEH,aAAa,EAAEgB,cAAc,CAAC,CAAC;EAEnE,IAAMoH,eAAe,GAAG7K,OAAO,CAC7B;IACE,uBAAgB,GACZ,UAAG2K,gBAAgB,CAACG,QAAQ,eAAKH,gBAAgB,CAACI,OAAO,CAACP,GAAG,CAAC,WAAC;MAAI,QAAC,CAACL,GAAG,GAAG,GAAG,GAAGa,CAAC,CAACC,KAAK;IAArB,CAAqB,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAE,GACrG,EAAE;EAFN,CAEM,EACR,CAACP,gBAAgB,CAAC,CACnB;EAED;EACA,IAAMQ,gBAAgB,GACpBN,eAAe,IAAI,CAACjI,gBAAgB,IAAIE,qBAAqB,KAAK,IAAI,GAAG+H,eAAe,GAAG,EAAE;EAE/F,OACEjL;IAAKwL,SAAS,EAAEpJ,MAAM,CAAC,iBAAiB,CAAC;IAAEqJ,GAAG,EAAEtG;EAAY,GAC1DnF,oBAACc,SAAS;IAAC4K,IAAI,EAAElF,CAAC;IAAE0E,QAAQ,EAAC,MAAM;IAACrE,KAAK,EAAEJ,EAAE,CAACI,KAAK,CAACL,CAAC;EAAC,EAAI,EAC1DxG;IAAKwL,SAAS,EAAEpJ,MAAM,CAAC,6BAA6B;EAAC,GACnDpC,oBAACe,aAAa;IACZ2F,KAAK,EAAED,EAAE,CAACC,KAAK,CAACF,CAAC,CAAC;IAClBG,KAAK,EAAEF,EAAE,CAACE,KAAK,CAACH,CAAC,CAAC;IAClBI,aAAa,EAAEH,EAAE,CAACG,aAAa,CAACJ,CAAC,CAAkB;IACnDmF,SAAS,EAAE/G;EAAkB,EAC7B,EAEF5E;IAAKwL,SAAS,EAAEpJ,MAAM,CAAC,2BAA2B;EAAC,GACjDpC,oBAACa,SAAS;IACR4K,GAAG,EAAEhH,OAAO;IACZmH,KAAK,EAAE3G,SAAS;IAChB4G,MAAM,EAAElJ,UAAU;IAClBmJ,YAAY,EAAEjH,kBAAkB;IAChCkH,WAAW,EAAE5E,aAAa,IAAI,CAACC,eAAe;IAC9ClD,SAAS,EAAEA,SAAS;IACpBC,cAAc,EAAEA,cAAc;IAC9BC,eAAe,EAAEA,eAAe;IAChC0C,mBAAmB,EAAExC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE0H,wBAAwB;IAC1DC,cAAc,EAAEV,gBAAgB;IAChCW,gBAAgB,EAAE/D,iBAAiB,GAAG/B,mBAAmB,GAAGD,mBAAmB;IAC/EgG,gBAAgB,EAAE9F,aAAa,KAAK,sBAAqB,aAArBnD,qBAAqB,uBAArBA,qBAAqB,CAAEkJ,QAAQ,EAAE,MAAIvE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE0C,GAAG,EAAC;IACpF8B,wBAAwB,EAAElE,iBAAiB,GAAG,CAAC,GAAG,CAAC;IACnDmE,WAAW,EAAEjE,cAAc;IAC3BkE,UAAU,EAAEjE,aAAa;IACzBkE,WAAW,EAAEtD,cAAc;IAC3BI,OAAO,EAAEH,UAAU;IACnBsD,MAAM,EAAElD,SAAS;IACjBO,SAAS,EAAED;EAAY,GAEvB7J,oBAACgB,UAAU;IACT0K,IAAI,EAAElF,CAAC;IACPE,KAAK,EAAED,EAAE,CAACC,KAAK,CAACF,CAAC,CAAC;IAClBG,KAAK,EAAEF,EAAE,CAACE,KAAK,CAACH,CAAC,CAAC;IAClBI,aAAa,EAAEH,EAAE,CAACG,aAAa,CAACJ,CAAC,CAAkB;IACnDK,KAAK,EAAEJ,EAAE,CAACI,KAAK,CAACL,CAAC,CAAC;IAClBM,mBAAmB,EAAEL,EAAE,CAACK,mBAAmB,CAACN,CAAC,CAAC;IAC9CoF,KAAK,EAAE3G,SAAS;IAChB4G,MAAM,EAAElJ;EAAU,EAClB,EAEDe,cAAc,IAAI1D,oBAACkB,iBAAiB;IAACyF,KAAK,EAAEX,MAAM;IAAEU,KAAK,EAAER,MAAM;IAAE2F,MAAM,EAAElJ;EAAU,EAAI,EAEzFoB,qBAAqB,IAAIsB,SAAS,IACjCrF,oBAACmB,kBAAkB;IAACuK,IAAI,EAAEnF,CAAC;IAAEI,KAAK,EAAEX,MAAM;IAAE4F,KAAK,EAAE3G,SAAS;IAAE4G,MAAM,EAAElJ;EAAU,EACjF,EAED3C,oBAAC+B,UAAU;IACT2J,IAAI,EAAEnF,CAAC;IACPtB,SAAS,EAAEA,SAAS;IACpBtC,UAAU,EAAEA,UAAU;IACtBG,iBAAiB,EAAEA,iBAAiB,aAAjBA,iBAAiB,cAAjBA,iBAAiB,GAAI,IAAI;IAC5CI,qBAAqB,EAAEA,qBAAqB;IAC5CM,WAAW,EAAEA,WAAW;IACxB2E,iBAAiB,EAAEA,iBAAiB;IACpCtF,aAAa,EAAEA,aAAa;IAC5BkD,MAAM,EAAEA,MAAM;IACdC,MAAM,EAAEA;EAAM,EACd,EAEDjC,qBAAqB,IAAI,CAACsB,SAAS,IAClCrF,oBAACmB,kBAAkB;IAACuK,IAAI,EAAEnF,CAAC;IAAEI,KAAK,EAAEX,MAAM;IAAE4F,KAAK,EAAE3G,SAAS;IAAE4G,MAAM,EAAElJ;EAAU,EACjF,EAED3C,oBAACqB,cAAc;IACbkJ,GAAG,EAAEF,aAAa,IAAI,EAAE;IACxBwB,MAAM,EAAElJ,UAAU;IAClB+J,UAAU,EAAE1J,gBAAgB,KAAK,IAAI;IACrC2J,QAAQ,EAAE,CAACxE,iBAAiB;IAC5ByE,MAAM,EAAEnC,eAAe;IACvBgB,GAAG,EAAE/G;EAAiB,EACtB,EAED1B,gBAAgB,IACfhD,oBAACoB,gBAAgB;IACfqK,GAAG,EAAEtF,mBAAmB;IACxB0B,KAAK,EAAEA,KAAK;IACZgF,IAAI,EAAC,QAAQ;IACb3I,SAAS,EAAE+G,eAAe;IAC1B6B,YAAY,EAAE,IAAI;IAClBC,YAAY,EAAE3F;EAAe,EAEhC,EAEAe,iBAAiB,IAAIpC,MAAM,CAACiE,aAAa,EAAE,IAC1ChK,oBAACgC,SAAS;IACRkC,SAAS,EAAE+G,eAAe;IAC1B7F,SAAS,EAAEA,SAAS;IACpBgC,eAAe,EAAEA,eAAe;IAChCF,SAAS,EAAEA,SAAS;IACpBhE,qBAAqB,EAAEA,qBAAqB;IAC5CkD,mBAAmB,EAAEA;EAAmB,EAE3C,EAEDpG,oBAACiB,YAAY;IACXyK,IAAI,EAAEnF,CAAC;IACPG,KAAK,EAAED,EAAE,CAACC,KAAK,CAACH,CAAC,CAAC;IAClBI,KAAK,EAAEF,EAAE,CAACE,KAAK,CAACJ,CAAC,CAAC;IAClBK,aAAa,EAAEH,EAAE,CAACG,aAAa,CAACL,CAAC,CAAkB;IACnDM,KAAK,EAAEJ,EAAE,CAACI,KAAK,CAACN,CAAC,CAAC;IAClBO,mBAAmB,EAAEL,EAAE,CAACK,mBAAmB,CAACP,CAAC,CAAC;IAC9CsF,MAAM,EAAElJ,UAAU;IAClBiJ,KAAK,EAAE3G,SAAS;IAChB+H,UAAU,EAAErI,eAAe,GAAGnC,oBAAoB;IAClDyK,WAAW,EAAEzK,oBAAoB;IACjC0K,UAAU,EAAEpI;EAAqB,EACjC,CACQ,EAEZ9E,oBAACc,SAAS;IAAC4K,IAAI,EAAEnF,CAAC;IAAE2E,QAAQ,EAAC,QAAQ;IAACrE,KAAK,EAAEJ,EAAE,CAACI,KAAK,CAACN,CAAC;EAAC,EAAI,CACxD,EAENvG,oBAACwB,YAAY;IACX2D,YAAY,EAAED,kBAAkB;IAChCiI,QAAQ,EAAErC,eAAe;IACzBsC,MAAM,EAAEjG,aAAa;IACrBkG,QAAQ,EAAEjG,eAAe;IACzB2D,gBAAgB,EAAEA,gBAAgB;IAClCuC,SAAS,EAAEzE,gBAAgB;IAC3B0E,IAAI,EAAEjK,iBAAiB;IACvBkK,gBAAgB,EAAElJ,WAAW,CAACmJ;EAA6B,EAC3D,CACE,CACF;AAEV","names":["React","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","nodeContains","useVisualRefresh","getXTickCount","getYTickCount","createXTicks","createYTicks","ChartPlot","AxisLabel","LabelsMeasure","LeftLabels","BottomLabels","VerticalGridLines","EmphasizedBaseline","HighlightedPoint","VerticalMarker","ChartScale","NumericChartScale","ChartPopover","computeDomainX","computeDomainY","isXThreshold","makeScaledSeries","makeScaledBarGroups","formatHighlighted","DataSeries","BarGroups","useMouseHover","useNavigation","usePopover","styles","useContainerWidth","useMergeRefs","LEFT_LABELS_MARGIN","BOTTOM_LABELS_OFFSET","ChartContainer","_a","plotHeight","series","visibleSeries","highlightedSeries","onHighlightChange","highlightedPoint","setHighlightedPoint","highlightedGroupIndex","setHighlightedGroupIndex","legendSeries","_c","detailPopoverSize","_d","stackedBars","_e","horizontalBars","xScaleType","yScaleType","xTickFormatter","yTickFormatter","emphasizeBaselineAxis","xTitle","yTitle","ariaLabel","ariaLabelledby","ariaDescription","_f","i18nStrings","plotContainerRef","props","plotRef","verticalMarkerRef","leftLabelsWidth","setLeftLabelsWidth","bottomLabelsHeight","setBottomLabelsHeight","containerWidth","containerMeasureRef","plotWidth","containerRefObject","containerRef","isRefresh","linesOnly","every","type","xDomain","yDomain","xTickCount","yTickCount","rangeBottomTop","rangeTopBottom","rangeLeftRight","xScale","yScale","xTicks","yTicks","highlightedPointRef","highlightedGroupRef","isPlotFocused","setPlotFocused","x","y","xy","ticks","scale","tickFormatter","title","ariaRoleDescription","xAxisAriaRoleDescription","yAxisAriaRoleDescription","scaledSeries","barGroups","isPopoverOpen","isPopoverPinned","showPopover","pinPopover","dismissPopover","isHandlersDisabled","setHandlersDisabled","timeoutId_1","setTimeout","highlightPoint","point","highlightSeries","highlightGroup","groupIndex","clearHighlightedSeries","_o","isGroupNavigation","handlers","onSVGMouseMove","onSVGMouseOut","verticalMarkerLeft","highlightedX","scaledSeries_1","_i","series_1","datum","onPopoverDismiss","outsideClick","current","focusApplication","focusPlot","onSVGMouseDown","onSVGFocus","event","trigger","onFocus","onSVGBlur","blurTarget","relatedTarget","target","Element","contains","onSVGKeyDown","onKeyDown","xOffset","isCategorical","Math","max","d3Scale","bandwidth","verticalLineX","x_1","key","color","verticalMarkers","filter","isNaN","map","index","popoverTrackRef","highlightDetails","seriesToShow","activeAriaLabel","position","details","d","value","join","activeLiveRegion","className","ref","axis","autoWidth","width","height","offsetBottom","isClickable","chartAriaRoleDescription","ariaLiveRegion","activeElementRef","activeElementKey","toString","activeElementFocusOffset","onMouseMove","onMouseOut","onMouseDown","onBlur","showPoints","showLine","points","role","ariaHasPopup","ariaExpanded","offsetLeft","offsetRight","autoHeight","trackRef","isOpen","isPinned","onDismiss","size","dismissAriaLabel","detailPopoverDismissAriaLabel"],"sources":["/Users/dcastro/node_modules/src/mixed-line-bar-chart/chart-container.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\n\nimport { nodeContains } from '../internal/utils/dom';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\nimport { getXTickCount, getYTickCount, createXTicks, createYTicks } from '../internal/components/cartesian-chart/ticks';\nimport ChartPlot, { ChartPlotRef } from '../internal/components/chart-plot';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport LeftLabels from '../internal/components/cartesian-chart/left-labels';\nimport BottomLabels from '../internal/components/cartesian-chart/bottom-labels';\nimport VerticalGridLines from '../internal/components/cartesian-chart/vertical-grid-lines';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport HighlightedPoint from '../internal/components/cartesian-chart/highlighted-point';\nimport VerticalMarker from '../internal/components/cartesian-chart/vertical-marker';\nimport { ChartScale, NumericChartScale } from '../internal/components/cartesian-chart/scales';\nimport ChartPopover from './chart-popover';\nimport { ChartDataTypes, InternalChartSeries, MixedLineBarChartProps, ScaleType } from './interfaces';\nimport { computeDomainX, computeDomainY } from './domain';\nimport { isXThreshold } from './utils';\nimport makeScaledSeries, { ScaledPoint } from './make-scaled-series';\nimport makeScaledBarGroups, { ScaledBarGroup } from './make-scaled-bar-groups';\nimport formatHighlighted from './format-highlighted';\nimport DataSeries from './data-series';\nimport BarGroups from './bar-groups';\nimport { useMouseHover } from './hooks/use-mouse-hover';\nimport { useNavigation } from './hooks/use-navigation';\nimport { usePopover } from './hooks/use-popover';\n\nimport styles from './styles.css.js';\nimport { CartesianChartProps } from '../internal/components/cartesian-chart/interfaces';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nconst LEFT_LABELS_MARGIN = 16;\nconst BOTTOM_LABELS_OFFSET = 12;\n\ntype TickFormatter = undefined | ((value: ChartDataTypes) => string);\n\nexport interface ChartContainerProps<T extends ChartDataTypes> {\n  series: ReadonlyArray<InternalChartSeries<T>>;\n  visibleSeries: ReadonlyArray<InternalChartSeries<T>>;\n\n  height: number;\n  detailPopoverSize: MixedLineBarChartProps<T>['detailPopoverSize'];\n\n  xScaleType: ScaleType;\n  yScaleType: 'linear' | 'log';\n\n  xDomain: MixedLineBarChartProps<T>['xDomain'];\n  yDomain: MixedLineBarChartProps<T>['yDomain'];\n\n  xTickFormatter?: CartesianChartProps.TickFormatter<T>;\n  yTickFormatter?: CartesianChartProps.TickFormatter<number>;\n\n  xTitle?: string;\n  yTitle?: string;\n\n  stackedBars?: boolean;\n  emphasizeBaselineAxis: boolean;\n  horizontalBars?: boolean;\n\n  highlightedSeries?: MixedLineBarChartProps<T>['highlightedSeries'];\n  onHighlightChange: (series: InternalChartSeries<T>['series'] | null) => void;\n  highlightedPoint: ScaledPoint<T> | null;\n  setHighlightedPoint: (point: ScaledPoint<T> | null) => void;\n  highlightedGroupIndex: number | null;\n  setHighlightedGroupIndex: (groupIndex: number | null) => void;\n  legendSeries: null | MixedLineBarChartProps.ChartSeries<T>;\n\n  ariaLabel: MixedLineBarChartProps<T>['ariaLabel'];\n  ariaLabelledby: MixedLineBarChartProps<T>['ariaLabelledby'];\n  ariaDescription: MixedLineBarChartProps<T>['ariaDescription'];\n  i18nStrings: MixedLineBarChartProps<T>['i18nStrings'];\n\n  plotContainerRef: React.RefObject<HTMLDivElement>;\n}\n\nexport default function ChartContainer<T extends ChartDataTypes>({\n  height: plotHeight,\n  series,\n  visibleSeries,\n  highlightedSeries,\n  onHighlightChange,\n  highlightedPoint,\n  setHighlightedPoint,\n  highlightedGroupIndex,\n  setHighlightedGroupIndex,\n  legendSeries,\n  detailPopoverSize = 'medium',\n  stackedBars = false,\n  horizontalBars = false,\n  xScaleType,\n  yScaleType,\n  xTickFormatter,\n  yTickFormatter,\n  emphasizeBaselineAxis,\n  xTitle,\n  yTitle,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  i18nStrings = {},\n  plotContainerRef,\n  ...props\n}: ChartContainerProps<T>) {\n  const plotRef = useRef<ChartPlotRef>(null);\n  const verticalMarkerRef = useRef<SVGLineElement>(null);\n\n  const [leftLabelsWidth, setLeftLabelsWidth] = useState(0);\n  const [bottomLabelsHeight, setBottomLabelsHeight] = useState(0);\n  const [containerWidth, containerMeasureRef] = useContainerWidth(500);\n  const plotWidth = containerWidth ? containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN : 500;\n  const containerRefObject = useRef(null);\n  const containerRef = useMergeRefs(containerMeasureRef, containerRefObject);\n\n  const isRefresh = useVisualRefresh();\n\n  const linesOnly = series.every(({ series }) => series.type === 'line' || series.type === 'threshold');\n\n  const xDomain = (props.xDomain || computeDomainX(series, xScaleType)) as\n    | readonly number[]\n    | readonly string[]\n    | readonly Date[];\n  const yDomain = (props.yDomain || computeDomainY(series, yScaleType, stackedBars)) as readonly number[];\n\n  const xTickCount = getXTickCount(plotWidth);\n  const yTickCount = getYTickCount(plotHeight);\n\n  const rangeBottomTop: [number, number] = [0, plotHeight];\n  const rangeTopBottom: [number, number] = [plotHeight, 0];\n  const rangeLeftRight: [number, number] = [0, plotWidth];\n  const xScale = new ChartScale(xScaleType, xDomain, horizontalBars ? rangeBottomTop : rangeLeftRight, linesOnly);\n  const yScale = new NumericChartScale(\n    yScaleType,\n    yDomain,\n    horizontalBars ? rangeLeftRight : rangeTopBottom,\n    props.yDomain ? null : yTickCount\n  );\n\n  const xTicks = createXTicks(xScale, xTickCount);\n  const yTicks = createYTicks(yScale, yTickCount);\n\n  /**\n   * Interactions\n   */\n  const highlightedPointRef = useRef<SVGGElement>(null);\n  const highlightedGroupRef = useRef<SVGRectElement>(null);\n  const [isPlotFocused, setPlotFocused] = useState(false);\n\n  // Some chart components are rendered against \"x\" or \"y\" axes,\n  // When \"horizontalBars\" is enabled, the axes are inverted.\n  const x = !horizontalBars ? 'x' : 'y';\n  const y = !horizontalBars ? 'y' : 'x';\n  const xy = {\n    ticks: { x: xTicks, y: yTicks },\n    scale: { x: xScale, y: yScale },\n    tickFormatter: { x: xTickFormatter, y: yTickFormatter },\n    title: { x: xTitle, y: yTitle },\n    ariaRoleDescription: { x: i18nStrings.xAxisAriaRoleDescription, y: i18nStrings.yAxisAriaRoleDescription },\n  };\n\n  const scaledSeries = makeScaledSeries(visibleSeries, xScale, yScale);\n  const barGroups: ScaledBarGroup<T>[] = makeScaledBarGroups(visibleSeries, xScale, plotWidth, plotHeight, y);\n\n  const { isPopoverOpen, isPopoverPinned, showPopover, pinPopover, dismissPopover } = usePopover();\n\n  // Allows to add a delay between popover is dismissed and handlers are enabled to prevent immediate popover reopening.\n  const [isHandlersDisabled, setHandlersDisabled] = useState(!isPopoverPinned);\n  useEffect(() => {\n    if (isPopoverPinned) {\n      setHandlersDisabled(true);\n    } else {\n      const timeoutId = setTimeout(() => setHandlersDisabled(false), 25);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isPopoverPinned]);\n\n  // Highlighted point and highlighted series must be in sync.\n  // TODO: refactor the code so that it is not possible to make series and point highlight out of sync.\n  const highlightPoint = useCallback(\n    (point: ScaledPoint<T> | null) => {\n      setHighlightedGroupIndex(null);\n      setHighlightedPoint(point);\n    },\n    [setHighlightedPoint, setHighlightedGroupIndex]\n  );\n\n  const highlightSeries = useCallback(\n    (series: MixedLineBarChartProps.ChartSeries<T> | null) => {\n      if (series !== highlightedSeries) {\n        onHighlightChange(series);\n      }\n    },\n    [highlightedSeries, onHighlightChange]\n  );\n\n  const highlightGroup = useCallback(\n    (groupIndex: number) => {\n      highlightSeries(null);\n      setHighlightedPoint(null);\n      setHighlightedGroupIndex(groupIndex);\n    },\n    [highlightSeries, setHighlightedPoint, setHighlightedGroupIndex]\n  );\n\n  const clearHighlightedSeries = useCallback(() => {\n    highlightSeries(null);\n    setHighlightedGroupIndex(null);\n    setHighlightedPoint(null);\n    dismissPopover();\n  }, [dismissPopover, highlightSeries, setHighlightedGroupIndex, setHighlightedPoint]);\n\n  const { isGroupNavigation, ...handlers } = useNavigation({\n    series,\n    visibleSeries,\n    scaledSeries,\n    barGroups,\n    xScale,\n    yScale,\n    highlightedPoint,\n    highlightedGroupIndex,\n    highlightedSeries,\n    legendSeries,\n    isHandlersDisabled,\n    pinPopover,\n    highlightSeries,\n    highlightGroup,\n    highlightPoint,\n    clearHighlightedSeries,\n  });\n\n  const { onSVGMouseMove, onSVGMouseOut, verticalMarkerLeft } = useMouseHover<T>({\n    scaledSeries,\n    barGroups,\n    plotRef,\n    highlightSeries,\n    highlightPoint,\n    highlightGroup,\n    clearHighlightedSeries,\n    isGroupNavigation,\n    isHandlersDisabled,\n  });\n\n  // There are multiple ways to indicate what X is selected.\n  // TODO: make a uniform verticalMarkerX state to fit all use-cases.\n  const highlightedX = useMemo(() => {\n    if (highlightedGroupIndex !== null) {\n      return barGroups[highlightedGroupIndex].x;\n    }\n    if (verticalMarkerLeft !== null) {\n      for (const series of scaledSeries) {\n        if (series.x === verticalMarkerLeft) {\n          return series.datum?.x ?? null;\n        }\n      }\n    }\n    if (highlightedPoint !== null) {\n      return highlightedPoint?.datum?.x ?? null;\n    }\n    return null;\n  }, [highlightedPoint, verticalMarkerLeft, highlightedGroupIndex, scaledSeries, barGroups]);\n\n  const onPopoverDismiss = (outsideClick?: boolean) => {\n    dismissPopover();\n\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(() => {\n        if (highlightedPoint || highlightedGroupIndex !== null) {\n          plotRef.current?.focusApplication();\n        } else {\n          plotRef.current?.focusPlot();\n        }\n      }, 0);\n    }\n  };\n\n  useLayoutEffect(() => {\n    if (highlightedX !== null) {\n      showPopover();\n    }\n  }, [highlightedX, showPopover]);\n\n  const onSVGMouseDown = () => {\n    if (isPopoverOpen) {\n      if (isPopoverPinned) {\n        dismissPopover();\n      } else {\n        pinPopover();\n      }\n    } else {\n      showPopover();\n    }\n  };\n\n  const onSVGFocus = (event: React.FocusEvent, trigger: 'mouse' | 'keyboard') => {\n    setPlotFocused(true);\n    if (trigger === 'keyboard') {\n      handlers.onFocus();\n    } else {\n      // noop: clicks are handled separately\n    }\n  };\n\n  const onSVGBlur = (event: React.FocusEvent<Element>) => {\n    setPlotFocused(false);\n    const blurTarget = event.relatedTarget || event.target;\n    if (\n      blurTarget === null ||\n      !(blurTarget instanceof Element) ||\n      !nodeContains(containerRefObject.current, blurTarget)\n    ) {\n      setHighlightedPoint(null);\n      if (!plotContainerRef?.current?.contains(blurTarget)) {\n        clearHighlightedSeries();\n      }\n\n      if (isPopoverOpen && !isPopoverPinned) {\n        dismissPopover();\n      }\n    }\n  };\n\n  const onSVGKeyDown = handlers.onKeyDown;\n\n  const xOffset = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;\n\n  let verticalLineX: number | null = null;\n  if (verticalMarkerLeft !== null) {\n    verticalLineX = verticalMarkerLeft;\n  } else if (isGroupNavigation && highlightedGroupIndex !== null) {\n    const x = xScale.d3Scale(barGroups[highlightedGroupIndex].x as any) ?? null;\n    if (x !== null) {\n      verticalLineX = xOffset + x;\n    }\n  }\n\n  const point = useMemo(\n    () =>\n      highlightedPoint\n        ? {\n            key: `${highlightedPoint.x}-${highlightedPoint.y}`,\n            x: highlightedPoint.x,\n            y: highlightedPoint.y,\n            color: highlightedPoint.color,\n          }\n        : null,\n    [highlightedPoint]\n  );\n\n  const verticalMarkers = useMemo(\n    () =>\n      verticalLineX !== null\n        ? scaledSeries\n            .filter(({ x, y }) => (x === verticalLineX || isNaN(x)) && !isNaN(y))\n            .map(({ x, y, color }, index) => ({\n              key: `${index}-${x}-${y}`,\n              x: !horizontalBars ? verticalLineX || 0 : y,\n              y: !horizontalBars ? y : verticalLineX || 0,\n              color: color,\n            }))\n        : [],\n    [scaledSeries, verticalLineX, horizontalBars]\n  );\n\n  const popoverTrackRef = isGroupNavigation\n    ? highlightedGroupRef\n    : highlightedPoint\n    ? highlightedPointRef\n    : verticalMarkerRef;\n\n  const highlightDetails = useMemo(() => {\n    if (highlightedX === null) {\n      return null;\n    }\n\n    // When series point is highlighted show the corresponding series and matching x-thresholds.\n    if (highlightedPoint) {\n      const seriesToShow = visibleSeries.filter(\n        series => series.series === highlightedPoint?.series || isXThreshold(series.series)\n      );\n      return formatHighlighted(highlightedX, seriesToShow, xTickFormatter);\n    }\n\n    // Otherwise - show all visible series details.\n    return formatHighlighted(highlightedX, visibleSeries, xTickFormatter);\n  }, [highlightedX, highlightedPoint, visibleSeries, xTickFormatter]);\n\n  const activeAriaLabel = useMemo(\n    () =>\n      highlightDetails\n        ? `${highlightDetails.position}, ${highlightDetails.details.map(d => d.key + ' ' + d.value).join(',')}`\n        : '',\n    [highlightDetails]\n  );\n\n  // Live region is used when nothing is focused e.g. when hovering.\n  const activeLiveRegion =\n    activeAriaLabel && !highlightedPoint && highlightedGroupIndex === null ? activeAriaLabel : '';\n\n  return (\n    <div className={styles['chart-container']} ref={containerRef}>\n      <AxisLabel axis={y} position=\"left\" title={xy.title[y]} />\n      <div className={styles['chart-container__horizontal']}>\n        <LabelsMeasure\n          ticks={xy.ticks[y]}\n          scale={xy.scale[y]}\n          tickFormatter={xy.tickFormatter[y] as TickFormatter}\n          autoWidth={setLeftLabelsWidth}\n        />\n\n        <div className={styles['chart-container__vertical']}>\n          <ChartPlot\n            ref={plotRef}\n            width={plotWidth}\n            height={plotHeight}\n            offsetBottom={bottomLabelsHeight}\n            isClickable={isPopoverOpen && !isPopoverPinned}\n            ariaLabel={ariaLabel}\n            ariaLabelledby={ariaLabelledby}\n            ariaDescription={ariaDescription}\n            ariaRoleDescription={i18nStrings?.chartAriaRoleDescription}\n            ariaLiveRegion={activeLiveRegion}\n            activeElementRef={isGroupNavigation ? highlightedGroupRef : highlightedPointRef}\n            activeElementKey={isPlotFocused && (highlightedGroupIndex?.toString() || point?.key)}\n            activeElementFocusOffset={isGroupNavigation ? 0 : 3}\n            onMouseMove={onSVGMouseMove}\n            onMouseOut={onSVGMouseOut}\n            onMouseDown={onSVGMouseDown}\n            onFocus={onSVGFocus}\n            onBlur={onSVGBlur}\n            onKeyDown={onSVGKeyDown}\n          >\n            <LeftLabels\n              axis={y}\n              ticks={xy.ticks[y]}\n              scale={xy.scale[y]}\n              tickFormatter={xy.tickFormatter[y] as TickFormatter}\n              title={xy.title[y]}\n              ariaRoleDescription={xy.ariaRoleDescription[y]}\n              width={plotWidth}\n              height={plotHeight}\n            />\n\n            {horizontalBars && <VerticalGridLines scale={yScale} ticks={yTicks} height={plotHeight} />}\n\n            {emphasizeBaselineAxis && linesOnly && (\n              <EmphasizedBaseline axis={x} scale={yScale} width={plotWidth} height={plotHeight} />\n            )}\n\n            <DataSeries\n              axis={x}\n              plotWidth={plotWidth}\n              plotHeight={plotHeight}\n              highlightedSeries={highlightedSeries ?? null}\n              highlightedGroupIndex={highlightedGroupIndex}\n              stackedBars={stackedBars}\n              isGroupNavigation={isGroupNavigation}\n              visibleSeries={visibleSeries}\n              xScale={xScale}\n              yScale={yScale}\n            />\n\n            {emphasizeBaselineAxis && !linesOnly && (\n              <EmphasizedBaseline axis={x} scale={yScale} width={plotWidth} height={plotHeight} />\n            )}\n\n            <VerticalMarker\n              key={verticalLineX || ''}\n              height={plotHeight}\n              showPoints={highlightedPoint === null}\n              showLine={!isGroupNavigation}\n              points={verticalMarkers}\n              ref={verticalMarkerRef}\n            />\n\n            {highlightedPoint && (\n              <HighlightedPoint\n                ref={highlightedPointRef}\n                point={point}\n                role=\"button\"\n                ariaLabel={activeAriaLabel}\n                ariaHasPopup={true}\n                ariaExpanded={isPopoverPinned}\n              />\n            )}\n\n            {isGroupNavigation && xScale.isCategorical() && (\n              <BarGroups\n                ariaLabel={activeAriaLabel}\n                isRefresh={isRefresh}\n                isPopoverPinned={isPopoverPinned}\n                barGroups={barGroups}\n                highlightedGroupIndex={highlightedGroupIndex}\n                highlightedGroupRef={highlightedGroupRef}\n              />\n            )}\n\n            <BottomLabels\n              axis={x}\n              ticks={xy.ticks[x]}\n              scale={xy.scale[x]}\n              tickFormatter={xy.tickFormatter[x] as TickFormatter}\n              title={xy.title[x]}\n              ariaRoleDescription={xy.ariaRoleDescription[x]}\n              height={plotHeight}\n              width={plotWidth}\n              offsetLeft={leftLabelsWidth + BOTTOM_LABELS_OFFSET}\n              offsetRight={BOTTOM_LABELS_OFFSET}\n              autoHeight={setBottomLabelsHeight}\n            />\n          </ChartPlot>\n\n          <AxisLabel axis={x} position=\"bottom\" title={xy.title[x]} />\n        </div>\n\n        <ChartPopover\n          containerRef={containerRefObject}\n          trackRef={popoverTrackRef}\n          isOpen={isPopoverOpen}\n          isPinned={isPopoverPinned}\n          highlightDetails={highlightDetails}\n          onDismiss={onPopoverDismiss}\n          size={detailPopoverSize}\n          dismissAriaLabel={i18nStrings.detailPopoverDismissAriaLabel}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}