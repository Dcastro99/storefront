{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo } from 'react';\nexport default memo(ThresholdSeries);\nfunction ThresholdSeries(_a) {\n  var data = _a.data,\n    xScale = _a.xScale,\n    color = _a.color,\n    chartAreaClipPath = _a.chartAreaClipPath;\n  var range = xScale.d3Scale.range();\n  var y = data[0].scaled.y0;\n  var path = {\n    x1: range[0],\n    x2: range[1],\n    y1: y,\n    y2: y\n  };\n  return React.createElement(\"line\", __assign({\n    \"aria-hidden\": true,\n    stroke: color,\n    clipPath: \"url(#\".concat(chartAreaClipPath, \")\")\n  }, path));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AAWnC,eAAeA,IAAI,CAACC,eAAe,CAA2B;AAE9D,SAASA,eAAe,CAAIC,EAAmE;MAAjEC,IAAI;IAAEC,MAAM;IAAEC,KAAK;IAAEC,iBAAiB;EAClE,IAAMC,KAAK,GAAGH,MAAM,CAACI,OAAO,CAACD,KAAK,EAAE;EACpC,IAAME,CAAC,GAAGN,IAAI,CAAC,CAAC,CAAC,CAACO,MAAM,CAACC,EAAE;EAC3B,IAAMC,IAAI,GAAG;IAAEC,EAAE,EAAEN,KAAK,CAAC,CAAC,CAAC;IAAEO,EAAE,EAAEP,KAAK,CAAC,CAAC,CAAC;IAAEQ,EAAE,EAAEN,CAAC;IAAEO,EAAE,EAAEP;EAAC,CAAE;EAEzD,OAAOV;IAAA,eAAmB,IAAI;IAAEkB,MAAM,EAAEZ,KAAK;IAAEa,QAAQ,EAAE,eAAQZ,iBAAiB;EAAG,GAAMM,IAAI,EAAI;AACrG","names":["React","memo","ThresholdSeries","_a","data","xScale","color","chartAreaClipPath","range","d3Scale","y","scaled","y0","path","x1","x2","y1","y2","stroke","clipPath"],"sources":["/Users/dcastro/node_modules/src/area-chart/elements/threshold-series.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo } from 'react';\nimport { ChartScale } from '../../internal/components/cartesian-chart/scales';\nimport { ChartModel } from '../model';\n\nexport interface ThresholdSeriesProps<T> {\n  data: readonly ChartModel.PlotPoint<T>[];\n  xScale: ChartScale;\n  color: string;\n  chartAreaClipPath: string;\n}\n\nexport default memo(ThresholdSeries) as typeof ThresholdSeries;\n\nfunction ThresholdSeries<T>({ data, xScale, color, chartAreaClipPath }: ThresholdSeriesProps<T>) {\n  const range = xScale.d3Scale.range();\n  const y = data[0].scaled.y0;\n  const path = { x1: range[0], x2: range[1], y1: y, y2: y };\n\n  return <line aria-hidden={true} stroke={color} clipPath={`url(#${chartAreaClipPath})`} {...path} />;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}