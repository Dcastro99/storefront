{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { InternalButton } from '../../button/internal';\nimport styles from './styles.css.js';\nexport var togglesConfig = {\n  navigation: {\n    TagName: 'nav',\n    iconName: 'menu',\n    getLabels: function (labels) {\n      if (labels === void 0) {\n        labels = {};\n      }\n      return {\n        mainLabel: labels.navigation,\n        openLabel: labels.navigationToggle,\n        closeLabel: labels.navigationClose\n      };\n    }\n  },\n  tools: {\n    TagName: 'aside',\n    iconName: 'status-info',\n    getLabels: function (labels) {\n      if (labels === void 0) {\n        labels = {};\n      }\n      return {\n        mainLabel: labels.tools,\n        openLabel: labels.toolsToggle,\n        closeLabel: labels.toolsClose\n      };\n    }\n  }\n};\nexport var AppLayoutButton = React.forwardRef(function (_a, ref) {\n  var className = _a.className,\n    ariaLabel = _a.ariaLabel,\n    ariaExpanded = _a.ariaExpanded,\n    iconName = _a.iconName,\n    disabled = _a.disabled,\n    onClick = _a.onClick;\n  return React.createElement(InternalButton, {\n    ref: ref,\n    className: className,\n    ariaLabel: ariaLabel,\n    variant: \"icon\",\n    formAction: \"none\",\n    onClick: onClick,\n    iconName: iconName,\n    disabled: disabled,\n    ariaExpanded: ariaExpanded,\n    __nativeAttributes: {\n      'aria-haspopup': true\n    }\n  });\n});\nexport var CloseButton = React.forwardRef(function (_a, ref) {\n  var className = _a.className,\n    ariaLabel = _a.ariaLabel,\n    onClick = _a.onClick,\n    iconName = _a.iconName;\n  return React.createElement(\"span\", {\n    className: styles['close-button']\n  }, React.createElement(AppLayoutButton, {\n    ref: ref,\n    className: className,\n    ariaExpanded: true,\n    ariaLabel: ariaLabel,\n    iconName: iconName,\n    onClick: onClick\n  }));\n});","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,cAAc,QAAQ,uBAAuB;AAGtD,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAO,IAAMC,aAAa,GAAG;EAC3BC,UAAU,EAAE;IACVC,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,UAACC,MAAkC;MAAlC;QAAAA,WAAkC;MAAA;MAAK,OAAC;QAClDC,SAAS,EAAED,MAAM,CAACJ,UAAU;QAC5BM,SAAS,EAAEF,MAAM,CAACG,gBAAgB;QAClCC,UAAU,EAAEJ,MAAM,CAACK;OACpB;IAJkD;GAKpD;EACDC,KAAK,EAAE;IACLT,OAAO,EAAE,OAAO;IAChBC,QAAQ,EAAE,aAAa;IACvBC,SAAS,EAAE,UAACC,MAAkC;MAAlC;QAAAA,WAAkC;MAAA;MAAK,OAAC;QAClDC,SAAS,EAAED,MAAM,CAACM,KAAK;QACvBJ,SAAS,EAAEF,MAAM,CAACO,WAAW;QAC7BH,UAAU,EAAEJ,MAAM,CAACQ;OACpB;IAJkD;;CAM7C;AAEV,OAAO,IAAMC,eAAe,GAAGjB,KAAK,CAACkB,UAAU,CAC7C,UACEC,EAAyF,EACzFC,GAA+B;MAD7BC,SAAS;IAAEC,SAAS;IAAEC,YAAY;IAAEjB,QAAQ;IAAEkB,QAAQ;IAAEC,OAAO;EAGjE,OACEzB,oBAACC,cAAc;IACbmB,GAAG,EAAEA,GAAG;IACRC,SAAS,EAAEA,SAAS;IACpBC,SAAS,EAAEA,SAAS;IACpBI,OAAO,EAAC,MAAM;IACdC,UAAU,EAAC,MAAM;IACjBF,OAAO,EAAEA,OAAO;IAChBnB,QAAQ,EAAEA,QAAQ;IAClBkB,QAAQ,EAAEA,QAAQ;IAClBD,YAAY,EAAEA,YAAY;IAC1BK,kBAAkB,EAAE;MAAE,eAAe,EAAE;IAAI;EAAE,EAC7C;AAEN,CAAC,CACF;AASD,OAAO,IAAMC,WAAW,GAAG7B,KAAK,CAACkB,UAAU,CACzC,UAACC,EAA6D,EAAEC,GAA+B;MAA5FC,SAAS;IAAEC,SAAS;IAAEG,OAAO;IAAEnB,QAAQ;EACxC,OACEN;IAAMqB,SAAS,EAAEnB,MAAM,CAAC,cAAc;EAAC,GACrCF,oBAACiB,eAAe;IACdG,GAAG,EAAEA,GAAG;IACRC,SAAS,EAAEA,SAAS;IACpBE,YAAY,EAAE,IAAI;IAClBD,SAAS,EAAEA,SAAS;IACpBhB,QAAQ,EAAEA,QAAQ;IAClBmB,OAAO,EAAEA;EAAO,EAChB,CACG;AAEX,CAAC,CACF","names":["React","InternalButton","styles","togglesConfig","navigation","TagName","iconName","getLabels","labels","mainLabel","openLabel","navigationToggle","closeLabel","navigationClose","tools","toolsToggle","toolsClose","AppLayoutButton","forwardRef","_a","ref","className","ariaLabel","ariaExpanded","disabled","onClick","variant","formAction","__nativeAttributes","CloseButton"],"sources":["/Users/dcastro/node_modules/src/app-layout/toggles/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { ButtonProps } from '../../button/interfaces';\nimport { IconProps } from '../../icon/interfaces';\nimport { InternalButton } from '../../button/internal';\nimport { AppLayoutProps } from '../interfaces';\nimport { AppLayoutButtonProps } from './interfaces';\nimport styles from './styles.css.js';\n\nexport const togglesConfig = {\n  navigation: {\n    TagName: 'nav',\n    iconName: 'menu',\n    getLabels: (labels: AppLayoutProps.Labels = {}) => ({\n      mainLabel: labels.navigation,\n      openLabel: labels.navigationToggle,\n      closeLabel: labels.navigationClose,\n    }),\n  },\n  tools: {\n    TagName: 'aside',\n    iconName: 'status-info',\n    getLabels: (labels: AppLayoutProps.Labels = {}) => ({\n      mainLabel: labels.tools,\n      openLabel: labels.toolsToggle,\n      closeLabel: labels.toolsClose,\n    }),\n  },\n} as const;\n\nexport const AppLayoutButton = React.forwardRef(\n  (\n    { className, ariaLabel, ariaExpanded, iconName, disabled, onClick }: AppLayoutButtonProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    return (\n      <InternalButton\n        ref={ref}\n        className={className}\n        ariaLabel={ariaLabel}\n        variant=\"icon\"\n        formAction=\"none\"\n        onClick={onClick}\n        iconName={iconName}\n        disabled={disabled}\n        ariaExpanded={ariaExpanded}\n        __nativeAttributes={{ 'aria-haspopup': true }}\n      />\n    );\n  }\n);\n\ninterface CloseButtonProps {\n  className?: string;\n  ariaLabel: string | undefined;\n  onClick: () => void;\n  iconName: IconProps.Name;\n}\n\nexport const CloseButton = React.forwardRef(\n  ({ className, ariaLabel, onClick, iconName }: CloseButtonProps, ref: React.Ref<ButtonProps.Ref>) => {\n    return (\n      <span className={styles['close-button']}>\n        <AppLayoutButton\n          ref={ref}\n          className={className}\n          ariaExpanded={true}\n          ariaLabel={ariaLabel}\n          iconName={iconName}\n          onClick={onClick}\n        />\n      </span>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}