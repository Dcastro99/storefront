{"ast":null,"code":"import React from 'react';\nimport InternalSpinner from '../spinner/internal';\nimport InternalIcon from '../icon/internal';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { InternalButton } from '../button/internal';\nimport { warnOnce } from '../internal/logging';\nimport { isDevelopment } from '../internal/is-development';\nvar ICON_TYPES = {\n  success: 'status-positive',\n  warning: 'status-warning',\n  info: 'status-info',\n  error: 'status-negative'\n};\nfunction actionButton(buttonText, onButtonClick) {\n  return React.createElement(InternalButton, {\n    onClick: onButtonClick,\n    className: styles['action-button'],\n    formAction: \"none\"\n  }, buttonText);\n}\nfunction dismissButton(dismissLabel, onDismiss) {\n  return React.createElement(\"div\", {\n    className: styles['dismiss-button-wrapper']\n  }, React.createElement(InternalButton, {\n    onClick: onDismiss,\n    className: styles['dismiss-button'],\n    variant: \"flashbar-icon\",\n    iconName: \"close\",\n    formAction: \"none\",\n    ariaLabel: dismissLabel\n  }));\n}\nexport var Flash = React.forwardRef(function (_a, ref) {\n  var _b;\n  var header = _a.header,\n    content = _a.content,\n    dismissible = _a.dismissible,\n    dismissLabel = _a.dismissLabel,\n    statusIconAriaLabel = _a.statusIconAriaLabel,\n    loading = _a.loading,\n    action = _a.action,\n    buttonText = _a.buttonText,\n    onButtonClick = _a.onButtonClick,\n    onDismiss = _a.onDismiss,\n    className = _a.className,\n    transitionState = _a.transitionState,\n    _c = _a.type,\n    type = _c === void 0 ? 'info' : _c;\n  if (isDevelopment) {\n    if (buttonText && !onButtonClick) {\n      warnOnce('Flashbar', \"You provided a `buttonText` prop without an `onButtonClick` handler. This will render a non-interactive action button.\");\n    }\n    if (dismissible && !onDismiss) {\n      warnOnce('Flashbar', \"You have set the `dismissible` prop without an `onDismiss` handler. This will render a non-interactive dismiss button.\");\n    }\n  }\n  var button = action || buttonText && actionButton(buttonText, onButtonClick);\n  var iconType = ICON_TYPES[type];\n  var icon = loading ? React.createElement(InternalSpinner, null) : React.createElement(InternalIcon, {\n    name: iconType\n  });\n  var effectiveType = loading ? 'info' : type;\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: clsx(styles.flash, styles[\"flash-type-\".concat(effectiveType)], className, transitionState ? (_b = {}, _b[styles.enter] = transitionState === 'enter', _b[styles.entering] = transitionState === 'entering', _b[styles.entered] = transitionState === 'entered', _b[styles.exit] = transitionState === 'exit', _b[styles.exiting] = transitionState === 'exiting', _b[styles.exited] = transitionState === 'exited', _b) : '')\n  }, React.createElement(\"div\", {\n    className: clsx(styles['flash-icon'], styles['flash-text']),\n    role: \"img\",\n    \"aria-label\": statusIconAriaLabel\n  }, icon), React.createElement(\"div\", {\n    className: styles['flash-body']\n  }, React.createElement(\"div\", {\n    className: clsx(styles['flash-message'], styles['flash-text'])\n  }, React.createElement(\"div\", {\n    className: styles['flash-header']\n  }, header), React.createElement(\"div\", {\n    className: styles['flash-content']\n  }, content)), button && React.createElement(\"div\", {\n    className: styles['action-button-wrapper']\n  }, button)), dismissible && dismissButton(dismissLabel, onDismiss));\n});","map":{"version":3,"mappings":"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","names":["React","InternalSpinner","InternalIcon","clsx","styles","InternalButton","warnOnce","isDevelopment","ICON_TYPES","success","warning","info","error","actionButton","buttonText","onButtonClick","onClick","className","formAction","dismissButton","dismissLabel","onDismiss","variant","iconName","ariaLabel","Flash","forwardRef","_a","ref","header","content","dismissible","statusIconAriaLabel","loading","action","transitionState","_c","type","button","iconType","icon","name","effectiveType","flash","_b","enter","entering","entered","exit","exiting","exited","role"],"sources":["/Users/dcastro/node_modules/src/flashbar/flash.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { FlashbarProps } from './interfaces';\nimport React from 'react';\nimport InternalSpinner from '../spinner/internal';\nimport InternalIcon from '../icon/internal';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { InternalButton } from '../button/internal';\nimport { warnOnce } from '../internal/logging';\nimport { isDevelopment } from '../internal/is-development';\n\nconst ICON_TYPES = {\n  success: 'status-positive',\n  warning: 'status-warning',\n  info: 'status-info',\n  error: 'status-negative',\n} as const;\n\nfunction actionButton(\n  buttonText: FlashbarProps.MessageDefinition['buttonText'],\n  onButtonClick: FlashbarProps.MessageDefinition['onButtonClick']\n) {\n  return (\n    <InternalButton onClick={onButtonClick} className={styles['action-button']} formAction=\"none\">\n      {buttonText}\n    </InternalButton>\n  );\n}\n\nfunction dismissButton(\n  dismissLabel: FlashbarProps.MessageDefinition['dismissLabel'],\n  onDismiss: FlashbarProps.MessageDefinition['onDismiss']\n) {\n  return (\n    <div className={styles['dismiss-button-wrapper']}>\n      <InternalButton\n        onClick={onDismiss}\n        className={styles['dismiss-button']}\n        variant=\"flashbar-icon\"\n        iconName=\"close\"\n        formAction=\"none\"\n        ariaLabel={dismissLabel}\n      />\n    </div>\n  );\n}\n\ninterface Flash extends FlashbarProps.MessageDefinition {\n  className: string;\n  transitionState?: string;\n}\n\nexport const Flash = React.forwardRef(\n  (\n    {\n      header,\n      content,\n      dismissible,\n      dismissLabel,\n      statusIconAriaLabel,\n      loading,\n      action,\n      buttonText,\n      onButtonClick,\n      onDismiss,\n      className,\n      transitionState,\n      type = 'info',\n    }: Flash,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    if (isDevelopment) {\n      if (buttonText && !onButtonClick) {\n        warnOnce(\n          'Flashbar',\n          `You provided a \\`buttonText\\` prop without an \\`onButtonClick\\` handler. This will render a non-interactive action button.`\n        );\n      }\n\n      if (dismissible && !onDismiss) {\n        warnOnce(\n          'Flashbar',\n          `You have set the \\`dismissible\\` prop without an \\`onDismiss\\` handler. This will render a non-interactive dismiss button.`\n        );\n      }\n    }\n\n    const button = action || (buttonText && actionButton(buttonText, onButtonClick));\n\n    const iconType = ICON_TYPES[type];\n\n    const icon = loading ? <InternalSpinner /> : <InternalIcon name={iconType} />;\n\n    const effectiveType = loading ? 'info' : type;\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          styles.flash,\n          styles[`flash-type-${effectiveType}`],\n          className,\n          transitionState\n            ? {\n                [styles.enter]: transitionState === 'enter',\n                [styles.entering]: transitionState === 'entering',\n                [styles.entered]: transitionState === 'entered',\n                [styles.exit]: transitionState === 'exit',\n                [styles.exiting]: transitionState === 'exiting',\n                [styles.exited]: transitionState === 'exited',\n              }\n            : ''\n        )}\n      >\n        <div className={clsx(styles['flash-icon'], styles['flash-text'])} role=\"img\" aria-label={statusIconAriaLabel}>\n          {icon}\n        </div>\n        <div className={styles['flash-body']}>\n          <div className={clsx(styles['flash-message'], styles['flash-text'])}>\n            <div className={styles['flash-header']}>{header}</div>\n            <div className={styles['flash-content']}>{content}</div>\n          </div>\n          {button && <div className={styles['action-button-wrapper']}>{button}</div>}\n        </div>\n        {dismissible && dismissButton(dismissLabel, onDismiss)}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}