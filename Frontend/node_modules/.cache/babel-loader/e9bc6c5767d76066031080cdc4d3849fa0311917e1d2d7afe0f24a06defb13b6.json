{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport Thead from './thead';\nimport { useStickyHeader } from './use-sticky-header';\nimport styles from './styles.css.js';\nexport default forwardRef(StickyHeader);\nfunction StickyHeader(_a, ref) {\n  var _b;\n  var variant = _a.variant,\n    theadProps = _a.theadProps,\n    wrapperRef = _a.wrapperRef,\n    theadRef = _a.theadRef,\n    secondaryWrapperRef = _a.secondaryWrapperRef,\n    onScroll = _a.onScroll,\n    tableRef = _a.tableRef;\n  var secondaryTheadRef = useRef(null);\n  var secondaryTableRef = useRef(null);\n  var isStuck = useContext(StickyHeaderContext).isStuck;\n  var _c = useState(null),\n    focusedColumn = _c[0],\n    setFocusedColumn = _c[1];\n  var _d = useStickyHeader(tableRef, theadRef, secondaryTheadRef, secondaryTableRef, wrapperRef),\n    scrollToRow = _d.scrollToRow,\n    scrollToTop = _d.scrollToTop;\n  useImperativeHandle(ref, function () {\n    return {\n      scrollToTop: scrollToTop,\n      scrollToRow: scrollToRow,\n      setFocusedColumn: setFocusedColumn\n    };\n  });\n  return React.createElement(\"div\", {\n    className: clsx(styles['header-secondary'], styles[\"variant-\".concat(variant)], (_b = {}, _b[styles.stuck] = isStuck, _b)),\n    \"aria-hidden\": true,\n    // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n    // to scroll the table horizontally\n    tabIndex: -1,\n    ref: secondaryWrapperRef,\n    onScroll: onScroll\n  }, React.createElement(\"table\", {\n    className: clsx(styles.table, styles['table-layout-fixed']),\n    role: \"table\",\n    ref: secondaryTableRef\n  }, React.createElement(Thead, __assign({\n    ref: secondaryTheadRef,\n    sticky: true,\n    stuck: isStuck,\n    showFocusRing: focusedColumn\n  }, theadProps))));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,UAAU,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC5F,SAASC,mBAAmB,QAAQ,gCAAgC;AAEpE,OAAOC,KAAqB,MAAM,SAAS;AAC3C,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,MAAM,MAAM,iBAAiB;AAkBpC,eAAeR,UAAU,CAACS,YAAY,CAAC;AAEvC,SAASA,YAAY,CACnBC,EAAyG,EACzGC,GAA+B;;MAD7BC,OAAO;IAAEC,UAAU;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,mBAAmB;IAAEC,QAAQ;IAAEC,QAAQ;EAGpF,IAAMC,iBAAiB,GAAGhB,MAAM,CAAsB,IAAI,CAAC;EAC3D,IAAMiB,iBAAiB,GAAGjB,MAAM,CAAmB,IAAI,CAAC;EAChD,WAAO,GAAKF,UAAU,CAACI,mBAAmB,CAAC,QAApC;EAET,SAAoCD,QAAQ,CAAgB,IAAI,CAAC;IAAhEiB,aAAa;IAAEC,gBAAgB,QAAiC;EACjE,SAA+Bf,eAAe,CAClDW,QAAQ,EACRH,QAAQ,EACRI,iBAAiB,EACjBC,iBAAiB,EACjBN,UAAU,CACX;IANOS,WAAW;IAAEC,WAAW,iBAM/B;EAEDtB,mBAAmB,CAACS,GAAG,EAAE;IAAM,OAAC;MAAEa,WAAW;MAAED,WAAW;MAAED,gBAAgB;IAAA,CAAE;EAA/C,CAAgD,CAAC;EAEhF,OACEvB;IACE0B,SAAS,EAAE3B,IAAI,CAACU,MAAM,CAAC,kBAAkB,CAAC,EAAEA,MAAM,CAAC,kBAAWI,OAAO,CAAE,CAAC,YACtEc,GAAClB,MAAM,CAACmB,KAAK,IAAGC,OAAO,MACvB;IAAA,eACW,IAAI;IACjB;IACA;IACAC,QAAQ,EAAE,CAAC,CAAC;IACZlB,GAAG,EAAEK,mBAAmB;IACxBC,QAAQ,EAAEA;EAAQ,GAElBlB;IAAO0B,SAAS,EAAE3B,IAAI,CAACU,MAAM,CAACsB,KAAK,EAAEtB,MAAM,CAAC,oBAAoB,CAAC,CAAC;IAAEuB,IAAI,EAAC,OAAO;IAACpB,GAAG,EAAES;EAAiB,GACrGrB,oBAACO,KAAK;IAACK,GAAG,EAAEQ,iBAAiB;IAAEa,MAAM,EAAE,IAAI;IAAEL,KAAK,EAAEC,OAAO;IAAEK,aAAa,EAAEZ;EAAa,GAAMR,UAAU,EAAI,CACvG,CACJ;AAEV","names":["clsx","React","forwardRef","useContext","useImperativeHandle","useRef","useState","StickyHeaderContext","Thead","useStickyHeader","styles","StickyHeader","_a","ref","variant","theadProps","wrapperRef","theadRef","secondaryWrapperRef","onScroll","tableRef","secondaryTheadRef","secondaryTableRef","focusedColumn","setFocusedColumn","scrollToRow","scrollToTop","className","_b","stuck","isStuck","tabIndex","table","role","sticky","showFocusRing"],"sources":["/Users/dcastro/node_modules/src/table/sticky-header.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { TableProps } from './interfaces';\nimport Thead, { TheadProps } from './thead';\nimport { useStickyHeader } from './use-sticky-header';\nimport styles from './styles.css.js';\n\nexport interface StickyHeaderRef {\n  scrollToTop(): void;\n  scrollToRow(node: null | HTMLElement): void;\n  setFocusedColumn(columnIndex: null | number): void;\n}\n\ninterface StickyHeaderProps {\n  variant: TableProps.Variant;\n  theadProps: TheadProps;\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  theadRef: React.RefObject<HTMLTableRowElement>;\n  secondaryWrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n}\n\nexport default forwardRef(StickyHeader);\n\nfunction StickyHeader(\n  { variant, theadProps, wrapperRef, theadRef, secondaryWrapperRef, onScroll, tableRef }: StickyHeaderProps,\n  ref: React.Ref<StickyHeaderRef>\n) {\n  const secondaryTheadRef = useRef<HTMLTableRowElement>(null);\n  const secondaryTableRef = useRef<HTMLTableElement>(null);\n  const { isStuck } = useContext(StickyHeaderContext);\n\n  const [focusedColumn, setFocusedColumn] = useState<number | null>(null);\n  const { scrollToRow, scrollToTop } = useStickyHeader(\n    tableRef,\n    theadRef,\n    secondaryTheadRef,\n    secondaryTableRef,\n    wrapperRef\n  );\n\n  useImperativeHandle(ref, () => ({ scrollToTop, scrollToRow, setFocusedColumn }));\n\n  return (\n    <div\n      className={clsx(styles['header-secondary'], styles[`variant-${variant}`], {\n        [styles.stuck]: isStuck,\n      })}\n      aria-hidden={true}\n      // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n      // to scroll the table horizontally\n      tabIndex={-1}\n      ref={secondaryWrapperRef}\n      onScroll={onScroll}\n    >\n      <table className={clsx(styles.table, styles['table-layout-fixed'])} role=\"table\" ref={secondaryTableRef}>\n        <Thead ref={secondaryTheadRef} sticky={true} stuck={isStuck} showFocusRing={focusedColumn} {...theadProps} />\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}