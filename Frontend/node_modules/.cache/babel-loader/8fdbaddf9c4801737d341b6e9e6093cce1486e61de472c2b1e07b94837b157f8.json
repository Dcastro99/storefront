{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar Input = React.forwardRef(function (_a, ref) {\n  var value = _a.value,\n    _b = _a.type,\n    type = _b === void 0 ? 'text' : _b,\n    step = _a.step,\n    inputMode = _a.inputMode,\n    _c = _a.autoComplete,\n    autoComplete = _c === void 0 ? true : _c,\n    disabled = _a.disabled,\n    readOnly = _a.readOnly,\n    disableBrowserAutocorrect = _a.disableBrowserAutocorrect,\n    onKeyDown = _a.onKeyDown,\n    onKeyUp = _a.onKeyUp,\n    onChange = _a.onChange,\n    onBlur = _a.onBlur,\n    onFocus = _a.onFocus,\n    ariaRequired = _a.ariaRequired,\n    name = _a.name,\n    placeholder = _a.placeholder,\n    autoFocus = _a.autoFocus,\n    ariaLabel = _a.ariaLabel,\n    rest = __rest(_a, [\"value\", \"type\", \"step\", \"inputMode\", \"autoComplete\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"onBlur\", \"onFocus\", \"ariaRequired\", \"name\", \"placeholder\", \"autoFocus\", \"ariaLabel\"]);\n  var baseComponentProps = useBaseComponent('Input');\n  var baseProps = getBaseProps(rest);\n  var _d = useFormFieldContext(rest),\n    ariaLabelledby = _d.ariaLabelledby,\n    ariaDescribedby = _d.ariaDescribedby,\n    controlId = _d.controlId,\n    invalid = _d.invalid;\n  var inputRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus.apply(_a, args);\n      },\n      select: function () {\n        var _a;\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n      }\n    };\n  }, [inputRef]);\n  return React.createElement(InternalInput, __assign({\n    ref: inputRef\n  }, __assign(__assign(__assign({}, baseProps), baseComponentProps), {\n    autoComplete: autoComplete,\n    ariaLabel: ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    ariaLabelledby: ariaLabelledby,\n    ariaRequired: ariaRequired,\n    autoFocus: autoFocus,\n    controlId: controlId,\n    disabled: disabled,\n    disableBrowserAutocorrect: disableBrowserAutocorrect,\n    invalid: invalid,\n    name: name,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onChange: onChange,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    type: type,\n    step: step,\n    inputMode: inputMode,\n    value: value\n  }), {\n    className: clsx(styles.root, baseProps.className)\n  }));\n});\napplyDisplayName(Input, 'Input');\nexport default Input;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAASC,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AAC/D,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,aAAa,MAAM,YAAY;AAEtC,SAASC,mBAAmB,QAAQ,wCAAwC;AAC5E,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,gBAAgB,MAAM,sCAAsC;AAInE,IAAMC,KAAK,GAAGT,KAAK,CAACU,UAAU,CAC5B,UACEC,EAoBa,EACbC,GAAwB;EApBtB,SAAK;IACLC,YAAa;IAAbC,IAAI,mBAAG,MAAM;IACbC,IAAI;IACJC,SAAS;IACTC,oBAAmB;IAAnBC,YAAY,mBAAG,IAAI;IACnBC,QAAQ;IACRC,QAAQ;IACRC,yBAAyB;IACzBC,SAAS;IACTC,OAAO;IACPC,QAAQ;IACRC,MAAM;IACNC,OAAO;IACPC,YAAY;IACZC,IAAI;IACJC,WAAW;IACXC,SAAS;IACTC,SAAS;IACNC,IAAI,cAnBT,qOAoBC,CADQ;EAIT,IAAMC,kBAAkB,GAAGzB,gBAAgB,CAAC,OAAO,CAAC;EACpD,IAAM0B,SAAS,GAAG/B,YAAY,CAAC6B,IAAI,CAAC;EAC9B,SAA0D3B,mBAAmB,CAAC2B,IAAI,CAAC;IAAjFG,cAAc;IAAEC,eAAe;IAAEC,SAAS;IAAEC,OAAO,aAA8B;EAEzF,IAAMC,QAAQ,GAAGrC,MAAM,CAAmB,IAAI,CAAC;EAE/CD,mBAAmB,CACjBW,GAAG,EACH;IAAM,OAAC;MACL4B,KAAK,EAAL;;QAAM;aAAA,UAAyC,EAAzCC,qBAAyC,EAAzCA,IAAyC;UAAzCC;;QACJ,cAAQ,CAACC,OAAO,0CAAEH,KAAK,WAAIE,IAAI,CAAC;MAClC,CAAC;MACDE,MAAM;;QACJ,cAAQ,CAACD,OAAO,0CAAEC,MAAM,EAAE;MAC5B;KACD;EAPK,CAOJ,EACF,CAACL,QAAQ,CAAC,CACX;EAED,OACEvC,oBAACI,aAAa;IACZQ,GAAG,EAAE2B;EAAQ,kCAERL,SAAS,GACTD,kBAAkB;IACrBf,YAAY;IACZa,SAAS;IACTK,eAAe;IACfD,cAAc;IACdR,YAAY;IACZG,SAAS;IACTO,SAAS;IACTlB,QAAQ;IACRE,yBAAyB;IACzBiB,OAAO;IACPV,IAAI;IACJN,SAAS;IACTC,OAAO;IACPC,QAAQ;IACRC,MAAM;IACNC,OAAO;IACPG,WAAW;IACXT,QAAQ;IACRN,IAAI;IACJC,IAAI;IACJC,SAAS;IACT6B,KAAK;EAAA;IAEPC,SAAS,EAAE/C,IAAI,CAACO,MAAM,CAACyC,IAAI,EAAEb,SAAS,CAACY,SAAS;EAAC,GACjD;AAEN,CAAC,CACF;AAEDvC,gBAAgB,CAACE,KAAK,EAAE,OAAO,CAAC;AAChC,eAAeA,KAAK","names":["clsx","React","useImperativeHandle","useRef","getBaseProps","InternalInput","useFormFieldContext","styles","applyDisplayName","useBaseComponent","Input","forwardRef","_a","ref","_b","type","step","inputMode","_c","autoComplete","disabled","readOnly","disableBrowserAutocorrect","onKeyDown","onKeyUp","onChange","onBlur","onFocus","ariaRequired","name","placeholder","autoFocus","ariaLabel","rest","baseComponentProps","baseProps","ariaLabelledby","ariaDescribedby","controlId","invalid","inputRef","focus","_i","args","current","select","value","className","root"],"sources":["/Users/dcastro/node_modules/src/input/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { Ref, useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport { InputProps } from './interfaces';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { InputProps };\n\nconst Input = React.forwardRef(\n  (\n    {\n      value,\n      type = 'text',\n      step,\n      inputMode,\n      autoComplete = true,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      placeholder,\n      autoFocus,\n      ariaLabel,\n      ...rest\n    }: InputProps,\n    ref: Ref<InputProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Input');\n    const baseProps = getBaseProps(rest);\n    const { ariaLabelledby, ariaDescribedby, controlId, invalid } = useFormFieldContext(rest);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        focus(...args: Parameters<HTMLElement['focus']>) {\n          inputRef.current?.focus(...args);\n        },\n        select() {\n          inputRef.current?.select();\n        },\n      }),\n      [inputRef]\n    );\n\n    return (\n      <InternalInput\n        ref={inputRef}\n        {...{\n          ...baseProps,\n          ...baseComponentProps,\n          autoComplete,\n          ariaLabel,\n          ariaDescribedby,\n          ariaLabelledby,\n          ariaRequired,\n          autoFocus,\n          controlId,\n          disabled,\n          disableBrowserAutocorrect,\n          invalid,\n          name,\n          onKeyDown,\n          onKeyUp,\n          onChange,\n          onBlur,\n          onFocus,\n          placeholder,\n          readOnly,\n          type,\n          step,\n          inputMode,\n          value,\n        }}\n        className={clsx(styles.root, baseProps.className)}\n      />\n    );\n  }\n);\n\napplyDisplayName(Input, 'Input');\nexport default Input;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}