{"ast":null,"code":"var stateToIcon = {\n  sortable: 'caret-down',\n  ascending: 'caret-up-filled',\n  descending: 'caret-down-filled'\n};\nvar stateToAriaSort = {\n  sortable: 'none',\n  ascending: 'ascending',\n  descending: 'descending'\n};\nexport var getSortingStatus = function (sortable, sorted, descending, disabled) {\n  if (sorted) {\n    if (descending) {\n      return 'descending';\n    }\n    return 'ascending';\n  }\n  if (sortable && !disabled) {\n    return 'sortable';\n  }\n  return undefined;\n};\nexport var getSortingIconName = function (sortingState) {\n  return stateToIcon[sortingState];\n};\nexport var getAriaSort = function (sortingState) {\n  return stateToAriaSort[sortingState];\n};\nexport var isSorted = function (column, sortingColumn) {\n  return column === sortingColumn || column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField || column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator;\n};","map":{"version":3,"mappings":"AAKA,IAAMA,WAAW,GAAG;EAClBC,QAAQ,EAAE,YAAY;EACtBC,SAAS,EAAE,iBAAiB;EAC5BC,UAAU,EAAE;CACJ;AACV,IAAMC,eAAe,GAAG;EACtBH,QAAQ,EAAE,MAAM;EAChBC,SAAS,EAAE,WAAW;EACtBC,UAAU,EAAE;CACJ;AAEV,OAAO,IAAME,gBAAgB,GAAG,UAC9BJ,QAAiB,EACjBK,MAAe,EACfH,UAAmB,EACnBI,QAAiB;EAEjB,IAAID,MAAM,EAAE;IACV,IAAIH,UAAU,EAAE;MACd,OAAO,YAAY;;IAErB,OAAO,WAAW;;EAEpB,IAAIF,QAAQ,IAAI,CAACM,QAAQ,EAAE;IACzB,OAAO,UAAU;;EAEnB,OAAOC,SAAS;AAClB,CAAC;AAED,OAAO,IAAMC,kBAAkB,GAAG,UAACC,YAA2B;EAAK,kBAAW,CAACA,YAAY,CAAC;AAAzB,CAAyB;AAC5F,OAAO,IAAMC,WAAW,GAAG,UAACD,YAA2B;EAAK,sBAAe,CAACA,YAAY,CAAC;AAA7B,CAA6B;AACzF,OAAO,IAAME,QAAQ,GAAG,UAAIC,MAAsC,EAAEC,aAA0C;EAC5G,aAAM,KAAKA,aAAa,IACvBD,MAAM,CAACE,YAAY,KAAKP,SAAS,IAAIK,MAAM,CAACE,YAAY,KAAKD,aAAa,CAACC,YAAa,IACxFF,MAAM,CAACG,iBAAiB,KAAKR,SAAS,IAAIK,MAAM,CAACG,iBAAiB,KAAKF,aAAa,CAACE,iBAAkB;AAFxG,CAEwG","names":["stateToIcon","sortable","ascending","descending","stateToAriaSort","getSortingStatus","sorted","disabled","undefined","getSortingIconName","sortingState","getAriaSort","isSorted","column","sortingColumn","sortingField","sortingComparator"],"sources":["/Users/dcastro/node_modules/src/table/header-cell/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { TableProps } from '../interfaces';\n\ntype SortingStatus = 'sortable' | 'ascending' | 'descending';\nconst stateToIcon = {\n  sortable: 'caret-down',\n  ascending: 'caret-up-filled',\n  descending: 'caret-down-filled',\n} as const;\nconst stateToAriaSort = {\n  sortable: 'none',\n  ascending: 'ascending',\n  descending: 'descending',\n} as const;\n\nexport const getSortingStatus = (\n  sortable: boolean,\n  sorted: boolean,\n  descending: boolean,\n  disabled: boolean\n): SortingStatus | undefined => {\n  if (sorted) {\n    if (descending) {\n      return 'descending';\n    }\n    return 'ascending';\n  }\n  if (sortable && !disabled) {\n    return 'sortable';\n  }\n  return undefined;\n};\n\nexport const getSortingIconName = (sortingState: SortingStatus) => stateToIcon[sortingState];\nexport const getAriaSort = (sortingState: SortingStatus) => stateToAriaSort[sortingState];\nexport const isSorted = <T>(column: TableProps.ColumnDefinition<T>, sortingColumn: TableProps.SortingColumn<T>) =>\n  column === sortingColumn ||\n  (column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField) ||\n  (column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}