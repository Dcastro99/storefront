{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getParentGroup } from './options-controller';\nimport VirtualList from './virtual-list';\nimport PlainList from './plain-list';\nimport { useAnnouncement } from '../select/utils/use-announcement';\nvar createMouseEventHandler = function (handler) {\n  return function (itemIndex) {\n    // prevent mouse events to avoid losing focus from the input\n    if (itemIndex > -1) {\n      handler(itemIndex);\n    }\n  };\n};\nexport default function AutosuggestOptionsList(_a) {\n  var autosuggestItemsState = _a.autosuggestItemsState,\n    autosuggestItemsHandlers = _a.autosuggestItemsHandlers,\n    highlightedOptionId = _a.highlightedOptionId,\n    highlightText = _a.highlightText,\n    listId = _a.listId,\n    controlId = _a.controlId,\n    enteredTextLabel = _a.enteredTextLabel,\n    handleLoadMore = _a.handleLoadMore,\n    hasDropdownStatus = _a.hasDropdownStatus,\n    virtualScroll = _a.virtualScroll,\n    selectedAriaLabel = _a.selectedAriaLabel,\n    renderHighlightedAriaLive = _a.renderHighlightedAriaLive,\n    listBottom = _a.listBottom;\n  var handleMouseUp = createMouseEventHandler(autosuggestItemsHandlers.selectVisibleOptionWithMouse);\n  var handleMouseMove = createMouseEventHandler(autosuggestItemsHandlers.highlightVisibleOptionWithMouse);\n  var ListComponent = virtualScroll ? VirtualList : PlainList;\n  var announcement = useAnnouncement({\n    announceSelected: true,\n    highlightedOption: autosuggestItemsState.highlightedOption,\n    getParent: function (option) {\n      var _a;\n      return (_a = getParentGroup(option)) === null || _a === void 0 ? void 0 : _a.option;\n    },\n    selectedAriaLabel: selectedAriaLabel,\n    renderHighlightedAriaLive: renderHighlightedAriaLive\n  });\n  return React.createElement(ListComponent, {\n    listBottom: listBottom,\n    handleLoadMore: handleLoadMore,\n    autosuggestItemsState: autosuggestItemsState,\n    highlightText: highlightText,\n    enteredTextLabel: enteredTextLabel,\n    highlightedA11yProps: highlightedOptionId ? {\n      id: highlightedOptionId\n    } : {},\n    hasDropdownStatus: hasDropdownStatus,\n    menuProps: {\n      id: listId,\n      ariaLabelledby: controlId,\n      onMouseUp: handleMouseUp,\n      onMouseMove: handleMouseMove\n    },\n    screenReaderContent: announcement\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAA0DC,cAAc,QAAQ,sBAAsB;AAEtG,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,SAAS,MAAM,cAAc;AAEpC,SAASC,eAAe,QAAQ,kCAAkC;AAmBlE,IAAMC,uBAAuB,GAAG,UAACC,OAAgC;EAAK,iBAACC,SAAiB;IACtF;IACA,IAAIA,SAAS,GAAG,CAAC,CAAC,EAAE;MAClBD,OAAO,CAACC,SAAS,CAAC;;EAEtB,CAAC;AALqE,CAKrE;AAED,eAAc,SAAUC,sBAAsB,CAACC,EAcjB;MAb5BC,qBAAqB;IACrBC,wBAAwB;IACxBC,mBAAmB;IACnBC,aAAa;IACbC,MAAM;IACNC,SAAS;IACTC,gBAAgB;IAChBC,cAAc;IACdC,iBAAiB;IACjBC,aAAa;IACbC,iBAAiB;IACjBC,yBAAyB;IACzBC,UAAU;EAEV,IAAMC,aAAa,GAAGlB,uBAAuB,CAACM,wBAAwB,CAACa,4BAA4B,CAAC;EACpG,IAAMC,eAAe,GAAGpB,uBAAuB,CAACM,wBAAwB,CAACe,+BAA+B,CAAC;EAEzG,IAAMC,aAAa,GAAGR,aAAa,GAAGjB,WAAW,GAAGC,SAAS;EAE7D,IAAMyB,YAAY,GAAGxB,eAAe,CAAC;IACnCyB,gBAAgB,EAAE,IAAI;IACtBC,iBAAiB,EAAEpB,qBAAqB,CAACoB,iBAAiB;IAC1DC,SAAS,EAAE,gBAAM;MAAA;MAAI,2BAAc,CAACC,MAAM,CAAC,0CAAEA,MAAiC;IAAA;IAC9EZ,iBAAiB;IACjBC,yBAAyB;GAC1B,CAAC;EAEF,OACErB,oBAAC2B,aAAa;IACZL,UAAU,EAAEA,UAAU;IACtBL,cAAc,EAAEA,cAAc;IAC9BP,qBAAqB,EAAEA,qBAAqB;IAC5CG,aAAa,EAAEA,aAAa;IAC5BG,gBAAgB,EAAEA,gBAAgB;IAClCiB,oBAAoB,EAAErB,mBAAmB,GAAG;MAAEsB,EAAE,EAAEtB;IAAmB,CAAE,GAAG,EAAE;IAC5EM,iBAAiB,EAAEA,iBAAiB;IACpCiB,SAAS,EAAE;MAAED,EAAE,EAAEpB,MAAM;MAAEsB,cAAc,EAAErB,SAAS;MAAEsB,SAAS,EAAEd,aAAa;MAAEe,WAAW,EAAEb;IAAe,CAAE;IAC5Gc,mBAAmB,EAAEX;EAAY,EACjC;AAEN","names":["React","getParentGroup","VirtualList","PlainList","useAnnouncement","createMouseEventHandler","handler","itemIndex","AutosuggestOptionsList","_a","autosuggestItemsState","autosuggestItemsHandlers","highlightedOptionId","highlightText","listId","controlId","enteredTextLabel","handleLoadMore","hasDropdownStatus","virtualScroll","selectedAriaLabel","renderHighlightedAriaLive","listBottom","handleMouseUp","selectVisibleOptionWithMouse","handleMouseMove","highlightVisibleOptionWithMouse","ListComponent","announcement","announceSelected","highlightedOption","getParent","option","highlightedA11yProps","id","menuProps","ariaLabelledby","onMouseUp","onMouseMove","screenReaderContent"],"sources":["/Users/dcastro/node_modules/src/autosuggest/options-list.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { AutosuggestItemsHandlers, AutosuggestItemsState, getParentGroup } from './options-controller';\nimport { AutosuggestProps } from './interfaces';\nimport VirtualList from './virtual-list';\nimport PlainList from './plain-list';\n\nimport { useAnnouncement } from '../select/utils/use-announcement';\nimport { OptionGroup } from '../internal/components/option/interfaces';\n\nexport interface AutosuggestOptionsListProps\n  extends Pick<\n    AutosuggestProps,\n    'enteredTextLabel' | 'virtualScroll' | 'selectedAriaLabel' | 'renderHighlightedAriaLive'\n  > {\n  autosuggestItemsState: AutosuggestItemsState;\n  autosuggestItemsHandlers: AutosuggestItemsHandlers;\n  highlightedOptionId?: string;\n  highlightText: string;\n  listId: string;\n  controlId: string;\n  handleLoadMore: () => void;\n  hasDropdownStatus?: boolean;\n  listBottom?: React.ReactNode;\n}\n\nconst createMouseEventHandler = (handler: (index: number) => void) => (itemIndex: number) => {\n  // prevent mouse events to avoid losing focus from the input\n  if (itemIndex > -1) {\n    handler(itemIndex);\n  }\n};\n\nexport default function AutosuggestOptionsList({\n  autosuggestItemsState,\n  autosuggestItemsHandlers,\n  highlightedOptionId,\n  highlightText,\n  listId,\n  controlId,\n  enteredTextLabel,\n  handleLoadMore,\n  hasDropdownStatus,\n  virtualScroll,\n  selectedAriaLabel,\n  renderHighlightedAriaLive,\n  listBottom,\n}: AutosuggestOptionsListProps) {\n  const handleMouseUp = createMouseEventHandler(autosuggestItemsHandlers.selectVisibleOptionWithMouse);\n  const handleMouseMove = createMouseEventHandler(autosuggestItemsHandlers.highlightVisibleOptionWithMouse);\n\n  const ListComponent = virtualScroll ? VirtualList : PlainList;\n\n  const announcement = useAnnouncement({\n    announceSelected: true,\n    highlightedOption: autosuggestItemsState.highlightedOption,\n    getParent: option => getParentGroup(option)?.option as undefined | OptionGroup,\n    selectedAriaLabel,\n    renderHighlightedAriaLive,\n  });\n\n  return (\n    <ListComponent\n      listBottom={listBottom}\n      handleLoadMore={handleLoadMore}\n      autosuggestItemsState={autosuggestItemsState}\n      highlightText={highlightText}\n      enteredTextLabel={enteredTextLabel}\n      highlightedA11yProps={highlightedOptionId ? { id: highlightedOptionId } : {}}\n      hasDropdownStatus={hasDropdownStatus}\n      menuProps={{ id: listId, ariaLabelledby: controlId, onMouseUp: handleMouseUp, onMouseMove: handleMouseMove }}\n      screenReaderContent={announcement}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}