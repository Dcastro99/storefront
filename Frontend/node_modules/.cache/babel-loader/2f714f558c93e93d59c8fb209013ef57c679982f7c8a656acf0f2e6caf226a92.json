{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalLink from '../../link/internal';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport { formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nexport function BucketsTable(_a) {\n  var forwardFocusRef = _a.forwardFocusRef,\n    i18nStrings = _a.i18nStrings,\n    isVisualRefresh = _a.isVisualRefresh,\n    isItemDisabled = _a.isItemDisabled,\n    selectableItemsTypes = _a.selectableItemsTypes,\n    fetchData = _a.fetchData,\n    visibleColumns = _a.visibleColumns,\n    onDrilldown = _a.onDrilldown,\n    onSelect = _a.onSelect;\n  return React.createElement(BasicS3Table, {\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"Name\",\n    fetchData: fetchData,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled || function () {\n      return !includes(selectableItemsTypes, 'buckets');\n    },\n    i18nStrings: __assign(__assign({}, getSharedI18Strings(i18nStrings)), {\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBuckets,\n      loadingText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsLoading,\n      filteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBuckets),\n      filteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsSearchPlaceholder,\n      emptyText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsNoItems,\n      selectionLabels: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsBucketsSelection\n    }),\n    isVisualRefresh: isVisualRefresh,\n    columnDefinitions: [{\n      id: 'Name',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketName,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketName),\n      sortingField: 'Name',\n      cell: function (item) {\n        var isClickable = includes(selectableItemsTypes, 'objects') || includes(selectableItemsTypes, 'versions');\n        return isClickable ? React.createElement(InternalLink, {\n          onFollow: function () {\n            return item.Name && onDrilldown(item.Name);\n          },\n          variant: \"link\"\n        }, item.Name) : item.Name;\n      },\n      minWidth: '250px'\n    }, {\n      id: 'CreationDate',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketCreationDate,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketCreationDate),\n      sortingComparator: function (a, b) {\n        return compareDates(a.CreationDate, b.CreationDate);\n      },\n      cell: function (item) {\n        return formatDefault(item.CreationDate);\n      }\n    }, {\n      id: 'Region',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketRegion,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketRegion),\n      sortingField: 'Region',\n      cell: function (item) {\n        return formatDefault(item.Region);\n      },\n      minWidth: '150px'\n    }],\n    onSelect: function (item) {\n      var _a;\n      return onSelect((_a = item === null || item === void 0 ? void 0 : item.Name) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["React","InternalLink","compareDates","getColumnAriaLabel","includes","formatDefault","BasicS3Table","getSharedI18Strings","BucketsTable","_a","forwardFocusRef","i18nStrings","isVisualRefresh","isItemDisabled","selectableItemsTypes","fetchData","visibleColumns","onDrilldown","onSelect","trackBy","header","selectionBuckets","loadingText","selectionBucketsLoading","filteringAriaLabel","labelFiltering","filteringPlaceholder","selectionBucketsSearchPlaceholder","emptyText","selectionBucketsNoItems","selectionLabels","labelsBucketsSelection","columnDefinitions","id","columnBucketName","ariaLabel","sortingField","cell","isClickable","onFollow","Name","item","variant","minWidth","columnBucketCreationDate","sortingComparator","a","b","CreationDate","columnBucketRegion","Region"],"sources":["/Users/dcastro/node_modules/src/s3-resource-selector/s3-modal/buckets-table.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalLink from '../../link/internal';\nimport { TableProps } from '../../table/interfaces';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport { formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\n\ninterface BucketsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Bucket> | undefined;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchData: S3ResourceSelectorProps['fetchBuckets'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onDrilldown: (path: string) => void;\n  onSelect: (uri: string) => void;\n}\n\nexport function BucketsTable({\n  forwardFocusRef,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  selectableItemsTypes,\n  fetchData,\n  visibleColumns,\n  onDrilldown,\n  onSelect,\n}: BucketsTableProps) {\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Bucket>\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"Name\"\n      fetchData={fetchData}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled || (() => !includes(selectableItemsTypes, 'buckets'))}\n      i18nStrings={{\n        ...getSharedI18Strings(i18nStrings),\n        header: i18nStrings?.selectionBuckets,\n        loadingText: i18nStrings?.selectionBucketsLoading,\n        filteringAriaLabel: i18nStrings?.labelFiltering(i18nStrings?.selectionBuckets),\n        filteringPlaceholder: i18nStrings?.selectionBucketsSearchPlaceholder,\n        emptyText: i18nStrings?.selectionBucketsNoItems,\n        selectionLabels: i18nStrings?.labelsBucketsSelection,\n      }}\n      isVisualRefresh={isVisualRefresh}\n      columnDefinitions={[\n        {\n          id: 'Name',\n          header: i18nStrings?.columnBucketName,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnBucketName),\n          sortingField: 'Name',\n          cell: item => {\n            const isClickable = includes(selectableItemsTypes, 'objects') || includes(selectableItemsTypes, 'versions');\n            return isClickable ? (\n              <InternalLink onFollow={() => item.Name && onDrilldown(item.Name)} variant=\"link\">\n                {item.Name}\n              </InternalLink>\n            ) : (\n              item.Name\n            );\n          },\n          minWidth: '250px',\n        },\n        {\n          id: 'CreationDate',\n          header: i18nStrings?.columnBucketCreationDate,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnBucketCreationDate),\n          sortingComparator: (a, b) => compareDates(a.CreationDate, b.CreationDate),\n          cell: item => formatDefault(item.CreationDate),\n        },\n        {\n          id: 'Region',\n          header: i18nStrings?.columnBucketRegion,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnBucketRegion),\n          sortingField: 'Region',\n          cell: item => formatDefault(item.Region),\n          minWidth: '150px',\n        },\n      ]}\n      onSelect={item => onSelect(item?.Name ?? '')}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}