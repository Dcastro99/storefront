{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useState } from 'react';\nimport { useResizeObserver } from '../../internal/hooks/container-queries';\nexport default function useAppLayoutOffsets(element) {\n  var _a = useState({\n      left: 0,\n      right: 0\n    }),\n    offsets = _a[0],\n    setOffsets = _a[1];\n  var updatePosition = useCallback(function () {\n    if (!element) {\n      return;\n    }\n    var _a = element.getBoundingClientRect(),\n      left = _a.left,\n      right = _a.right;\n    var bodyWidth = document.body.clientWidth;\n    setOffsets({\n      left: left,\n      right: bodyWidth - right\n    });\n  }, [element]);\n  useEffect(function () {\n    window.addEventListener('resize', updatePosition);\n    return function () {\n      return window.removeEventListener('resize', updatePosition);\n    };\n  }, [updatePosition]);\n  var getElement = useCallback(function () {\n    return element;\n  }, [element]);\n  useResizeObserver(getElement, updatePosition);\n  return offsets;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,iBAAiB,QAAQ,wCAAwC;AAE1E,eAAc,SAAUC,mBAAmB,CAACC,OAA8B;EAClE,SAAwBH,QAAQ,CAAC;MAAEI,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAC,CAAE,CAAC;IAAtDC,OAAO;IAAEC,UAAU,QAAmC;EAE7D,IAAMC,cAAc,GAAGV,WAAW,CAAC;IACjC,IAAI,CAACK,OAAO,EAAE;MACZ;;IAEI,SAAkBA,OAAO,CAACM,qBAAqB,EAAE;MAA/CL,IAAI;MAAEC,KAAK,WAAoC;IACvD,IAAMK,SAAS,GAAGC,QAAQ,CAACC,IAAI,CAACC,WAAW;IAE3CN,UAAU,CAAC;MAAEH,IAAI;MAAEC,KAAK,EAAEK,SAAS,GAAGL;IAAK,CAAE,CAAC;EAChD,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEbJ,SAAS,CAAC;IACRe,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEP,cAAc,CAAC;IACjD,OAAO;MAAM,aAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAER,cAAc,CAAC;IAApD,CAAoD;EACnE,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,IAAMS,UAAU,GAAGnB,WAAW,CAAC;IAAM,cAAO;EAAP,CAAO,EAAE,CAACK,OAAO,CAAC,CAAC;EACxDF,iBAAiB,CAACgB,UAAU,EAAET,cAAc,CAAC;EAE7C,OAAOF,OAAO;AAChB","names":["useCallback","useEffect","useState","useResizeObserver","useAppLayoutOffsets","element","left","right","offsets","setOffsets","updatePosition","getBoundingClientRect","bodyWidth","document","body","clientWidth","window","addEventListener","removeEventListener","getElement"],"sources":["/Users/dcastro/node_modules/src/app-layout/utils/use-content-width.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useState } from 'react';\nimport { useResizeObserver } from '../../internal/hooks/container-queries';\n\nexport default function useAppLayoutOffsets(element: HTMLDivElement | null): { left: number; right: number } {\n  const [offsets, setOffsets] = useState({ left: 0, right: 0 });\n\n  const updatePosition = useCallback(() => {\n    if (!element) {\n      return;\n    }\n    const { left, right } = element.getBoundingClientRect();\n    const bodyWidth = document.body.clientWidth;\n\n    setOffsets({ left, right: bodyWidth - right });\n  }, [element]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updatePosition);\n    return () => window.removeEventListener('resize', updatePosition);\n  }, [updatePosition]);\n\n  const getElement = useCallback(() => element, [element]);\n  useResizeObserver(getElement, updatePosition);\n\n  return offsets;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}