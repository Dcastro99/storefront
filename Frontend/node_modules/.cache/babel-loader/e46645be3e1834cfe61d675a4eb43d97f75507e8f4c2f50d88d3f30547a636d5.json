{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartSeriesDetails from '../internal/components/chart-series-details';\nimport styles from './styles.css.js';\nimport { Transition } from '../internal/components/transition';\nexport default function MixedChartPopover(_a) {\n  var containerRef = _a.containerRef,\n    trackRef = _a.trackRef,\n    isOpen = _a.isOpen,\n    isPinned = _a.isPinned,\n    highlightDetails = _a.highlightDetails,\n    onDismiss = _a.onDismiss,\n    _b = _a.size,\n    size = _b === void 0 ? 'medium' : _b,\n    dismissAriaLabel = _a.dismissAriaLabel;\n  return React.createElement(Transition, {\n    \"in\": isOpen\n  }, function (state, ref) {\n    return React.createElement(\"div\", {\n      ref: ref,\n      className: clsx(state === 'exiting' && styles.exiting)\n    }, (isOpen || state !== 'exited') && highlightDetails && React.createElement(ChartPopover, {\n      title: highlightDetails.position,\n      trackRef: trackRef,\n      trackKey: highlightDetails.position,\n      dismissButton: isPinned,\n      dismissAriaLabel: dismissAriaLabel,\n      onDismiss: onDismiss,\n      container: containerRef.current,\n      size: size\n    }, React.createElement(ChartSeriesDetails, {\n      details: highlightDetails.details\n    })));\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,kBAAkB,MAAM,6CAA6C;AAG5E,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,UAAU,QAAQ,mCAAmC;AAc9D,eAAc,SAAUC,iBAAiB,CAA2BC,EASxC;MAR1BC,YAAY;IACZC,QAAQ;IACRC,MAAM;IACNC,QAAQ;IACRC,gBAAgB;IAChBC,SAAS;IACTC,YAAe;IAAfC,IAAI,mBAAG,QAAQ;IACfC,gBAAgB;EAEhB,OACEhB,oBAACK,UAAU;IAAC,IAAE,EAAEK;EAAM,GACnB,UAACO,KAAK,EAAEC,GAAG;IAAK,OACflB;MAAKkB,GAAG,EAAEA,GAAG;MAAEC,SAAS,EAAElB,IAAI,CAACgB,KAAK,KAAK,SAAS,IAAIb,MAAM,CAACgB,OAAO;IAAC,GAClE,CAACV,MAAM,IAAIO,KAAK,KAAK,QAAQ,KAAKL,gBAAgB,IACjDZ,oBAACE,YAAY;MACXmB,KAAK,EAAET,gBAAgB,CAACU,QAAQ;MAChCb,QAAQ,EAAEA,QAAQ;MAClBc,QAAQ,EAAEX,gBAAgB,CAACU,QAAQ;MACnCE,aAAa,EAAEb,QAAQ;MACvBK,gBAAgB,EAAEA,gBAAgB;MAClCH,SAAS,EAAEA,SAAS;MACpBY,SAAS,EAAEjB,YAAY,CAACkB,OAAO;MAC/BX,IAAI,EAAEA;IAAI,GAEVf,oBAACG,kBAAkB;MAACwB,OAAO,EAAEf,gBAAgB,CAACe;IAAO,EAAI,CAE5D,CACG;EAhBS,CAiBhB,CACU;AAEjB","names":["React","clsx","ChartPopover","ChartSeriesDetails","styles","Transition","MixedChartPopover","_a","containerRef","trackRef","isOpen","isPinned","highlightDetails","onDismiss","_b","size","dismissAriaLabel","state","ref","className","exiting","title","position","trackKey","dismissButton","container","current","details"],"sources":["/Users/dcastro/node_modules/src/mixed-line-bar-chart/chart-popover.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartSeriesDetails from '../internal/components/chart-series-details';\nimport { ChartDataTypes, MixedLineBarChartProps } from './interfaces';\n\nimport styles from './styles.css.js';\nimport { Transition } from '../internal/components/transition';\nimport { HighlightDetails } from './format-highlighted';\n\nexport interface MixedChartPopoverProps<T extends ChartDataTypes> {\n  containerRef: React.RefObject<HTMLDivElement>;\n  trackRef: React.RefObject<SVGElement>;\n  isOpen: boolean;\n  isPinned: boolean;\n  highlightDetails: null | HighlightDetails;\n  onDismiss(): void;\n  size: MixedLineBarChartProps<T>['detailPopoverSize'];\n  dismissAriaLabel?: string;\n}\n\nexport default function MixedChartPopover<T extends ChartDataTypes>({\n  containerRef,\n  trackRef,\n  isOpen,\n  isPinned,\n  highlightDetails,\n  onDismiss,\n  size = 'medium',\n  dismissAriaLabel,\n}: MixedChartPopoverProps<T>) {\n  return (\n    <Transition in={isOpen}>\n      {(state, ref) => (\n        <div ref={ref} className={clsx(state === 'exiting' && styles.exiting)}>\n          {(isOpen || state !== 'exited') && highlightDetails && (\n            <ChartPopover\n              title={highlightDetails.position}\n              trackRef={trackRef}\n              trackKey={highlightDetails.position}\n              dismissButton={isPinned}\n              dismissAriaLabel={dismissAriaLabel}\n              onDismiss={onDismiss}\n              container={containerRef.current}\n              size={size}\n            >\n              <ChartSeriesDetails details={highlightDetails.details} />\n            </ChartPopover>\n          )}\n        </div>\n      )}\n    </Transition>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}