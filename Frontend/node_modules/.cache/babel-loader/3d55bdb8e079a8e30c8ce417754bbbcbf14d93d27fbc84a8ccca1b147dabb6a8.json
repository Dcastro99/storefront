{"ast":null,"code":"import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport Arrow from '../popover/arrow';\nimport PopoverContainer from '../popover/container';\nimport PopoverBody from '../popover/body';\nimport Portal from '../internal/components/portal';\nimport { usePortalModeClasses } from '../internal/hooks/use-portal-mode-classes';\nimport { useReducedMotion } from '../internal/hooks/use-visual-mode';\nvar DEFAULT_OPEN_TIMEOUT_IN_MS = 120;\nexport default function Tooltip(_a) {\n  var children = _a.children,\n    content = _a.content,\n    _b = _a.position,\n    position = _b === void 0 ? 'right' : _b;\n  var ref = useRef(null);\n  var isReducedMotion = useReducedMotion(ref);\n  var _c = useTooltipOpen(isReducedMotion ? 0 : DEFAULT_OPEN_TIMEOUT_IN_MS),\n    open = _c.open,\n    triggerProps = _c.triggerProps;\n  var portalClasses = usePortalModeClasses(ref);\n  return React.createElement(\"span\", __assign({\n    ref: ref\n  }, triggerProps), children, open && React.createElement(Portal, null, React.createElement(\"span\", {\n    className: portalClasses\n  }, React.createElement(PopoverContainer, {\n    size: \"small\",\n    fixedWidth: false,\n    position: position,\n    trackRef: ref,\n    arrow: function (position) {\n      return React.createElement(Arrow, {\n        position: position\n      });\n    },\n    renderWithPortal: true,\n    zIndex: 7000\n  }, React.createElement(PopoverBody, {\n    dismissButton: false,\n    dismissAriaLabel: undefined,\n    header: null,\n    onDismiss: function () {},\n    overflowVisible: \"both\"\n  }, React.createElement(\"span\", {\n    \"data-testid\": \"button-dropdown-disabled-reason\",\n    role: \"tooltip\"\n  }, content))))));\n}\nfunction useTooltipOpen(timeout) {\n  var handle = useRef();\n  var _a = useState(false),\n    isOpen = _a[0],\n    setIsOpen = _a[1];\n  var close = function () {\n    clearTimeout(handle.current);\n    setIsOpen(false);\n  };\n  var open = function () {\n    return setIsOpen(true);\n  };\n  var openDelayed = function () {\n    handle.current = setTimeout(open, timeout);\n  };\n  var onKeyDown = function (e) {\n    if (isOpen && isEscape(e.key)) {\n      e.preventDefault();\n      e.stopPropagation();\n      close();\n    }\n  };\n  var onFocus = openDelayed;\n  var onBlur = close;\n  return {\n    open: isOpen,\n    triggerProps: {\n      onBlur: onBlur,\n      onFocus: onFocus,\n      onKeyDown: onKeyDown\n    }\n  };\n}\nvar isEscape = function (key) {\n  return key === 'Escape' || key === 'Esc';\n};","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAA0BC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAErE,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,gBAAgB,MAAM,sBAAsB;AACnD,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,SAASC,oBAAoB,QAAQ,2CAA2C;AAChF,SAASC,gBAAgB,QAAQ,mCAAmC;AAQpE,IAAMC,0BAA0B,GAAG,GAAG;AAEtC,eAAc,SAAUC,OAAO,CAACC,EAAuD;MAArDC,QAAQ;IAAEC,OAAO;IAAEC,gBAAkB;IAAlBC,QAAQ,mBAAG,OAAO;EACrE,IAAMC,GAAG,GAAGf,MAAM,CAAyB,IAAI,CAAC;EAChD,IAAMgB,eAAe,GAAGT,gBAAgB,CAACQ,GAAG,CAAC;EACvC,SAAyBE,cAAc,CAACD,eAAe,GAAG,CAAC,GAAGR,0BAA0B,CAAC;IAAvFU,IAAI;IAAEC,YAAY,kBAAqE;EAC/F,IAAMC,aAAa,GAAGd,oBAAoB,CAACS,GAAG,CAAC;EAE/C,OACEhB;IAAMgB,GAAG,EAAEA;EAAG,GAAMI,YAAY,GAC7BR,QAAQ,EACRO,IAAI,IACHnB,oBAACM,MAAM,QACLN;IAAMsB,SAAS,EAAED;EAAa,GAC5BrB,oBAACI,gBAAgB;IACfmB,IAAI,EAAC,OAAO;IACZC,UAAU,EAAE,KAAK;IACjBT,QAAQ,EAAEA,QAAQ;IAClBU,QAAQ,EAAET,GAAG;IACbU,KAAK,EAAE,kBAAQ;MAAI,2BAACvB,KAAK;QAACY,QAAQ,EAAEA;MAAQ,EAAI;IAA7B,CAA6B;IAChDY,gBAAgB,EAAE,IAAI;IACtBC,MAAM,EAAE;EAAI,GAEZ5B,oBAACK,WAAW;IACVwB,aAAa,EAAE,KAAK;IACpBC,gBAAgB,EAAEC,SAAS;IAC3BC,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,aAAO,CAAC;IACnBC,eAAe,EAAC;EAAM,GAEtBlC;IAAA,eAAkB,iCAAiC;IAACmC,IAAI,EAAC;EAAS,GAC/DtB,OAAO,CACH,CACK,CACG,CACd,CAEV,CACI;AAEX;AAEA,SAASK,cAAc,CAACkB,OAAe;EACrC,IAAMC,MAAM,GAAGpC,MAAM,EAAU;EACzB,SAAsBC,QAAQ,CAAC,KAAK,CAAC;IAApCoC,MAAM;IAAEC,SAAS,QAAmB;EAE3C,IAAMC,KAAK,GAAG;IACZC,YAAY,CAACJ,MAAM,CAACK,OAAO,CAAC;IAC5BH,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EACD,IAAMpB,IAAI,GAAG;IAAM,gBAAS,CAAC,IAAI,CAAC;EAAf,CAAe;EAClC,IAAMwB,WAAW,GAAG;IAClBN,MAAM,CAACK,OAAO,GAAGE,UAAU,CAACzB,IAAI,EAAEiB,OAAO,CAAC;EAC5C,CAAC;EACD,IAAMS,SAAS,GAAyB,WAAC;IACvC,IAAIP,MAAM,IAAIQ,QAAQ,CAACC,CAAC,CAACC,GAAG,CAAC,EAAE;MAC7BD,CAAC,CAACE,cAAc,EAAE;MAClBF,CAAC,CAACG,eAAe,EAAE;MACnBV,KAAK,EAAE;;EAEX,CAAC;EAED,IAAMW,OAAO,GAAGR,WAAW;EAC3B,IAAMS,MAAM,GAAGZ,KAAK;EAEpB,OAAO;IACLrB,IAAI,EAAEmB,MAAM;IACZlB,YAAY,EAAE;MACZgC,MAAM;MACND,OAAO;MACPN,SAAS;;GAEZ;AACH;AAEA,IAAMC,QAAQ,GAAG,UAACE,GAAW;EAAK,UAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,KAAK;AAAjC,CAAiC","names":["React","useRef","useState","Arrow","PopoverContainer","PopoverBody","Portal","usePortalModeClasses","useReducedMotion","DEFAULT_OPEN_TIMEOUT_IN_MS","Tooltip","_a","children","content","_b","position","ref","isReducedMotion","useTooltipOpen","open","triggerProps","portalClasses","className","size","fixedWidth","trackRef","arrow","renderWithPortal","zIndex","dismissButton","dismissAriaLabel","undefined","header","onDismiss","overflowVisible","role","timeout","handle","isOpen","setIsOpen","close","clearTimeout","current","openDelayed","setTimeout","onKeyDown","isEscape","e","key","preventDefault","stopPropagation","onFocus","onBlur"],"sources":["/Users/dcastro/node_modules/src/button-dropdown/tooltip.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { KeyboardEventHandler, useRef, useState } from 'react';\n\nimport Arrow from '../popover/arrow';\nimport PopoverContainer from '../popover/container';\nimport PopoverBody from '../popover/body';\nimport Portal from '../internal/components/portal';\nimport { usePortalModeClasses } from '../internal/hooks/use-portal-mode-classes';\nimport { useReducedMotion } from '../internal/hooks/use-visual-mode';\n\nexport interface TooltipProps {\n  children?: React.ReactNode;\n  content?: React.ReactNode;\n  position?: 'top' | 'right' | 'bottom' | 'left';\n}\n\nconst DEFAULT_OPEN_TIMEOUT_IN_MS = 120;\n\nexport default function Tooltip({ children, content, position = 'right' }: TooltipProps) {\n  const ref = useRef<HTMLSpanElement | null>(null);\n  const isReducedMotion = useReducedMotion(ref);\n  const { open, triggerProps } = useTooltipOpen(isReducedMotion ? 0 : DEFAULT_OPEN_TIMEOUT_IN_MS);\n  const portalClasses = usePortalModeClasses(ref);\n\n  return (\n    <span ref={ref} {...triggerProps}>\n      {children}\n      {open && (\n        <Portal>\n          <span className={portalClasses}>\n            <PopoverContainer\n              size=\"small\"\n              fixedWidth={false}\n              position={position}\n              trackRef={ref}\n              arrow={position => <Arrow position={position} />}\n              renderWithPortal={true}\n              zIndex={7000}\n            >\n              <PopoverBody\n                dismissButton={false}\n                dismissAriaLabel={undefined}\n                header={null}\n                onDismiss={() => {}}\n                overflowVisible=\"both\"\n              >\n                <span data-testid=\"button-dropdown-disabled-reason\" role=\"tooltip\">\n                  {content}\n                </span>\n              </PopoverBody>\n            </PopoverContainer>\n          </span>\n        </Portal>\n      )}\n    </span>\n  );\n}\n\nfunction useTooltipOpen(timeout: number) {\n  const handle = useRef<number>();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const close = () => {\n    clearTimeout(handle.current);\n    setIsOpen(false);\n  };\n  const open = () => setIsOpen(true);\n  const openDelayed = () => {\n    handle.current = setTimeout(open, timeout);\n  };\n  const onKeyDown: KeyboardEventHandler = e => {\n    if (isOpen && isEscape(e.key)) {\n      e.preventDefault();\n      e.stopPropagation();\n      close();\n    }\n  };\n\n  const onFocus = openDelayed;\n  const onBlur = close;\n\n  return {\n    open: isOpen,\n    triggerProps: {\n      onBlur,\n      onFocus,\n      onKeyDown,\n    },\n  };\n}\n\nconst isEscape = (key: string) => key === 'Escape' || key === 'Esc';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}