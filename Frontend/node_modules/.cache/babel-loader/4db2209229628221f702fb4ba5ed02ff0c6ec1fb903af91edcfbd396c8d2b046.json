{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\nimport { ALWAYS_VISUAL_REFRESH } from '../../environment';\nimport { isMotionDisabled } from '../../motion';\nimport { findUpUntil } from '../../utils/dom';\nimport { useMutationObserver } from '../use-mutation-observer';\nexport function useCurrentMode(elementRef) {\n  var _a = useState('light'),\n    value = _a[0],\n    setValue = _a[1];\n  useMutationObserver(elementRef, function (node) {\n    var darkModeParent = findUpUntil(node, function (node) {\n      return node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode');\n    });\n    setValue(darkModeParent ? 'dark' : 'light');\n  });\n  return value;\n}\nexport function useDensityMode(elementRef) {\n  var _a = useState('comfortable'),\n    value = _a[0],\n    setValue = _a[1];\n  useMutationObserver(elementRef, function (node) {\n    var compactModeParent = findUpUntil(node, function (node) {\n      return node.classList.contains('awsui-polaris-compact-mode') || node.classList.contains('awsui-compact-mode');\n    });\n    setValue(compactModeParent ? 'compact' : 'comfortable');\n  });\n  return value;\n}\n// We expect VR is to be set only once and before the application is rendered.\nvar visualRefreshState = undefined;\nexport function useVisualRefresh() {\n  var _a, _b;\n  if (visualRefreshState === undefined) {\n    var supportsCSSVariables = typeof window !== 'undefined' && ((_b = (_a = window.CSS) === null || _a === void 0 ? void 0 : _a.supports) === null || _b === void 0 ? void 0 : _b.call(_a, 'color', 'var(--test-var)'));\n    if (ALWAYS_VISUAL_REFRESH) {\n      visualRefreshState = true;\n    } else if (!supportsCSSVariables) {\n      visualRefreshState = false;\n    } else {\n      visualRefreshState = !!document.querySelector('.awsui-visual-refresh');\n    }\n  }\n  return visualRefreshState;\n}\nexport function useReducedMotion(elementRef) {\n  var _a = useState(false),\n    value = _a[0],\n    setValue = _a[1];\n  useMutationObserver(elementRef, function (node) {\n    setValue(isMotionDisabled(node));\n  });\n  return value;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAgBA,QAAQ,QAAQ,OAAO;AACvC,SAASC,qBAAqB,QAAQ,mBAAmB;AACzD,SAASC,gBAAgB,QAAQ,cAAc;AAC/C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,OAAM,SAAUC,cAAc,CAACC,UAAwC;EAC/D,SAAoBN,QAAQ,CAAmB,OAAO,CAAC;IAAtDO,KAAK;IAAEC,QAAQ,QAAuC;EAC7DJ,mBAAmB,CAACE,UAAU,EAAE,cAAI;IAClC,IAAMG,cAAc,GAAGN,WAAW,CAChCO,IAAI,EACJ,cAAI;MAAI,WAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,yBAAyB,CAAC,IAAIF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,iBAAiB,CAAC;IAAhG,CAAgG,CACzG;IACDJ,QAAQ,CAACC,cAAc,GAAG,MAAM,GAAG,OAAO,CAAC;EAC7C,CAAC,CAAC;EACF,OAAOF,KAAK;AACd;AAEA,OAAM,SAAUM,cAAc,CAACP,UAAwC;EAC/D,SAAoBN,QAAQ,CAA4B,aAAa,CAAC;IAArEO,KAAK;IAAEC,QAAQ,QAAsD;EAC5EJ,mBAAmB,CAACE,UAAU,EAAE,cAAI;IAClC,IAAMQ,iBAAiB,GAAGX,WAAW,CACnCO,IAAI,EACJ,cAAI;MAAI,WAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,4BAA4B,CAAC,IAAIF,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,oBAAoB,CAAC;IAAtG,CAAsG,CAC/G;IACDJ,QAAQ,CAACM,iBAAiB,GAAG,SAAS,GAAG,aAAa,CAAC;EACzD,CAAC,CAAC;EACF,OAAOP,KAAK;AACd;AAEA;AACA,IAAIQ,kBAAkB,GAAwBC,SAAS;AAEvD,OAAM,SAAUC,gBAAgB;;EAC9B,IAAIF,kBAAkB,KAAKC,SAAS,EAAE;IACpC,IAAME,oBAAoB,GAAG,OAAOC,MAAM,KAAK,WAAW,KAAI,kBAAM,CAACC,GAAG,0CAAEC,QAAQ,mDAAG,OAAO,EAAE,iBAAiB,CAAC;IAEhH,IAAIpB,qBAAqB,EAAE;MACzBc,kBAAkB,GAAG,IAAI;KAC1B,MAAM,IAAI,CAACG,oBAAoB,EAAE;MAChCH,kBAAkB,GAAG,KAAK;KAC3B,MAAM;MACLA,kBAAkB,GAAG,CAAC,CAACO,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC;;;EAG1E,OAAOR,kBAAkB;AAC3B;AAEA,OAAM,SAAUS,gBAAgB,CAAClB,UAAwC;EACjE,SAAoBN,QAAQ,CAAC,KAAK,CAAC;IAAlCO,KAAK;IAAEC,QAAQ,QAAmB;EACzCJ,mBAAmB,CAACE,UAAU,EAAE,cAAI;IAClCE,QAAQ,CAACN,gBAAgB,CAACQ,IAAI,CAAC,CAAC;EAClC,CAAC,CAAC;EACF,OAAOH,KAAK;AACd","names":["useState","ALWAYS_VISUAL_REFRESH","isMotionDisabled","findUpUntil","useMutationObserver","useCurrentMode","elementRef","value","setValue","darkModeParent","node","classList","contains","useDensityMode","compactModeParent","visualRefreshState","undefined","useVisualRefresh","supportsCSSVariables","window","CSS","supports","document","querySelector","useReducedMotion"],"sources":["/Users/dcastro/node_modules/src/internal/hooks/use-visual-mode/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport { ALWAYS_VISUAL_REFRESH } from '../../environment';\nimport { isMotionDisabled } from '../../motion';\nimport { findUpUntil } from '../../utils/dom';\nimport { useMutationObserver } from '../use-mutation-observer';\n\nexport function useCurrentMode(elementRef: React.RefObject<HTMLElement>) {\n  const [value, setValue] = useState<'light' | 'dark'>('light');\n  useMutationObserver(elementRef, node => {\n    const darkModeParent = findUpUntil(\n      node,\n      node => node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode')\n    );\n    setValue(darkModeParent ? 'dark' : 'light');\n  });\n  return value;\n}\n\nexport function useDensityMode(elementRef: React.RefObject<HTMLElement>) {\n  const [value, setValue] = useState<'comfortable' | 'compact'>('comfortable');\n  useMutationObserver(elementRef, node => {\n    const compactModeParent = findUpUntil(\n      node,\n      node => node.classList.contains('awsui-polaris-compact-mode') || node.classList.contains('awsui-compact-mode')\n    );\n    setValue(compactModeParent ? 'compact' : 'comfortable');\n  });\n  return value;\n}\n\n// We expect VR is to be set only once and before the application is rendered.\nlet visualRefreshState: undefined | boolean = undefined;\n\nexport function useVisualRefresh() {\n  if (visualRefreshState === undefined) {\n    const supportsCSSVariables = typeof window !== 'undefined' && window.CSS?.supports?.('color', 'var(--test-var)');\n\n    if (ALWAYS_VISUAL_REFRESH) {\n      visualRefreshState = true;\n    } else if (!supportsCSSVariables) {\n      visualRefreshState = false;\n    } else {\n      visualRefreshState = !!document.querySelector('.awsui-visual-refresh');\n    }\n  }\n  return visualRefreshState;\n}\n\nexport function useReducedMotion(elementRef: React.RefObject<HTMLElement>) {\n  const [value, setValue] = useState(false);\n  useMutationObserver(elementRef, node => {\n    setValue(isMotionDisabled(node));\n  });\n  return value;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}