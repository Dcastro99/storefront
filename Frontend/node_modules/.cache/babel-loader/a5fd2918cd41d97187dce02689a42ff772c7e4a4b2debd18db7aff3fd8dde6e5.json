{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyCode } from '../../keycode';\nimport { createSingletonState } from '../use-singleton-handler';\nvar useFocusSingleton = createSingletonState({\n  initialState: false,\n  factory: function (setIsKeyboard) {\n    var handleMousedown = function () {\n      return setIsKeyboard(false);\n    };\n    var handleKeydown = function (event) {\n      // we do not want to highlight focused element\n      // when special keys are pressed\n      var isSpecialKey = [KeyCode.shift, KeyCode.alt, KeyCode.control, KeyCode.meta].indexOf(event.keyCode) > -1;\n      if (!isSpecialKey) {\n        setIsKeyboard(true);\n      }\n    };\n    document.addEventListener('mousedown', handleMousedown);\n    document.addEventListener('keydown', handleKeydown);\n    return function () {\n      document.removeEventListener('mousedown', handleMousedown);\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }\n});\nexport default function useFocusVisible() {\n  var visible = useFocusSingleton();\n  return visible ? {\n    'data-awsui-focus-visible': visible\n  } : {};\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,oBAAoB,QAAQ,0BAA0B;AAE/D,IAAMC,iBAAiB,GAAGD,oBAAoB,CAAU;EACtDE,YAAY,EAAE,KAAK;EACnBC,OAAO,EAAE,uBAAa;IACpB,IAAMC,eAAe,GAAG;MAAM,oBAAa,CAAC,KAAK,CAAC;IAApB,CAAoB;IAClD,IAAMC,aAAa,GAAG,UAACC,KAAoB;MACzC;MACA;MACA,IAAMC,YAAY,GAAG,CAACR,OAAO,CAACS,KAAK,EAAET,OAAO,CAACU,GAAG,EAAEV,OAAO,CAACW,OAAO,EAAEX,OAAO,CAACY,IAAI,CAAC,CAACC,OAAO,CAACN,KAAK,CAACO,OAAO,CAAC,GAAG,CAAC,CAAC;MAE5G,IAAI,CAACN,YAAY,EAAE;QACjBO,aAAa,CAAC,IAAI,CAAC;;IAEvB,CAAC;IACDC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEZ,eAAe,CAAC;IACvDW,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEX,aAAa,CAAC;IACnD,OAAO;MACLU,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEb,eAAe,CAAC;MAC1DW,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEZ,aAAa,CAAC;IACxD,CAAC;EACH;CACD,CAAC;AAEF,eAAc,SAAUa,eAAe;EACrC,IAAMC,OAAO,GAAGlB,iBAAiB,EAAE;EACnC,OAAOkB,OAAO,GAAG;IAAE,0BAA0B,EAAEA;EAAO,CAAE,GAAG,EAAE;AAC/D","names":["KeyCode","createSingletonState","useFocusSingleton","initialState","factory","handleMousedown","handleKeydown","event","isSpecialKey","shift","alt","control","meta","indexOf","keyCode","setIsKeyboard","document","addEventListener","removeEventListener","useFocusVisible","visible"],"sources":["/Users/dcastro/node_modules/src/internal/hooks/focus-visible/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyCode } from '../../keycode';\nimport { createSingletonState } from '../use-singleton-handler';\n\nconst useFocusSingleton = createSingletonState<boolean>({\n  initialState: false,\n  factory: setIsKeyboard => {\n    const handleMousedown = () => setIsKeyboard(false);\n    const handleKeydown = (event: KeyboardEvent) => {\n      // we do not want to highlight focused element\n      // when special keys are pressed\n      const isSpecialKey = [KeyCode.shift, KeyCode.alt, KeyCode.control, KeyCode.meta].indexOf(event.keyCode) > -1;\n\n      if (!isSpecialKey) {\n        setIsKeyboard(true);\n      }\n    };\n    document.addEventListener('mousedown', handleMousedown);\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('mousedown', handleMousedown);\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  },\n});\n\nexport default function useFocusVisible() {\n  const visible = useFocusSingleton();\n  return visible ? { 'data-awsui-focus-visible': visible } : {};\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}